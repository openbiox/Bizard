[
  {
    "objectID": "Template/contribution_0323.html",
    "href": "Template/contribution_0323.html",
    "title": "中文",
    "section": "",
    "text": "先建图表征集issue，进行审核确定：\n\n根据目标任务确定执行的可视化图表类型。\n\n分别按图表建issue让成员列资料\n\n确定创建可视化教程所需的生物医学数据类型；\n根据可视化应用场景优化教程撰写的侧重点（eg. 需要着重介绍的函数/参数、是否要加入常用统计学分析）。\n\n分配成员申领完成\n完成图文撰写需要遵循项目文档规范\n\n参考根据现有可视化教程制作的qmd文档撰写；\n主要模块：可视化图表及其应用场景介绍、环境配置、基础绘图代码、进阶绘图代码、生物医学领域应用（及复现）……\n\n翻译任务的申领和处理"
  },
  {
    "objectID": "Ranking/VennPlot.html",
    "href": "Ranking/VennPlot.html",
    "title": "韦恩图",
    "section": "",
    "text": "对于Venn图的可视化，常用的R包有ggVennDiagram和VennDiagram包，相比于VennDiagram包而言ggVennDiagram具有适用于更多分组、可以适配ggplot2语法和可以灵活设置的输出格式等优点，学习和后期处理更简单。然而ggVennDiagram的集合颜色只能设置为与元素个数相关的连续型渐变色，不能设置为每个集合一种颜色的离散型色彩，VennDiagram则恰好相反，因此可以根据具体需求选择需要使用哪个R包进行绘图。",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#示例",
    "href": "Ranking/VennPlot.html#示例",
    "title": "韦恩图",
    "section": "示例",
    "text": "示例",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#环境配置",
    "href": "Ranking/VennPlot.html#环境配置",
    "title": "韦恩图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：ggplot2; ggVennDiagram; VennDiagram\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggVennDiagram\", quietly = TRUE)) {\n  install.packages(\"ggVennDiagram\")\n}\nif (!requireNamespace(\"VennDiagram\", quietly = TRUE)) {\n  install.packages(\"VennDiagram\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggVennDiagram)\nlibrary(VennDiagram)",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#数据准备",
    "href": "Ranking/VennPlot.html#数据准备",
    "title": "韦恩图",
    "section": "数据准备",
    "text": "数据准备\n数据使用模拟基因集，假设我们有多组不同的处理A~D，在不同处理下各自产生了一定数量的差异表达基因。 ggVennDiagram要求的输入格式为一个list，list中的每个元素都需要有对应的名称以及包含的子元素。\n\ngenes &lt;- paste(\"gene\",1:1000,sep=\"\")\nset.seed(123)\nx &lt;- list(A=sample(genes,300),\n          B=sample(genes,525),\n          C=sample(genes,440),\n          D=sample(genes,350))",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#可视化",
    "href": "Ranking/VennPlot.html#可视化",
    "title": "韦恩图",
    "section": "可视化",
    "text": "可视化\n\n\n\n\n\n\n提示\n\n\n\nggVennDiagram基本参数:\n\nx: 需要输入的list集合数据\ncategory.names: 集合名称，默认为list中定义的名称\nshow_intersect: 设置为TRUE时，输出可交互式图像\nset_color: 集合的描边颜色，可输入一个或数量与集合一致的颜色\nset_size: 集合标签的大小\nlabel: 集合中数字标签的类型，可从”both”, “count”, “percent”, “none”中选择一个输入，默认为”both”\nlabel_alpha: 数字标签的背景透明度\nlabel_geom: 数字标签的图层位置，可从”label”, “text”中选择一个，默认为”label”，当输入”text“时标签将位于集合色块的下方\nlabel_color: 数字标签的颜色\nlabel_size: 数字标签的大小\nlabel_percent_digit: 数字标签的小数保留位数\nlabel_txtWidth: 在交互模式时，显示交集元素的文本框宽度\nedge_lty: 集合描边的线条类型，默认为”solid“实线，其他可以设置的线条类型有：“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, “twodash”\nedge_size: 集合描边的线条宽度\nforce_upset: 是否使用upset图展示交集情况\nnintersects: 绘图采用的集合数量，如果为NULL则使用所有的集合\norder.intersect.by: 绘制upset图时交集的排列方式\norder.set.by: 绘制upset图时集合的排列方式\nrelative_height: 绘制upset图时上方柱状图的相对高度\nrelative_width: 绘制upset图时左侧柱状图的相对宽度\n\n\n\n\n1. 基础韦恩图\n\n# 基础韦恩图\nggVennDiagram(x)\n\n\n\n\n\n\n\n图 1: 基础韦恩图\n\n\n\n\n\n此图展示了在不同处理下差异基因的交集情况。\n\n\n2. 美化韦恩图\nggVennDiagram中集合的颜色是根据集合中包含的元素数量设置的连续型变量。可以通过ggplot2中的scale_fill_gradient或scale_fill_gradient2等函数修改集合颜色，例如使用以下代码实现连续色彩设置：\n\n# 颜色设置\nggVennDiagram(x) + scale_fill_gradient(low=\"grey90\",high = \"red\")\n\n\n\n\n\n\n\n图 2: 颜色设置\n\n\n\n\n\n也可以使用scale_fill_gradient2来更自由地定义颜色：\n\n# 颜色设置\nggVennDiagram(x) + scale_fill_gradient2(low=\"grey90\",mid = \"yellow\",midpoint = 100,high = \"red\")\n\n\n\n\n\n\n\n图 3: 颜色设置\n\n\n\n\n\n更复杂的色彩设置可以通过调用调色板完成：\n\n# 颜色设置\nggVennDiagram(x) + scale_fill_distiller(palette = \"Set1\") \n\n\n\n\n\n\n\n图 4: 颜色设置\n\n\n\n\n\n需要自定义调色板也非常简单：\n\n# 颜色设置\ncols &lt;- c('#E64E00','#65B48E','#E6EB00','#E64E00')\npal &lt;- colorRampPalette(cols)\nggVennDiagram(x) + scale_fill_gradientn(colors = pal(10)) # 数字为色阶数量\n\n\n\n\n\n\n\n图 5: 颜色设置\n\n\n\n\n\nggVennDiagram同样可以通过edge_lty、edge_size、set_color自定义集合的边框。\n\n# 边框设置\nggVennDiagram(x, set_color=c(\"blue\",\"red\",\"green\",\"purple\"), edge_lty=\"dashed\", edge_size=2)\n\n\n\n\n\n\n\n图 6: 边框设置\n\n\n\n\n\n字体设置可以通过以下参数修改：\n\n# 字体设置\n# 下列参数中较为特殊的是label，label的四个可选输入中\"percent\"为仅显示百分比， \"count\"为仅显示数量，“none”为不显示。\nggVennDiagram(x, set_size = 5, label = \"percent\", label_alpha = 0, \n              label_color = \"red\", label_size = 5, label_percent_digit = 2)\n\n\n\n\n\n\n\n图 7: 字体设置\n\n\n\n\n\n\n\n3. VennDiagram\n我们还可以通过VennDiagram包来绘制韦恩图。\n\n\n\n\n\n\n提示\n\n\n\nvenn.diagram基本参数:\n\nx: 需要输入的list集合数据\nfilename: 输出文件名\nimagetype: 输出文件类型可从”tiff”,“png”,“svg”中选择\nunits: 图片尺寸单位可从”cm”,“px”,“unit”中选择\nheight: 图片高度\nwidth: 图片宽度\nresolution: 图片分辨率\ncompression: 图片压缩算法\nscaled: 根据比例显示集合大小\nalpha: 集合透明度\nfill: 集合颜色\ncol: 线条颜色\nlwd: 线条粗细\nlty: 线条形状，1为实线, 2为虚线, blank为无线条\nlabel.col: 数字颜色\ncex: 数字大小\ncat.dist: 标签距离集合的远近\ncat.pos: 标签相对于集合的角度\ncat.cex: 标签字体大小\ncat.col: 标签颜色\n\n\n\nVennDiagram包的核心函数为venn.diagram，该函数不能直接将图像绘制到画板上，可以通过与grid::grid.draw()函数配合将图像绘制到画板。\n\np &lt;- venn.diagram(x,filename = NULL);grid::grid.draw(p)\n\n\n\n\n\n\n\n图 8: venn.diagram\n\n\n\n\n\nVennDiagram集合颜色设置于ggVennDiagram最大的区别在于颜色是根据不同集合设置的离散型颜色，设置方法如下：\n\n# 仅输入一个颜色时，所有集合显示同一个颜色，当输入颜色数量与集合数量一致时每个集合各自一个颜色，也可以使用指定命名的方式精确设置集合的颜色\np &lt;- venn.diagram(\n  x, filename = NULL,\n  fill = c(\"A\"=\"#2E75A2\",\"B\"=\"#FBD75F\",\"C\"=\"#379337\",\"D\"=\"#C13A3C\"),\n  alpha= 0.3);grid::grid.draw(p)\n\n\n\n\n\n\n\n图 9: 颜色设置\n\n\n\n\n\n线条设置：\n\np &lt;- venn.diagram(\n  x, filename = NULL,\n  col = c(\"A\"=\"#2E75A2\",\"B\"=\"#FBD75F\",\"C\"=\"#379337\",\"D\"=\"#C13A3C\"),\n  lwd = 0.3, lty = 2);grid::grid.draw(p)\n\n\n\n\n\n\n\n图 10: 线条设置\n\n\n\n\n\n字体设置，如果需要调整位置请使用 cat.dist、cat.pos 参数：\n\np &lt;- venn.diagram(\n  x, filename = NULL, \n  cat.col =c(\"A\"=\"#2E75A2\",\"B\"=\"#FBD75F\",\"C\"=\"#379337\",\"D\"=\"#C13A3C\"),\n  label.col = \"red\");grid::grid.draw(p)\n\n\n\n\n\n\n\n图 11: 字体设置\n\n\n\n\n\n按照比例展示集合大小，该模式仅适用于两个集合使用：\n\np &lt;- venn.diagram(\n  x[c(\"A\",\"B\")], filename = NULL, fill= c(\"A\"=\"#2E75A2\",\"B\"=\"#FBD75F\"),\n  scaled = T\n);grid::grid.draw(p)\n\n\n\n\n\n\n\n图 12: scaled",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#应用场景",
    "href": "Ranking/VennPlot.html#应用场景",
    "title": "韦恩图",
    "section": "应用场景",
    "text": "应用场景\n\n\n\n\n\n\n图 13: 韦恩图应用\n\n\n\n此图中R1-R4为四种不同的基因型，由于R2 R4在目的基因处基因型完全相同，因此R2R4共有的差异表达基因可能就是目的基因的下游 [4]。",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Ranking/VennPlot.html#参考文献",
    "href": "Ranking/VennPlot.html#参考文献",
    "title": "韦恩图",
    "section": "参考文献",
    "text": "参考文献\n[1] Yu Y, Li W, Liu Y, Liu Y, Zhang Q, Ouyang Y, Ding W, Xue Y, Zou Y, Yan J, Jia A, Yan J, Hao X, Gou Y, Zhai Z, Liu L, Zheng Y, Zhang B, Xu J, Yang N, Xiao Y, Zhuo L, Lai Z, Yin P, Liu HJ, Fernie AR, Jackson D, Yan J. A Zea genus-specific micropeptide controls kernel dehydration in maize. Cell. 2025 Jan 9;188(1):44-59.e21. doi: 10.1016/j.cell.2024.10.030. Epub 2024 Nov 12. PMID: 39536747.",
    "crumbs": [
      "Ranking",
      "VeenPlot"
    ]
  },
  {
    "objectID": "Hiplot/090-interval-bar-chart.html",
    "href": "Hiplot/090-interval-bar-chart.html",
    "title": "区间条形图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Interval Bar Chart"
    ]
  },
  {
    "objectID": "Hiplot/090-interval-bar-chart.html#环境配置",
    "href": "Hiplot/090-interval-bar-chart.html#环境配置",
    "title": "区间条形图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Interval Bar Chart"
    ]
  },
  {
    "objectID": "Hiplot/090-interval-bar-chart.html#数据准备",
    "href": "Hiplot/090-interval-bar-chart.html#数据准备",
    "title": "区间条形图",
    "section": "数据准备",
    "text": "数据准备\n案例数据为一年十二个月份的最高和最低温度和对应的月份简称。通过案例数据绘制了每个月份的温度区间及温度均线。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/090-interval-bar-chart-data.txt\", header = T)\n\n# 整理数据格式\ndata$name_num &lt;- match(data[[\"month\"]], unique(data[[\"month\"]]))\n\n# 查看数据\nhead(data)\n\n  month min_temperature max_temperature mean name_num\n1   Jan              15              20   16        1\n2   Feb              17              25   20        2\n3   Mar              20              26   23        3\n4   Apr              25              30   27        4\n5   May              30              35   32        5\n6   Jun              32              35   34        6",
    "crumbs": [
      "HIPLOT",
      "Interval Bar Chart"
    ]
  },
  {
    "objectID": "Hiplot/090-interval-bar-chart.html#可视化",
    "href": "Hiplot/090-interval-bar-chart.html#可视化",
    "title": "区间条形图",
    "section": "可视化",
    "text": "可视化\n\n# 区间条形图\np &lt;- ggplot(data, aes(x = month, y = max_temperature)) +\n  geom_rect(aes(xmin = name_num - 0.4, xmax = name_num + 0.4,\n                ymin = min_temperature, ymax = max_temperature), \n            fill = \"#282726\", alpha = 0.7) +\n  geom_line(aes(x = name_num, y = mean), color = \"#006064\", size = 0.8) +\n  labs(x = \"Month\", y = \"Temperature\") +\n  scale_x_discrete() +\n  theme_bw()\n\np\n\n\n\n\n\n\n\n图 1: 区间条形图",
    "crumbs": [
      "HIPLOT",
      "Interval Bar Chart"
    ]
  },
  {
    "objectID": "Hiplot/013-big-corrplot.html",
    "href": "Hiplot/013-big-corrplot.html",
    "title": "大样本相关性热图",
    "section": "",
    "text": "相关性热图是一种分析多个变量，两两之间相关性的图形。",
    "crumbs": [
      "HIPLOT",
      "Corrplot Big Data"
    ]
  },
  {
    "objectID": "Hiplot/013-big-corrplot.html#环境配置",
    "href": "Hiplot/013-big-corrplot.html#环境配置",
    "title": "大样本相关性热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ComplexHeatmap\n\n\n# 安装包\nif (!requireNamespace(\"ComplexHeatmap\", quietly = TRUE)) {\n  install.packages(\"ComplexHeatmap\")\n}\n\n# 加载包\nlibrary(ComplexHeatmap)",
    "crumbs": [
      "HIPLOT",
      "Corrplot Big Data"
    ]
  },
  {
    "objectID": "Hiplot/013-big-corrplot.html#数据准备",
    "href": "Hiplot/013-big-corrplot.html#数据准备",
    "title": "大样本相关性热图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为基因名称及每个样本的表达量。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/013-big-corrplot-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[!is.na(data[, 1]), ]\nidx &lt;- duplicated(data[, 1])\ndata[idx, 1] &lt;- paste0(data[idx, 1], \"--dup-\", cumsum(idx)[idx])\nrownames(data) &lt;- data[, 1]\ndata &lt;- data[, -1]\nstr2num_df &lt;- function(x) {\n  x[] &lt;- lapply(x, function(l) as.numeric(l))\n  x\n}\ntmp &lt;- t(str2num_df(data))\ncorr &lt;- round(cor(tmp, use = \"na.or.complete\", method = \"pearson\"), 3)\n\n# 查看数据\nhead(corr)\n\n         RGL4   MPP7   UGCG CYSTM1  ANXA2 ENDOD1 ARHGAP24   CST7 HIST1H2BM\nRGL4    1.000  0.914  0.929  0.936 -0.592 -0.908    0.888  0.949    -0.603\nMPP7    0.914  1.000  0.852  0.907 -0.543 -0.862    0.762  0.899    -0.656\nUGCG    0.929  0.852  1.000  0.956 -0.440 -0.791    0.854  0.840    -0.694\nCYSTM1  0.936  0.907  0.956  1.000 -0.358 -0.762    0.812  0.852    -0.632\nANXA2  -0.592 -0.543 -0.440 -0.358  1.000  0.826   -0.660 -0.723     0.541\nENDOD1 -0.908 -0.862 -0.791 -0.762  0.826  1.000   -0.907 -0.961     0.709\n         EREG   EMP1  NFAM1 SLC40A1   CD52 HIST1H2BH PFKFB3 SNORD116-20  STX11\nRGL4   -0.021 -0.495  0.859   0.506 -0.704    -0.680  0.889       0.188  0.953\nMPP7   -0.196 -0.447  0.898   0.648 -0.734    -0.770  0.842       0.048  0.915\nUGCG    0.153 -0.358  0.858   0.361 -0.671    -0.711  0.943       0.202  0.951\nCYSTM1  0.074 -0.272  0.866   0.339 -0.612    -0.683  0.933       0.225  0.985\nANXA2   0.222  0.902 -0.662  -0.668  0.775     0.626 -0.463       0.375 -0.374\nENDOD1  0.191  0.713 -0.872  -0.611  0.854     0.791 -0.814       0.141 -0.787\n        SYNE2   TCN1\nRGL4    0.780  0.889\nMPP7    0.795  0.888\nUGCG    0.922  0.927\nCYSTM1  0.908  0.973\nANXA2  -0.327 -0.249\nENDOD1 -0.657 -0.708",
    "crumbs": [
      "HIPLOT",
      "Corrplot Big Data"
    ]
  },
  {
    "objectID": "Hiplot/013-big-corrplot.html#可视化",
    "href": "Hiplot/013-big-corrplot.html#可视化",
    "title": "大样本相关性热图",
    "section": "可视化",
    "text": "可视化\n\n# 大样本相关性热图\np &lt;- ComplexHeatmap::Heatmap(\n  corr, col = colorRampPalette(c(\"#4477AA\",\"#FFFFFF\",\"#BB4444\"))(50),\n  clustering_distance_rows = \"euclidean\",\n  clustering_method_rows = \"ward.D2\",\n  clustering_distance_columns = \"euclidean\",\n  clustering_method_columns = \"ward.D2\",\n  show_column_dend = FALSE, show_row_dend = FALSE,\n  column_names_gp = gpar(fontsize = 8),\n  row_names_gp = gpar(fontsize = 8)\n)\n\np\n\n\n\n\n\n\n\n图 1: 大样本相关性热图\n\n\n\n\n\n红色系表示两个基因之间呈正相关，蓝色系表示两个基因之间呈负相关，每一格中的数字表示相关系数。",
    "crumbs": [
      "HIPLOT",
      "Corrplot Big Data"
    ]
  },
  {
    "objectID": "Hiplot/060-gene-density.html",
    "href": "Hiplot/060-gene-density.html",
    "title": "基因密度图",
    "section": "",
    "text": "染色体数据展示。",
    "crumbs": [
      "HIPLOT",
      "Gene Density"
    ]
  },
  {
    "objectID": "Hiplot/060-gene-density.html#环境配置",
    "href": "Hiplot/060-gene-density.html#环境配置",
    "title": "基因密度图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: circlize; ComplexHeatmap; gtrellis; tidyverse; ggplotify; RColorBrewer\n\n\n# 安装包\nif (!requireNamespace(\"circlize\", quietly = TRUE)) {\n  install.packages(\"circlize\")\n}\nif (!requireNamespace(\"ComplexHeatmap\", quietly = TRUE)) {\n  install_github(\"jokergoo/ComplexHeatmap\")\n}\nif (!requireNamespace(\"gtrellis\", quietly = TRUE)) {\n  install_github(\"jokergoo/gtrellis\")\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\nif (!requireNamespace(\"RColorBrewer\", quietly = TRUE)) {\n  install.packages(\"RColorBrewer\")\n}\n\n# 加载包\nlibrary(circlize)\nlibrary(ComplexHeatmap)\nlibrary(gtrellis)\nlibrary(tidyverse)\nlibrary(ggplotify)\nlibrary(RColorBrewer)",
    "crumbs": [
      "HIPLOT",
      "Gene Density"
    ]
  },
  {
    "objectID": "Hiplot/060-gene-density.html#数据准备",
    "href": "Hiplot/060-gene-density.html#数据准备",
    "title": "基因密度图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata1 &lt;- read.delim(\"files/Hiplot/060-gene-density-data1.txt\", header = T)\ndata2 &lt;- read.delim(\"files/Hiplot/060-gene-density-data2.txt\", header = T)\n\n# 整理数据格式\nchrNum &lt;- str_replace(unique(data1$chr), \"Chr|chr\", \"\")\ndata1$chr &lt;- factor(data1$chr, levels = paste0(\"Chr\", chrNum))\ndata2$chr &lt;- factor(data2$chr, levels = paste0(\"Chr\", chrNum))\n# 设置窗口计算基因密度\nwindows &lt;- 100 * 1000 # 默认:100kb\ngene_density &lt;- genomicDensity(data2, window.size = windows)\ngene_density$chr &lt;- factor(gene_density$chr,\n  levels =  paste0(\"Chr\", chrNum)\n)\n\n# 查看数据\nhead(data1)\n\n    chr start      end\n1  Chr5     0 29958434\n2  Chr8     0 28443022\n3  Chr9     0 23012720\n4 Chr10     0 23207287\n5 Chr12     0 27531856\n\nhead(data2)\n\n    chr start   end\n1 Chr10 38648 40060\n2 Chr10 45941 58338\n3 Chr10 67119 72971\n4 Chr10 75410 76305\n5 Chr10 80964 82250\n6 Chr10 94798 97746",
    "crumbs": [
      "HIPLOT",
      "Gene Density"
    ]
  },
  {
    "objectID": "Hiplot/060-gene-density.html#可视化",
    "href": "Hiplot/060-gene-density.html#可视化",
    "title": "基因密度图",
    "section": "可视化",
    "text": "可视化\n\n# 设置画板颜色\npalettes &lt;- c(\"#B2182B\",\"#EF8A62\",\"#FDDBC7\",\"#D1E5F0\",\"#67A9CF\",\"#2166AC\")\ncol_fun &lt;- colorRamp2(\n  seq(0, max(gene_density[[4]]), length = 6), rev(palettes)\n  )\ncm &lt;- ColorMapping(col_fun = col_fun)\n# 设置图例\nlgd &lt;- color_mapping_legend(\n  cm, plot = F, title = \"density\", color_bar = \"continuous\"\n  )\n# 绘制基因密度分布热图\np &lt;- as.ggplot(function() {\n  gtrellis_layout(\n    data1, n_track = 2, ncol = 1, byrow = FALSE,\n    track_axis = FALSE, add_name_track = FALSE,\n    xpadding = c(0.1, 0), gap = unit(1, \"mm\"),\n    track_height = unit.c(unit(1, \"null\"), unit(4, \"mm\")),\n    track_ylim = c(0, max(gene_density[[4]]), 0, 1),\n    border = FALSE, asist_ticks = FALSE,\n    legend = lgd\n    )\n  # 添加基因面积图 track\n  add_lines_track(gene_density, gene_density[[4]],\n                  area = TRUE, gp = gpar(fill = \"pink\"))\n  # 添加基因密度热图 track\n  add_heatmap_track(gene_density, gene_density[[4]], fill = col_fun)\n  add_track(track = 2, clip = FALSE, panel_fun = function(gr) {\n    chr &lt;- get_cell_meta_data(\"name\")\n    if (chr == paste(\"Chr\", length(chrNum), sep = \"\")) {\n      grid.lines(get_cell_meta_data(\"xlim\"), unit(c(0, 0), \"npc\"),\n                 default.units = \"native\")\n      }\n    grid.text(chr, x = 0.01, y = 0.38, just = c(\"left\", \"bottom\"))\n    })\n  circos.clear()\n  })\n\np\n\n\n\n\n\n\n\n图 1: 基因密度图",
    "crumbs": [
      "HIPLOT",
      "Gene Density"
    ]
  },
  {
    "objectID": "Hiplot/082-group-comparison.html",
    "href": "Hiplot/082-group-comparison.html",
    "title": "分组比较热图",
    "section": "",
    "text": "分组比较热图提供了一种进行多组比较并使用热图可视化的紧凑方式，以替换绘制许多个箱线图。",
    "crumbs": [
      "HIPLOT",
      "Group-comparison Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/082-group-comparison.html#环境配置",
    "href": "Hiplot/082-group-comparison.html#环境配置",
    "title": "分组比较热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: sigminer\n\n\n# 安装包\nif (!requireNamespace(\"sigminer\", quietly = TRUE)) {\n  install_github(\"ShixiangWang/sigminer\")\n}\n\n# 加载包\nlibrary(sigminer)",
    "crumbs": [
      "HIPLOT",
      "Group-comparison Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/082-group-comparison.html#数据准备",
    "href": "Hiplot/082-group-comparison.html#数据准备",
    "title": "分组比较热图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/082-group-comparison-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  g1 g2 e1         e2\n1  A AA  N -1.8060313\n2  A AA  N -0.5820759\n3  A AA  N -1.1088896\n4  A AA  N -1.0149620\n5  A AA  P -0.1623095\n6  A AA  N  0.5630558",
    "crumbs": [
      "HIPLOT",
      "Group-comparison Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/082-group-comparison.html#可视化",
    "href": "Hiplot/082-group-comparison.html#可视化",
    "title": "分组比较热图",
    "section": "可视化",
    "text": "可视化\n\n# 定义绘图函数\nunlist_and_covert &lt;- function(x, recursive = FALSE) {\n  if (!is.null(x)) {\n    x &lt;- unlist(x, recursive = recursive)\n    if (!is.null(x)) {\n      y &lt;- sapply(x, function(x) {\n        if (identical(x, \"NA\")) NA else x\n      })\n      names(y) &lt;- names(x)\n      x &lt;- y\n    }\n  }\n  x\n}\n\nplotentry &lt;- function(data,\n                      grp_vars = NULL, enrich_vars = NULL, cross = TRUE,\n                      co_method = c(\"t.test\", \"wilcox.test\"), ref_group = NA,\n                      scales = \"free\", add_text_annotation = TRUE,\n                      fill_by_p_value = TRUE, use_fdr = TRUE, cut_p_value = FALSE,\n                      cluster_row = FALSE) {\n  ref_group &lt;- unlist_and_covert(ref_group)\n  if (is.null(ref_group)) ref_group &lt;- NA\n  rv &lt;- group_enrichment(data, grp_vars, enrich_vars, cross, co_method, ref_group)\n  if (length(unique(rv$grp_var)) == 1) {\n    p &lt;- show_group_enrichment(rv,\n      return_list = TRUE,\n      scales = scales, add_text_annotation = add_text_annotation,\n      fill_by_p_value = fill_by_p_value, use_fdr = use_fdr, cut_p_value = cut_p_value,\n      cluster_row = cluster_row\n    )\n    p &lt;- p[[1]]\n  } else {\n    p &lt;- show_group_enrichment(rv,\n      scales = scales, add_text_annotation = add_text_annotation,\n      fill_by_p_value = fill_by_p_value, use_fdr = use_fdr, cut_p_value = cut_p_value,\n      cluster_row = cluster_row\n    )\n  }\n  return(p)\n}\n\n# 绘制图形\np &lt;- plotentry(\n  data = data,\n  grp_vars = \"g1\",\n  enrich_vars = c(\"e1\", \"e2\"),\n  cross = T,\n  add_text_annotation = T,\n  fill_by_p_value = T,\n  use_fdr = T,\n  cut_p_value = F,\n  cluster_row = F,\n  co_method = \"t.test\",\n  scales = \"free\"\n)\n\np\n\n\n\n\n\n\n\n图 1: 分组比较热图",
    "crumbs": [
      "HIPLOT",
      "Group-comparison Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/019-chi-square-fisher.html",
    "href": "Hiplot/019-chi-square-fisher.html",
    "title": "卡方与 Fisher 检验",
    "section": "",
    "text": "卡方与 Fisher 检验可用于分类变量频数差异检验，该工具将自动选择卡方和 Fisher 确切性检验统计方法。",
    "crumbs": [
      "HIPLOT",
      "Chi-square-fisher Test"
    ]
  },
  {
    "objectID": "Hiplot/019-chi-square-fisher.html#环境配置",
    "href": "Hiplot/019-chi-square-fisher.html#环境配置",
    "title": "卡方与 Fisher 检验",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; visdat; aplot\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"visdat\", quietly = TRUE)) {\n  install.packages(\"visdat\")\n}\nif (!requireNamespace(\"aplot\", quietly = TRUE)) {\n  install.packages(\"aplot\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(visdat)\nlibrary(aplot)",
    "crumbs": [
      "HIPLOT",
      "Chi-square-fisher Test"
    ]
  },
  {
    "objectID": "Hiplot/019-chi-square-fisher.html#数据准备",
    "href": "Hiplot/019-chi-square-fisher.html#数据准备",
    "title": "卡方与 Fisher 检验",
    "section": "数据准备",
    "text": "数据准备\n数据表支持两种格式：列联表（示例 1）和单行记录表（示例 2）\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/019-chi-square-fisher-data.txt\", header = T)\n\n# 整理数据格式\nrownames(data) &lt;- data[,1]\ndata &lt;- data[,-1]\ncb &lt;- combn(nrow(data), 2)\nfinal &lt;- data.frame()\nfor (i in 1:ncol(cb)) {\n  tmp &lt;- data[cb[,i],]\n  groups &lt;- paste0(rownames(data)[cb[,i]], collapse = \" | \")\n  \n  res &lt;- tryCatch({\n    chisq.test(tmp)\n    }, warning = function(w) {\n      tryCatch({fisher.test(tmp)}, error = function(e) {\n        return(fisher.test(tmp, simulate.p.value = TRUE))\n        })\n  })\n  val_percent &lt;- apply(tmp, 1, function(x) {\n    sprintf(\"%s (%s%%)\", x, round(x / sum(x), 2) * 100)\n  })\n  val_percent1 &lt;- paste0(colnames(tmp), \":\", val_percent[,1])\n  val_percent1 &lt;- paste0(val_percent1, collapse = \" | \")\n  val_percent2 &lt;- paste0(colnames(tmp), \":\", val_percent[,2])\n  val_percent2 &lt;- paste0(val_percent2, collapse = \" | \")\n  tmp &lt;- data.frame(\n    groups = groups,\n    val_percent_left = val_percent1,\n    val_percent_right = val_percent2,\n    statistic = ifelse(is.null(res$statistic), NA,\n      as.numeric(res$statistic)),\n    pvalue = as.numeric(res$p.value),\n    method = res$method\n  )\n  final &lt;- rbind(final, tmp)\n}\nfinal &lt;- as.data.frame(final)\nfinal$pvalue &lt; as.numeric(final$pvalue)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nfinal$statistic &lt; as.numeric(final$statistic)\n\n [1] FALSE FALSE FALSE    NA FALSE FALSE    NA FALSE    NA    NA\n\n# 查看数据\nhead(final)\n\n  groups                        val_percent_left\n1  A | B L:401 (48%) | M:216 (26%) | H:221 (26%)\n2  A | C L:401 (48%) | M:216 (26%) | H:221 (26%)\n3  A | D L:401 (48%) | M:216 (26%) | H:221 (26%)\n4  A | E L:401 (48%) | M:216 (26%) | H:221 (26%)\n5  B | C L:254 (37%) | M:259 (38%) | H:169 (25%)\n6  B | D L:254 (37%) | M:259 (38%) | H:169 (25%)\n                        val_percent_right    statistic       pvalue\n1 L:254 (37%) | M:259 (38%) | H:169 (25%) 2.810229e+01 7.900708e-07\n2 L:400 (48%) | M:215 (26%) | H:220 (26%) 4.566425e-04 9.997717e-01\n3 L:252 (38%) | M:251 (38%) | H:162 (24%) 2.614390e+01 2.103411e-06\n4       L:3 (23%) | M:5 (38%) | H:5 (38%)           NA 1.633146e-01\n5 L:400 (48%) | M:215 (26%) | H:220 (26%) 2.821998e+01 7.449197e-07\n6 L:252 (38%) | M:251 (38%) | H:162 (24%) 6.689139e-02 9.671074e-01\n                              method\n1         Pearson's Chi-squared test\n2         Pearson's Chi-squared test\n3         Pearson's Chi-squared test\n4 Fisher's Exact Test for Count Data\n5         Pearson's Chi-squared test\n6         Pearson's Chi-squared test",
    "crumbs": [
      "HIPLOT",
      "Chi-square-fisher Test"
    ]
  },
  {
    "objectID": "Hiplot/019-chi-square-fisher.html#可视化",
    "href": "Hiplot/019-chi-square-fisher.html#可视化",
    "title": "卡方与 Fisher 检验",
    "section": "可视化",
    "text": "可视化\n\n# 卡方与 Fisher 检验\np1 &lt;- vis_value(final[\"statistic\"]) + \n  scale_fill_gradientn(colours = c(\"#3362ab\",\"#87b7d7\",\"#e8e0db\",\"#eea07d\",\"#ad1c2e\"))\n\np2 &lt;- vis_expect(final[\"pvalue\"], ~.x &lt; 0.05) +\n  scale_fill_manual(values = c(\"#1c438a\",\"#e7120c\"))\n\np &lt;- p1+p2\np\n\n\n\n\n\n\n\n图 1: 卡方与 Fisher 检验",
    "crumbs": [
      "HIPLOT",
      "Chi-square-fisher Test"
    ]
  },
  {
    "objectID": "Hiplot/049-easy-pairs.html",
    "href": "Hiplot/049-easy-pairs.html",
    "title": "简易配对图",
    "section": "",
    "text": "显示一个矩阵图，用于查看多个变量的相关关系和数据分布。",
    "crumbs": [
      "HIPLOT",
      "Easy Pairs"
    ]
  },
  {
    "objectID": "Hiplot/049-easy-pairs.html#环境配置",
    "href": "Hiplot/049-easy-pairs.html#环境配置",
    "title": "简易配对图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GGally\n\n\n# 安装包\nif (!requireNamespace(\"GGally\", quietly = TRUE)) {\n  install.packages(\"GGally\")\n}\n\n# 加载包\nlibrary(GGally)",
    "crumbs": [
      "HIPLOT",
      "Easy Pairs"
    ]
  },
  {
    "objectID": "Hiplot/049-easy-pairs.html#数据准备",
    "href": "Hiplot/049-easy-pairs.html#数据准备",
    "title": "简易配对图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/049-easy-pairs-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  total_bill  tip gender smoker day   time size\n1      16.99 1.01 Female     No Sun Dinner    2\n2      10.34 1.66   Male     No Sun Dinner    3\n3      21.01 3.50   Male     No Sun Dinner    3\n4      23.68 3.31   Male     No Sun Dinner    2\n5      24.59 3.61 Female     No Sun Dinner    4\n6      25.29 4.71   Male     No Sun Dinner    4",
    "crumbs": [
      "HIPLOT",
      "Easy Pairs"
    ]
  },
  {
    "objectID": "Hiplot/049-easy-pairs.html#可视化",
    "href": "Hiplot/049-easy-pairs.html#可视化",
    "title": "简易配对图",
    "section": "可视化",
    "text": "可视化\n\n# 简易配对图\np &lt;- ggpairs(data, columns = c(\"total_bill\", \"time\", \"tip\"),\n             mapping = aes_string(color = \"gender\")) +\n  ggtitle(\"Easy Pairs\") +\n  scale_fill_manual(values = c(\"#3B4992FF\",\"#EE0000FF\")) +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 简易配对图",
    "crumbs": [
      "HIPLOT",
      "Easy Pairs"
    ]
  },
  {
    "objectID": "Hiplot/054-fan.html",
    "href": "Hiplot/054-fan.html",
    "title": "扇形图",
    "section": "",
    "text": "扇形图是旨在以所占扇形的大小清楚表示各组数据所占百分比的统计图表。",
    "crumbs": [
      "HIPLOT",
      "Fan Plot"
    ]
  },
  {
    "objectID": "Hiplot/054-fan.html#环境配置",
    "href": "Hiplot/054-fan.html#环境配置",
    "title": "扇形图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: plotrix; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"plotrix\", quietly = TRUE)) {\n  install.packages(\"plotrix\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(plotrix)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Fan Plot"
    ]
  },
  {
    "objectID": "Hiplot/054-fan.html#数据准备",
    "href": "Hiplot/054-fan.html#数据准备",
    "title": "扇形图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同分组及其数据。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/054-fan-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n   group value\n1 Group1    13\n2 Group2    34\n3 Group3    21\n4 Group4    43",
    "crumbs": [
      "HIPLOT",
      "Fan Plot"
    ]
  },
  {
    "objectID": "Hiplot/054-fan.html#可视化",
    "href": "Hiplot/054-fan.html#可视化",
    "title": "扇形图",
    "section": "可视化",
    "text": "可视化\n\n# Cox 模型森林图\np &lt;- as.ggplot(function() {\n  fan.plot(data[, 2], main = \"\", labels = as.character(data[, 1]),\n           col = c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\"))\n  })\n\np\n\n\n\n\n\n\n\n图 1: Cox 模型森林图\n\n\n\n\n\n不同颜色表示不同组群 ，不同面积表示数据及占比。",
    "crumbs": [
      "HIPLOT",
      "Fan Plot"
    ]
  },
  {
    "objectID": "Hiplot/017-bumpchart.html",
    "href": "Hiplot/017-bumpchart.html",
    "title": "凹凸图",
    "section": "",
    "text": "凹凸图可以用于展示多组数值变化情况。",
    "crumbs": [
      "HIPLOT",
      "Bumpchart"
    ]
  },
  {
    "objectID": "Hiplot/017-bumpchart.html#环境配置",
    "href": "Hiplot/017-bumpchart.html#环境配置",
    "title": "凹凸图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggbump; dplyr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggbump\", quietly = TRUE)) {\n  install.packages(\"ggbump\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggbump)\nlibrary(dplyr)",
    "crumbs": [
      "HIPLOT",
      "Bumpchart"
    ]
  },
  {
    "objectID": "Hiplot/017-bumpchart.html#数据准备",
    "href": "Hiplot/017-bumpchart.html#数据准备",
    "title": "凹凸图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/017-bumpchart-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n     x y group\n1 2019 4     A\n2 2020 2     A\n3 2021 2     A\n4 2019 3     B\n5 2020 1     B\n6 2021 4     B",
    "crumbs": [
      "HIPLOT",
      "Bumpchart"
    ]
  },
  {
    "objectID": "Hiplot/017-bumpchart.html#可视化",
    "href": "Hiplot/017-bumpchart.html#可视化",
    "title": "凹凸图",
    "section": "可视化",
    "text": "可视化\n\n# 凹凸图\np &lt;- ggplot(data, aes(x = x, y = y, color = group)) +\n  geom_bump(size = 1.5) +\n  geom_point(size = 5) +\n  geom_text(data = data %&gt;% filter(x == min(x)),\n            aes(x = x - 0.1, label = group),\n            size = 5, hjust = 1) +\n  geom_text(data = data %&gt;% filter(x == max(x)),\n            aes(x = x + 0.1, label = group),\n            size = 5, hjust = 0) +\n  theme_void() +\n  theme(legend.position = \"none\") +\n  scale_color_manual(values = c(\"#0571B0\",\"#92C5DE\",\"#F4A582\",\"#CA0020\"))\n\np\n\n\n\n\n\n\n\n图 1: 凹凸图",
    "crumbs": [
      "HIPLOT",
      "Bumpchart"
    ]
  },
  {
    "objectID": "Hiplot/038-density-hist-mirror.html",
    "href": "Hiplot/038-density-hist-mirror.html",
    "title": "镜像密度图和直方图",
    "section": "",
    "text": "镜像密度图和直方图是一种使用上下双侧绘制方法用来观察连续型变量分布的图形。",
    "crumbs": [
      "HIPLOT",
      "Mirror Density & Histogram"
    ]
  },
  {
    "objectID": "Hiplot/038-density-hist-mirror.html#环境配置",
    "href": "Hiplot/038-density-hist-mirror.html#环境配置",
    "title": "镜像密度图和直方图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Mirror Density & Histogram"
    ]
  },
  {
    "objectID": "Hiplot/038-density-hist-mirror.html#数据准备",
    "href": "Hiplot/038-density-hist-mirror.html#数据准备",
    "title": "镜像密度图和直方图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/038-density-hist-mirror-data.txt\", header = T)\n\n# 整理数据格式\nsides &lt;- data[1,]\ndata &lt;- data[-1,]\nfor (i in 1:ncol(data)) {\n  data[,i] &lt;- as.numeric(data[,i])\n}\n\n# 查看数据\nhead(data)\n\n         var1     var2     var3     var4     var5     var6\n2  0.54659146 1.575592 1.508968 2.504824 5.540246 6.198931\n3 -0.64052340 5.275076 1.498841 4.436792 4.987390 5.194154\n4  1.03196438 2.561983 4.018349 3.506171 5.030395 6.570980\n5  0.09518815 1.802874 2.057855 2.789252 4.797252 7.545844\n6  0.89147721 2.627927 2.218567 4.581939 4.791792 5.468657\n7  0.61786781 3.574565 2.051910 4.929031 5.830516 6.105716",
    "crumbs": [
      "HIPLOT",
      "Mirror Density & Histogram"
    ]
  },
  {
    "objectID": "Hiplot/038-density-hist-mirror.html#可视化",
    "href": "Hiplot/038-density-hist-mirror.html#可视化",
    "title": "镜像密度图和直方图",
    "section": "可视化",
    "text": "可视化\n\n1. 镜像密度图\n\n# 镜像密度图\np &lt;- ggplot(data, aes(x=x))\ncolrs &lt;- c(\"#e64b35ff\",\"#4dbbd5ff\",\"#00a087ff\",\"#3c5488ff\",\"#f39b7fff\",\"#8491b4ff\")\ncolrs2 &lt;- colnames(data)\nfor (i in seq_len(length(sides))) {\n  eval(parse(\n    text = sprintf(\"p &lt;- p + geom_density(aes(x = %s, y = %s..density.., color = '%s', fill = '%s'), kernel = '%s')\", \n                   colnames(data)[i], ifelse(sides[i] == \"top\", \"\", \"-\"), colnames(data)[i],\n                   colnames(data)[i], \"gaussian\")\n    ))\n  names(colrs)[i] &lt;- colnames(data)[i]\n  names(colrs2)[i] &lt;- colrs[i]\n}\np &lt;- p + \n  ggtitle(\"\") +\n  scale_fill_manual(values=colrs, name=\"Densities\") +\n  scale_color_manual(values=colrs, name=\"Densities\") +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 镜像密度图\n\n\n\n\n\n\n\n2. 镜像直方图\n\n# 镜像直方图\np &lt;- ggplot(data, aes(x=x))\ncolrs &lt;- c(\"#e64b35ff\",\"#4dbbd5ff\",\"#00a087ff\",\"#3c5488ff\",\"#f39b7fff\",\"#8491b4ff\")\ncolrs2 &lt;- colnames(data)\nfor (i in seq_len(length(sides))) {\n  eval(parse(\n    text = sprintf(\"p &lt;- p + geom_histogram(aes(x = %s, y = %s..density.., color = '%s', fill = '%s'), bins = %s)\", \n                   colnames(data)[i], ifelse(sides[i] == \"top\", \"\", \"-\"),\n                   colnames(data)[i], colnames(data)[i], 35)))\n  names(colrs)[i] &lt;- colnames(data)[i]\n  names(colrs2)[i] &lt;- colrs[i]\n}\np &lt;- p + \n  ggtitle(\"\") +\n  scale_fill_manual(values=colrs, name=\"Densities\") +\n  scale_color_manual(values=colrs, name=\"Densities\") +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 2: 镜像直方图",
    "crumbs": [
      "HIPLOT",
      "Mirror Density & Histogram"
    ]
  },
  {
    "objectID": "Hiplot/026-connected-scatterplot.html",
    "href": "Hiplot/026-connected-scatterplot.html",
    "title": "连接散点图",
    "section": "",
    "text": "连接散点图",
    "crumbs": [
      "HIPLOT",
      "Connected Scatterplot"
    ]
  },
  {
    "objectID": "Hiplot/026-connected-scatterplot.html#环境配置",
    "href": "Hiplot/026-connected-scatterplot.html#环境配置",
    "title": "连接散点图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; dplyr; ggrepel\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\nif (!requireNamespace(\"ggrepel\", quietly = TRUE)) {\n  install.packages(\"ggrepel\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggrepel)",
    "crumbs": [
      "HIPLOT",
      "Connected Scatterplot"
    ]
  },
  {
    "objectID": "Hiplot/026-connected-scatterplot.html#数据准备",
    "href": "Hiplot/026-connected-scatterplot.html#数据准备",
    "title": "连接散点图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/026-connected-scatterplot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  year Alice Anna\n1 1991   724 7118\n2 1992   686 6846\n3 1993   684 6808\n4 1994   595 7523\n5 1995   579 8564\n6 1996   593 8565",
    "crumbs": [
      "HIPLOT",
      "Connected Scatterplot"
    ]
  },
  {
    "objectID": "Hiplot/026-connected-scatterplot.html#可视化",
    "href": "Hiplot/026-connected-scatterplot.html#可视化",
    "title": "连接散点图",
    "section": "可视化",
    "text": "可视化\n\n# 连接散点图\nconnected_scatterplot &lt;- function(data, x, y, label, label_ratio, line_color, arrow_size, label_size) {\n\n  draw_data &lt;- data.frame(\n    x = data[[x]],\n    y = data[[y]],\n    label = data[[label]]\n  )\n\n  add_label_data &lt;- draw_data %&gt;% sample_frac(label_ratio)\n  rm(data)\n\n  p &lt;- ggplot(draw_data, aes(x = x, y = y, label = label)) +\n    geom_point(color = line_color) +\n    geom_text_repel(data = add_label_data, size = label_size) +\n    geom_segment(\n      color = line_color,\n      aes(\n        xend = c(tail(x, n = -1), NA),\n        yend = c(tail(y, n = -1), NA)\n      ),\n      arrow = arrow(length = unit(arrow_size, \"mm\"))\n    )\n\n  return(p)\n}\n\np &lt;- connected_scatterplot(\n  data = if (exists(\"data\") && is.data.frame(data)) data else \"\",\n  x = \"Alice\",\n  y = \"Anna\",\n  label = \"year\",\n  label_ratio = 0.5,\n  line_color = \"#1A237E\",\n  arrow_size = 2,\n  label_size = 2.5\n) +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 连接散点图",
    "crumbs": [
      "HIPLOT",
      "Connected Scatterplot"
    ]
  },
  {
    "objectID": "Hiplot/034-custom-heat-map.html",
    "href": "Hiplot/034-custom-heat-map.html",
    "title": "自定义热图",
    "section": "",
    "text": "自定义热图，按照给定数据直接绘制热图。",
    "crumbs": [
      "HIPLOT",
      "Custom Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/034-custom-heat-map.html#环境配置",
    "href": "Hiplot/034-custom-heat-map.html#环境配置",
    "title": "自定义热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Custom Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/034-custom-heat-map.html#数据准备",
    "href": "Hiplot/034-custom-heat-map.html#数据准备",
    "title": "自定义热图",
    "section": "数据准备",
    "text": "数据准备\n案例数据为hiplot.org官方logo的灰度图像。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/034-custom-heat-map-data.txt\", header = T)\n\n# 整理数据格式\ndraw_data &lt;- as.matrix(data[, 2:ncol(data)])\nrow_num &lt;- nrow(draw_data)\ncol_num &lt;- ncol(draw_data)\ncol_labels &lt;- colnames(data)\ncol_labels &lt;- col_labels[2:ncol(data)]\nrow_labels &lt;- data$name\nrm(data)\ndf &lt;- expand.grid(row = 1:row_num, col = 1:col_num)\ndf$value &lt;- c(draw_data)\n\n# 查看数据\nhead(df)\n\n  row col value\n1   1   1   236\n2   2   1   236\n3   3   1   236\n4   4   1   236\n5   5   1   236\n6   6   1   236",
    "crumbs": [
      "HIPLOT",
      "Custom Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/034-custom-heat-map.html#可视化",
    "href": "Hiplot/034-custom-heat-map.html#可视化",
    "title": "自定义热图",
    "section": "可视化",
    "text": "可视化\n\n# 自定义热图\np &lt;- ggplot(df, aes(x = col, y = row, fill = value)) +\n  geom_point(shape = 21, size = 8, aes(fill = value), color = \"white\") +\n  scale_fill_gradient(low = \"#DDDDDD\", high = \"#0000F5\") +\n  guides(fill = guide_colorbar(title = \"Value\")) +\n  theme(\n    panel.background = element_rect(fill = \"white\"),\n    panel.grid = element_blank(),\n    axis.text = element_text(size = 10),\n    axis.ticks = element_blank(),\n    axis.title = element_blank()\n    ) +\n  scale_x_continuous(breaks = 1:col_num, labels = col_labels, position = \"top\") +\n  scale_y_reverse(breaks = 1:row_num, labels = row_labels, position = \"left\")\n\np\n\n\n\n\n\n\n\n图 1: 自定义热图",
    "crumbs": [
      "HIPLOT",
      "Custom Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/011-beanplot.html",
    "href": "Hiplot/011-beanplot.html",
    "title": "豆荚图",
    "section": "",
    "text": "豆荚图是一种描述一组数据分布特征的方法。",
    "crumbs": [
      "HIPLOT",
      "Beanplot"
    ]
  },
  {
    "objectID": "Hiplot/011-beanplot.html#环境配置",
    "href": "Hiplot/011-beanplot.html#环境配置",
    "title": "豆荚图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplotify; beanplot\n\n\n# 安装包\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\nif (!requireNamespace(\"beanplot\", quietly = TRUE)) {\n  install.packages(\"beanplot\")\n}\n\n# 加载包\nlibrary(ggplotify)\nlibrary(beanplot)",
    "crumbs": [
      "HIPLOT",
      "Beanplot"
    ]
  },
  {
    "objectID": "Hiplot/011-beanplot.html#数据准备",
    "href": "Hiplot/011-beanplot.html#数据准备",
    "title": "豆荚图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为数据集 (不同治疗方案的治疗效果数据)。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/011-beanplot-data.txt\", header = T)\n\n# 整理数据格式\nGroupOrder &lt;- as.numeric(factor(data[, 2], levels = unique(data[, 2])))\ndata[, 2] &lt;- paste0(data[,2], \" \", as.numeric(factor(data[, 3])))\ndata &lt;- cbind(data, GroupOrder)\n\n# 查看数据\nhead(data)\n\n     Y     X  Group GroupOrder\n1  4.2 low 1 treat1          1\n2 11.5 low 1 treat1          1\n3  7.3 low 1 treat1          1\n4  5.8 low 1 treat1          1\n5  6.4 low 1 treat1          1\n6 10.0 low 1 treat1          1",
    "crumbs": [
      "HIPLOT",
      "Beanplot"
    ]
  },
  {
    "objectID": "Hiplot/011-beanplot.html#可视化",
    "href": "Hiplot/011-beanplot.html#可视化",
    "title": "豆荚图",
    "section": "可视化",
    "text": "可视化\n\n# 豆荚图\np &lt;- as.ggplot(function() {\n  beanplot(Y ~ reorder(X, GroupOrder, mean), data = data, ll = 0.04,\n           main = \"Bean Plot\", ylab = \"Y\", xlab = \"X\", side = \"both\",\n           border = NA, horizontal = F, \n           col = list(c(\"#2b70c4\", \"#2b70c4\"),c(\"#e9c216\", \"#e9c216\")),\n           beanlines = \"mean\", overallline = \"mean\", kernel = \"gaussian\")\n  \n  legend(\"bottomright\", fill = c(\"#2b70c4\", \"#e9c216\"),\n         legend = levels(factor(data[, 3])))\n})\n\np\n\n\n\n\n\n\n\n图 1: 豆荚图",
    "crumbs": [
      "HIPLOT",
      "Beanplot"
    ]
  },
  {
    "objectID": "Hiplot/003-barplot-3d.html",
    "href": "Hiplot/003-barplot-3d.html",
    "title": "三维柱状图",
    "section": "",
    "text": "三维柱状图用于为数据提供三维外观。第三维通常出于美学原因而使用，但其不能改善数据的读取。仍旨在显示离散类别之间的比较。",
    "crumbs": [
      "HIPLOT",
      "3D Barplot"
    ]
  },
  {
    "objectID": "Hiplot/003-barplot-3d.html#环境配置",
    "href": "Hiplot/003-barplot-3d.html#环境配置",
    "title": "三维柱状图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: plot3D; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"plot3D\", quietly = TRUE)) {\n  install.packages(\"plot3D\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(plot3D)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "3D Barplot"
    ]
  },
  {
    "objectID": "Hiplot/003-barplot-3d.html#数据准备",
    "href": "Hiplot/003-barplot-3d.html#数据准备",
    "title": "三维柱状图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同治疗方案中不同剂量药物作用效果数据。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/003-barplot-3d-data.txt\", header = T)\n\n# 将数据向量转换为矩阵\nmat &lt;- matrix(rep(1, nrow(data)), nrow = length(unique(data[, 2])))\nrownames(mat) &lt;- unique(data[, 2])\ncolnames(mat) &lt;- unique(data[, 3])\nfor (i in 1:nrow(mat)) {\n  for (j in seq_len(ncol(mat))) {\n    mat[i, j] &lt;- data[, 1][data[, 2] == rownames(mat)[i] &\n      data[, 3] == colnames(mat)[j]]\n  }\n}\n\n# 查看数据\nmat\n\n       high mid low\nGroup1   13  25   5\nGroup2   34   8  25\nGroup3   21  17  12\nGroup4   43  10  19",
    "crumbs": [
      "HIPLOT",
      "3D Barplot"
    ]
  },
  {
    "objectID": "Hiplot/003-barplot-3d.html#可视化",
    "href": "Hiplot/003-barplot-3d.html#可视化",
    "title": "三维柱状图",
    "section": "可视化",
    "text": "可视化\n\n# 三维柱状图\np &lt;- as.ggplot(function() {\n  hist3D(\n    x = 1:nrow(mat), y = seq_len(ncol(mat)), z = mat,\n    bty = \"g\", phi = 20,\n    theta = -55,\n    xlab = colnames(data)[2],\n    ylab = colnames(data)[3], zlab = colnames(data)[1],\n    main = \"3D Bar Plot\", colkey = F,\n    border = \"black\", shade = 0.8, axes = T,\n    ticktype = \"detailed\", space = 0.3, d = 2, cex.axis = 0.3,\n    colvar = as.numeric(as.factor(data[, 2])), alpha = 1,\n    col = c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\")\n  )\n\n  # 使用 text3D 标记 x 轴\n  text3D(\n    x = 1:nrow(mat), y = rep(0.5, nrow(mat)), z = rep(3, nrow(mat)),\n    labels = rownames(mat),\n    add = TRUE, adj = 0, cex = 0.8\n  )\n  # 使用 text3D 标记 y 轴\n  text3D(\n    x = rep(1, ncol(mat)), y = seq_len(ncol(mat)), z = rep(0, ncol(mat)),\n    labels = colnames(mat), bty = \"g\",\n    add = TRUE, adj = 1, cex = 0.8\n  )\n})\n\np\n\n\n\n\n\n\n\n图 1: 三维柱状图\n\n\n\n\n\n该三维柱状图展示了不同治疗组（组 1 ~ 组 4）分别用低、中、高剂量进行治疗时，不同的治疗效果。组 1 使用中剂量治疗时效果最好，组 2 使用高剂量治疗时效果最好，组3使用剂量治疗时无较大差距，组 4 使用高剂量治疗时效果最好。\n\n\n\n\n\n\n提示\n\n\n\n特殊参数: \n\nPhi: 正值越大，表示趋于从三维图形顶端向下观测；负值越大，表示趋于从三维图形底端向上观测。\nTheta: 三维图形水平旋转的角度。",
    "crumbs": [
      "HIPLOT",
      "3D Barplot"
    ]
  },
  {
    "objectID": "Hiplot/058-funnel-plot.html",
    "href": "Hiplot/058-funnel-plot.html",
    "title": "漏斗图",
    "section": "",
    "text": "可以用于分析 Meta 分析结果中潜在偏倚因子。",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot"
    ]
  },
  {
    "objectID": "Hiplot/058-funnel-plot.html#环境配置",
    "href": "Hiplot/058-funnel-plot.html#环境配置",
    "title": "漏斗图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: FunnelPlotR; gridExtra\n\n\n# 安装包\nif (!requireNamespace(\"FunnelPlotR\", quietly = TRUE)) {\n  install.packages(\"FunnelPlotR\")\n}\nif (!requireNamespace(\"gridExtra\", quietly = TRUE)) {\n  install.packages(\"gridExtra\")\n}\n\n# 加载包\nlibrary(FunnelPlotR)\nlibrary(gridExtra)",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot"
    ]
  },
  {
    "objectID": "Hiplot/058-funnel-plot.html#数据准备",
    "href": "Hiplot/058-funnel-plot.html#数据准备",
    "title": "漏斗图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/058-funnel-plot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  los hmo white died age80 type type1 type2 type3 provnum     prds\n1   4   0     1    0     0    1     1     0     0   30001 9.667315\n2   9   1     1    0     0    1     1     0     0   30001 8.956472\n3   3   1     1    1     1    1     1     0     0   30001 6.856678\n4   9   0     1    0     0    1     1     0     0   30001 9.667315\n5   1   0     1    1     1    1     1     0     0   30001 7.400868\n6   4   0     1    1     0    1     1     0     0   30001 7.561051",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot"
    ]
  },
  {
    "objectID": "Hiplot/058-funnel-plot.html#可视化",
    "href": "Hiplot/058-funnel-plot.html#可视化",
    "title": "漏斗图",
    "section": "可视化",
    "text": "可视化\n\n# 漏斗图\np &lt;- funnel_plot(\n  data, numerator = los, denominator = prds,  group = provnum, data_type = \"SR\",\n  limit = 99, label = \"outlier\", sr_method = \"SHMI\", trim_by=0.1, \n  title = \"Funnel Plot\", x_range = \"auto\", y_range = \"auto\"\n  )\n\np\n\nA funnel plot object with 54 points of which 9 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\n图 1: 漏斗图",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot"
    ]
  },
  {
    "objectID": "Hiplot/066-ggdist.html",
    "href": "Hiplot/066-ggdist.html",
    "title": "分布图",
    "section": "",
    "text": "分布图是一种采用置信分布的可视化图形。",
    "crumbs": [
      "HIPLOT",
      "Dist Plot"
    ]
  },
  {
    "objectID": "Hiplot/066-ggdist.html#环境配置",
    "href": "Hiplot/066-ggdist.html#环境配置",
    "title": "分布图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggdist; tidyr; broom; modelr; ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggdist\", quietly = TRUE)) {\n  install.packages(\"ggdist\")\n}\nif (!requireNamespace(\"tidyr\", quietly = TRUE)) {\n  install.packages(\"tidyr\")\n}\nif (!requireNamespace(\"broom\", quietly = TRUE)) {\n  install.packages(\"broom\")\n}\nif (!requireNamespace(\"modelr\", quietly = TRUE)) {\n  install.packages(\"modelr\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggdist)\nlibrary(tidyr)\nlibrary(broom)\nlibrary(modelr)\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Dist Plot"
    ]
  },
  {
    "objectID": "Hiplot/066-ggdist.html#数据准备",
    "href": "Hiplot/066-ggdist.html#数据准备",
    "title": "分布图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为 5 种条件及其对应的值。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/066-ggdist-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 1] &lt;- factor(data[, 1], levels = rev(unique(data[, 1])))\ndata &lt;- tibble(data)\ndata2 = lm(response ~ condition, data = data)\ndata3 &lt;- data_grid(data, condition) %&gt;%\n  augment(data2, newdata = ., se_fit = TRUE)\n\n# 查看数据\nhead(data)\n\n# A tibble: 6 × 2\n  condition response\n  &lt;fct&gt;        &lt;dbl&gt;\n1 A           -0.420\n2 B            1.69 \n3 C            1.37 \n4 D            1.04 \n5 E           -0.144\n6 A           -0.301",
    "crumbs": [
      "HIPLOT",
      "Dist Plot"
    ]
  },
  {
    "objectID": "Hiplot/066-ggdist.html#可视化",
    "href": "Hiplot/066-ggdist.html#可视化",
    "title": "分布图",
    "section": "可视化",
    "text": "可视化\n\n# 分布图\np &lt;- ggplot(data3, aes_(y = as.name(colnames(data[1])))) +\n  stat_dist_halfeye(aes(dist = \"student_t\", arg1 = df.residual(data2),\n                        arg2 = .fitted, arg3 = .se.fit),\n                    scale = .5) +\n  geom_point(aes_(x = as.name(colnames(data[2]))),\n             data = data, pch = \"|\", size = 2,\n             position = position_nudge(y = -.15)) +\n  ggtitle(\"ggdist Plot\") + \n  xlab(\"response\") + ylab(\"condition\") +\n  theme_ggdist() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 分布图\n\n\n\n\n\n图示给出的是条件下均值的置信度分布，可以看出 5 种条件下对应值的大致分布情况。",
    "crumbs": [
      "HIPLOT",
      "Dist Plot"
    ]
  },
  {
    "objectID": "Hiplot/040-density.html",
    "href": "Hiplot/040-density.html",
    "title": "密度图",
    "section": "",
    "text": "核密度图是一种用来观察连续型变量分布的图形。",
    "crumbs": [
      "HIPLOT",
      "Density"
    ]
  },
  {
    "objectID": "Hiplot/040-density.html#环境配置",
    "href": "Hiplot/040-density.html#环境配置",
    "title": "密度图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Density"
    ]
  },
  {
    "objectID": "Hiplot/040-density.html#数据准备",
    "href": "Hiplot/040-density.html#数据准备",
    "title": "密度图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/040-density-data.txt\", header = T)\n\n# 整理数据格式\ndata[,2] &lt;- factor(data[,2], levels = unique(data[,2]))\n\n# 查看数据\nhead(data)\n\n  Value Group2\n1   4.2 treat1\n2  11.5 treat1\n3   7.3 treat1\n4   5.8 treat1\n5   6.4 treat1\n6  10.0 treat1",
    "crumbs": [
      "HIPLOT",
      "Density"
    ]
  },
  {
    "objectID": "Hiplot/040-density.html#可视化",
    "href": "Hiplot/040-density.html#可视化",
    "title": "密度图",
    "section": "可视化",
    "text": "可视化\n\n# 密度图\ndata[\"group_add_by_code\"] &lt;- \"g1\"\n\np &lt;- ggplot(data, aes_(as.name(colnames(data[1])))) +\n  geom_density(col = \"white\", alpha = 0.85,\n               aes_(fill = as.name(colnames(data[2])))) +\n  ggtitle(\"\") +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 密度图",
    "crumbs": [
      "HIPLOT",
      "Density"
    ]
  },
  {
    "objectID": "Hiplot/044-diy-gsea.html",
    "href": "Hiplot/044-diy-gsea.html",
    "title": "自定义基因富集分析",
    "section": "",
    "text": "自定义基因集。",
    "crumbs": [
      "HIPLOT",
      "DIY GSEA"
    ]
  },
  {
    "objectID": "Hiplot/044-diy-gsea.html#环境配置",
    "href": "Hiplot/044-diy-gsea.html#环境配置",
    "title": "自定义基因富集分析",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: clusterProfiler\n\n\n# 安装包\nif (!requireNamespace(\"clusterProfiler\", quietly = TRUE)) {\n  install_github(\"YuLab-SMU/clusterProfiler\")\n}\n\n# 加载包\nlibrary(clusterProfiler)",
    "crumbs": [
      "HIPLOT",
      "DIY GSEA"
    ]
  },
  {
    "objectID": "Hiplot/044-diy-gsea.html#数据准备",
    "href": "Hiplot/044-diy-gsea.html#数据准备",
    "title": "自定义基因富集分析",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata1 &lt;- read.delim(\"files/Hiplot/044-diy-gsea-data1.txt\", header = T)\ndata2 &lt;- read.delim(\"files/Hiplot/044-diy-gsea-data2.txt\", header = T)\n\n# 整理数据格式\ndata1[,2] &lt;- as.numeric(data1[,2])\ngeneList &lt;- data1[,2]\nnames(geneList) &lt;- data1[,1]\ngeneList &lt;- sort(geneList, decreasing = TRUE)\nterm &lt;- data.frame(term=data2[,1], gene=data2[,2])\n\n# 查看数据\nhead(term)\n\n                         term   gene\n1 GO_ADAPTIVE_IMMUNE_RESPONSE ADAM17\n2 GO_ADAPTIVE_IMMUNE_RESPONSE  AICDA\n3 GO_ADAPTIVE_IMMUNE_RESPONSE  ALCAM\n4 GO_ADAPTIVE_IMMUNE_RESPONSE  ANXA1\n5 GO_ADAPTIVE_IMMUNE_RESPONSE   BATF\n6 GO_ADAPTIVE_IMMUNE_RESPONSE  BCL10",
    "crumbs": [
      "HIPLOT",
      "DIY GSEA"
    ]
  },
  {
    "objectID": "Hiplot/044-diy-gsea.html#可视化",
    "href": "Hiplot/044-diy-gsea.html#可视化",
    "title": "自定义基因富集分析",
    "section": "可视化",
    "text": "可视化\n\n# 自定义基因富集分析\ny &lt;- clusterProfiler::GSEA(geneList, TERM2GENE = term, pvalueCutoff = 1)\np &lt;- gseaplot(\n  y,\n  y@result$Description[1],\n  color = \"#000000\",\n  by = \"runningScore\",\n  color.line = \"#4CAF50\",\n  color.vline= \"#FA5860\",\n  title = \"DIY GSEA Plot\",\n  )\n\np\n\n\n\n\n\n\n\n图 1: 自定义基因富集分析",
    "crumbs": [
      "HIPLOT",
      "DIY GSEA"
    ]
  },
  {
    "objectID": "Hiplot/065-ggdag.html",
    "href": "Hiplot/065-ggdag.html",
    "title": "有向无环图",
    "section": "",
    "text": "有向无环图可视化。",
    "crumbs": [
      "HIPLOT",
      "Directed Acyclic Graphs"
    ]
  },
  {
    "objectID": "Hiplot/065-ggdag.html#环境配置",
    "href": "Hiplot/065-ggdag.html#环境配置",
    "title": "有向无环图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggdag\n\n\n# 安装包\nif (!requireNamespace(\"ggdag\", quietly = TRUE)) {\n  install.packages(\"ggdag\")\n}\n\n# 加载包\nlibrary(ggdag)",
    "crumbs": [
      "HIPLOT",
      "Directed Acyclic Graphs"
    ]
  },
  {
    "objectID": "Hiplot/065-ggdag.html#数据准备",
    "href": "Hiplot/065-ggdag.html#数据准备",
    "title": "有向无环图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ntidy_ggdag &lt;- dagify(\n  y ~ x + z2 + w2 + w1,\n  x ~ z1 + w1 + w2,\n  z1 ~ w1 + v,\n  z2 ~ w2 + v,\n  w1 ~ ~w2, # bidirected path\n  exposure = \"x\",\n  outcome = \"y\") %&gt;%\n  tidy_dagitty()\n\n# 查看数据\nhead(tidy_ggdag)\n\n$data\n# A tibble: 13 × 8\n   name       x       y direction to      xend    yend circular\n   &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;     &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;lgl&gt;   \n 1 v     -0.523 -0.644  -&gt;        z1    -1.73   0.0815 FALSE   \n 2 v     -0.523 -0.644  -&gt;        z2     0.207  0.565  FALSE   \n 3 w1    -1.42   1.01   -&gt;        x     -1.68   1.59   FALSE   \n 4 w1    -1.42   1.01   -&gt;        y     -0.504  1.25   FALSE   \n 5 w1    -1.42   1.01   -&gt;        z1    -1.73   0.0815 FALSE   \n 6 w1    -1.42   1.01   &lt;-&gt;       w2    -0.547  1.87   FALSE   \n 7 w2    -0.547  1.87   -&gt;        x     -1.68   1.59   FALSE   \n 8 w2    -0.547  1.87   -&gt;        y     -0.504  1.25   FALSE   \n 9 w2    -0.547  1.87   -&gt;        z2     0.207  0.565  FALSE   \n10 x     -1.68   1.59   -&gt;        y     -0.504  1.25   FALSE   \n11 y     -0.504  1.25   &lt;NA&gt;      &lt;NA&gt;  NA     NA      FALSE   \n12 z1    -1.73   0.0815 -&gt;        x     -1.68   1.59   FALSE   \n13 z2     0.207  0.565  -&gt;        y     -0.504  1.25   FALSE   \n\n$dag\ndag {\nv\nw1\nw2\nx [exposure]\ny [outcome]\nz1\nz2\nv -&gt; z1\nv -&gt; z2\nw1 -&gt; x\nw1 -&gt; y\nw1 -&gt; z1\nw1 &lt;-&gt; w2\nw2 -&gt; x\nw2 -&gt; y\nw2 -&gt; z2\nx -&gt; y\nz1 -&gt; x\nz2 -&gt; y\n}",
    "crumbs": [
      "HIPLOT",
      "Directed Acyclic Graphs"
    ]
  },
  {
    "objectID": "Hiplot/065-ggdag.html#可视化",
    "href": "Hiplot/065-ggdag.html#可视化",
    "title": "有向无环图",
    "section": "可视化",
    "text": "可视化\n\n# 有向无环图\np &lt;- ggdag(tidy_ggdag) +\n  theme_dag() \n\np\n\n\n\n\n\n\n\n图 1: 有向无环图",
    "crumbs": [
      "HIPLOT",
      "Directed Acyclic Graphs"
    ]
  },
  {
    "objectID": "Hiplot/035-custom-icon-scatter.html",
    "href": "Hiplot/035-custom-icon-scatter.html",
    "title": "自定义图标散点图",
    "section": "",
    "text": "可自定义图标的散点图。",
    "crumbs": [
      "HIPLOT",
      "Custom Icon Scatter"
    ]
  },
  {
    "objectID": "Hiplot/035-custom-icon-scatter.html#环境配置",
    "href": "Hiplot/035-custom-icon-scatter.html#环境配置",
    "title": "自定义图标散点图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: echarts4r; echarts4r.assets\n\n\n# 安装包\nif (!requireNamespace(\"echarts4r\", quietly = TRUE)) {\n  install.packages(\"echarts4r\")\n}\nif (!requireNamespace(\"echarts4r.assets\", quietly = TRUE)) {\n  install_github(\"JohnCoene/echarts4r.assets\")\n}\n\n# 加载包\nlibrary(echarts4r)\nlibrary(echarts4r.assets)",
    "crumbs": [
      "HIPLOT",
      "Custom Icon Scatter"
    ]
  },
  {
    "objectID": "Hiplot/035-custom-icon-scatter.html#数据准备",
    "href": "Hiplot/035-custom-icon-scatter.html#数据准备",
    "title": "自定义图标散点图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/035-custom-icon-scatter-data.txt\", header = T)\n\n# 整理数据格式\ndraw_data &lt;- data.frame(\n  x = data[[\"mpg\"]],\n  y = data[[\"wt\"]],\n  size = data[[\"qsec\"]]\n  )\nrm(data)\n\n# 查看数据\nhead(draw_data)\n\n     x     y  size\n1 21.0 2.620 16.46\n2 21.0 2.875 17.02\n3 22.8 2.320 18.61\n4 21.4 3.215 19.44\n5 18.7 3.440 17.02\n6 18.1 3.460 20.22",
    "crumbs": [
      "HIPLOT",
      "Custom Icon Scatter"
    ]
  },
  {
    "objectID": "Hiplot/035-custom-icon-scatter.html#可视化",
    "href": "Hiplot/035-custom-icon-scatter.html#可视化",
    "title": "自定义图标散点图",
    "section": "可视化",
    "text": "可视化\n\n# 自定义图标散点图\np &lt;- draw_data |&gt;\n  e_charts(x) |&gt;\n  e_scatter(\n    y,\n    size,\n    symbol = ea_icons(\"warning\"),\n    name = \"warning\"\n    )\n\np\n\n\n\n\n\n\n\n图 1: 自定义图标散点图",
    "crumbs": [
      "HIPLOT",
      "Custom Icon Scatter"
    ]
  },
  {
    "objectID": "Hiplot/072-ggpubr-boxplot.html",
    "href": "Hiplot/072-ggpubr-boxplot.html",
    "title": "GGPubr 箱线图",
    "section": "",
    "text": "特性丰富的箱线图（GGPubr 接口）。",
    "crumbs": [
      "HIPLOT",
      "GGPubr Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/072-ggpubr-boxplot.html#环境配置",
    "href": "Hiplot/072-ggpubr-boxplot.html#环境配置",
    "title": "GGPubr 箱线图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggpubr)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "GGPubr Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/072-ggpubr-boxplot.html#数据准备",
    "href": "Hiplot/072-ggpubr-boxplot.html#数据准备",
    "title": "GGPubr 箱线图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/072-ggpubr-boxplot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n   len supp dose\n1  4.2   VC  0.5\n2 11.5   VC  0.5\n3  7.3   VC  0.5\n4  5.8   VC  0.5\n5  6.4   VC  0.5\n6 10.0   VC  0.5",
    "crumbs": [
      "HIPLOT",
      "GGPubr Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/072-ggpubr-boxplot.html#可视化",
    "href": "Hiplot/072-ggpubr-boxplot.html#可视化",
    "title": "GGPubr 箱线图",
    "section": "可视化",
    "text": "可视化\n\n# GGPubr 箱线图\np &lt;- ggboxplot(\n  data = data, x = \"supp\", y = \"len\", facet.by = \"dose\",\n  merge = T,\n  color = \"supp\",\n  fill = \"white\") + \n  stat_compare_means(\n    label = \"p.signif\",\n    label.x.npc = \"center\",\n    method = \"wilcox\") + \n  scale_y_continuous(expand = expansion(mult = c(0.2, 0.2))) +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\")) +\n  ggtitle(\"Complex Boxplot\") + \n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: GGPubr 箱线图",
    "crumbs": [
      "HIPLOT",
      "GGPubr Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/010-barplot.html",
    "href": "Hiplot/010-barplot.html",
    "title": "柱状图",
    "section": "",
    "text": "条形图用于显示带有矩形条的类别数据，矩形条的高度或长度与它们所代表的值成比例。条形图可以垂直或水平绘制。条形图显示了离散类别之间的比较。图表的一个轴显示要比较的特定类别，另一个轴代表测量值。一些条形图显示的条形也可显示多个测量变量的值。",
    "crumbs": [
      "HIPLOT",
      "Barplot"
    ]
  },
  {
    "objectID": "Hiplot/010-barplot.html#环境配置",
    "href": "Hiplot/010-barplot.html#环境配置",
    "title": "柱状图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Barplot"
    ]
  },
  {
    "objectID": "Hiplot/010-barplot.html#数据准备",
    "href": "Hiplot/010-barplot.html#数据准备",
    "title": "柱状图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同治疗方案中不同剂量药物作用效果数据。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/010-barplot-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\ndata[, 3] &lt;- factor(data[, 3], levels = unique(data[, 3]))\n\n# 查看数据\nhead(data)\n\n  value  treat dose\n1    13 Group1 high\n2    34 Group2 high\n3    21 Group3 high\n4    43 Group4 high\n5    25 Group1  mid\n6     8 Group2  mid",
    "crumbs": [
      "HIPLOT",
      "Barplot"
    ]
  },
  {
    "objectID": "Hiplot/010-barplot.html#可视化",
    "href": "Hiplot/010-barplot.html#可视化",
    "title": "柱状图",
    "section": "可视化",
    "text": "可视化\n\n# 柱状图\np &lt;- ggplot(data, aes(x = dose, y = value, fill = treat)) +\n  geom_bar(position = position_dodge(0.9), stat = \"identity\") +\n  ggtitle(\"Bar Plot\") +\n  geom_text(aes(label = value), position = position_dodge(0.9), vjust = 1.5, color = \"white\", size = 3.5) +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\",\"#3c5488ff\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 柱状图\n\n\n\n\n\n该条形图展示了不同治疗组（组 1 ~ 组 4）分别用低、中、高剂量进行治疗时，不同的治疗效果。组 1 使用中剂量治疗时效果最好，组 2 使用高剂量治疗时效果最好，组 3 使用剂量治疗时无较大差距，组 4 使用高剂量治疗时效果最好。",
    "crumbs": [
      "HIPLOT",
      "Barplot"
    ]
  },
  {
    "objectID": "Hiplot/042-diffusion-map.html",
    "href": "Hiplot/042-diffusion-map.html",
    "title": "扩散映射图",
    "section": "",
    "text": "扩散映射（diffusion-map）是一种非线性降维算法，可以用于可视化发育轨迹。",
    "crumbs": [
      "HIPLOT",
      "Diffusion Map"
    ]
  },
  {
    "objectID": "Hiplot/042-diffusion-map.html#环境配置",
    "href": "Hiplot/042-diffusion-map.html#环境配置",
    "title": "扩散映射图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: destiny; ggplotify; scatterplot3d; ggpubr\n\n\n# 安装包\nif (!requireNamespace(\"destiny\", quietly = TRUE)) {\n  install_github(\"theislab/destiny\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\nif (!requireNamespace(\"scatterplot3d\", quietly = TRUE)) {\n  install.packages(\"scatterplot3d\")\n}\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n# 加载包\nlibrary(destiny)\nlibrary(ggplotify)\nlibrary(scatterplot3d)\nlibrary(ggpubr)",
    "crumbs": [
      "HIPLOT",
      "Diffusion Map"
    ]
  },
  {
    "objectID": "Hiplot/042-diffusion-map.html#数据准备",
    "href": "Hiplot/042-diffusion-map.html#数据准备",
    "title": "扩散映射图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata1 &lt;- read.delim(\"files/Hiplot/042-diffusion-map-data1.txt\", header = T)\ndata2 &lt;- read.delim(\"files/Hiplot/042-diffusion-map-data2.txt\", header = T)\n\n# 整理数据格式\nsample.info &lt;- data2\nrownames(data1) &lt;- data1[, 1]\ndata1 &lt;- as.matrix(data1[, -1])\n## tsne\nset.seed(123)\ndm_info &lt;- DiffusionMap(t(data1))\ndm_info &lt;- cbind(DC1 = dm_info$DC1, DC2 = dm_info$DC2, DC3 = dm_info$DC3)\ndm_data &lt;- data.frame(\n  sample = colnames(data1),\n  dm_info\n)\n\ncolorBy &lt;- sample.info[match(colnames(data1), sample.info[, 1]), \"Group\"]\ncolorBy &lt;- factor(colorBy, level = colorBy[!duplicated(colorBy)])\ndm_data$colorBy = colorBy\n\n# 查看数据\nhead(dm_data)\n\n   sample        DC1        DC2         DC3 colorBy\nM1     M1 0.05059918 0.15203860 -0.06533168      G1\nM2     M2 0.05030863 0.14435034 -0.06044277      G1\nM3     M3 0.04271398 0.09273382 -0.02730427      G1\nM4     M4 0.04680742 0.10425273 -0.03789962      G1\nM5     M5 0.04971521 0.12786900 -0.05608321      G1\nM6     M6 0.04840072 0.12728303 -0.05256815      G1",
    "crumbs": [
      "HIPLOT",
      "Diffusion Map"
    ]
  },
  {
    "objectID": "Hiplot/042-diffusion-map.html#可视化",
    "href": "Hiplot/042-diffusion-map.html#可视化",
    "title": "扩散映射图",
    "section": "可视化",
    "text": "可视化\n\n1. 2D\n\n# 2D 扩散映射图\np &lt;- ggscatter(data = dm_data,  x = \"DC1\", y = \"DC2\", color = \"colorBy\",\n               size = 2, palette = \"lancet\", alpha = 1) +\n  labs(color = \"Group\") +\n  ggtitle(\"Diffusion Map\") +\n  scale_color_manual(values = c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\")) +\n  theme_classic() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 2D 扩散映射图\n\n\n\n\n\n\n\n2. 3D\n\n# 3D 扩散映射图\ngroup.color &lt;- c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\")\nnames(group.color) &lt;- unique(dm_data$colorBy)\ngroup.color &lt;- group.color[!is.na(names(group.color))]\nif (length(group.color) == 0) {\n  group.color &lt;- c(Default=\"black\")\n  dm_data$colorBy &lt;- \"Default\"\n}\np &lt;- as.ggplot(function(){\n  scatterplot3d(x = dm_data$DC1, y = dm_data$DC2, z = dm_data$DC3,\n                color =  alpha(group.color[dm_data$colorBy], 1),\n                xlim=c(min(dm_data$DC1), max(dm_data$DC1)),\n                ylim=c(min(dm_data$DC2), max(dm_data$DC2)),\n                zlim=c(min(dm_data$DC3), max(dm_data$DC3)),\n                pch = 16, cex.symbols  = 0.6,\n                scale.y = 0.8,\n                xlab = \"DC1\", ylab = \"DC2\", zlab = \"DC3\",\n                angle = 40,\n                main = \"Diffusion Map\",\n                col.axis = \"#444444\", col.grid = \"#CCCCCC\")\n  legend(\"right\", legend = names(group.color),\n         col = alpha(group.color, 0.8), pch = 16)\n    })\np &lt;- p + theme_classic()\n\np\n\n\n\n\n\n\n\n图 2: 3D 扩散映射图",
    "crumbs": [
      "HIPLOT",
      "Diffusion Map"
    ]
  },
  {
    "objectID": "Hiplot/002-barcode-plot.html",
    "href": "Hiplot/002-barcode-plot.html",
    "title": "条码图",
    "section": "",
    "text": "条码图适用于展示大量数据的分布情况。",
    "crumbs": [
      "HIPLOT",
      "Barcode Plot"
    ]
  },
  {
    "objectID": "Hiplot/002-barcode-plot.html#环境配置",
    "href": "Hiplot/002-barcode-plot.html#环境配置",
    "title": "条码图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Barcode Plot"
    ]
  },
  {
    "objectID": "Hiplot/002-barcode-plot.html#数据准备",
    "href": "Hiplot/002-barcode-plot.html#数据准备",
    "title": "条码图",
    "section": "数据准备",
    "text": "数据准备\n案例数据为某商品在三个地区各500个门店的销售额。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/002-barcode-plot-data.txt\", header = T)\n# 查看数据\nhead(data)\n\n     region    sales\n1 GuangDong 42.54612\n2 GuangDong 46.26102\n3 GuangDong 46.00448\n4 GuangDong 45.05684\n5 GuangDong 48.67611\n6 GuangDong 56.95071",
    "crumbs": [
      "HIPLOT",
      "Barcode Plot"
    ]
  },
  {
    "objectID": "Hiplot/002-barcode-plot.html#可视化",
    "href": "Hiplot/002-barcode-plot.html#可视化",
    "title": "条码图",
    "section": "可视化",
    "text": "可视化\n\n# 条码图\np &lt;- ggplot(data, aes(x = sales, y = region)) +\n  geom_tile(width = 0.01, height = 0.9, fill = \"#606fcc\") + # 控制条带的宽度和高度\n  theme_bw() +\n  labs(title = \"Sales report\", x = \"Sales\", y = \"Region\") +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 条码图\n\n\n\n\n\n通过条码图可以看到该商品在广东和福建地区销售额分布在50左右的门店数量较多，且在广东各门店之间销售额差异较小，分布较集中。\n\n\n\n\n\n\n提示\n\n\n\n特殊参数: \n\nwidth：条带宽度\nheight：条带高度\ncolor：条带颜色",
    "crumbs": [
      "HIPLOT",
      "Barcode Plot"
    ]
  },
  {
    "objectID": "Hiplot/029-cor-heatmap-simple.html",
    "href": "Hiplot/029-cor-heatmap-simple.html",
    "title": "简单可变相关热图",
    "section": "",
    "text": "提供一个简单化版本的相关热图可视化。",
    "crumbs": [
      "HIPLOT",
      "Simplified Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/029-cor-heatmap-simple.html#环境配置",
    "href": "Hiplot/029-cor-heatmap-simple.html#环境配置",
    "title": "简单可变相关热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; sigminer\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"sigminer\", quietly = TRUE)) {\n  install.packages(\"sigminer\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(sigminer)",
    "crumbs": [
      "HIPLOT",
      "Simplified Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/029-cor-heatmap-simple.html#数据准备",
    "href": "Hiplot/029-cor-heatmap-simple.html#数据准备",
    "title": "简单可变相关热图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/029-cor-heatmap-simple-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n   mpg cyl disp  hp drat    wt  qsec vs am gear carb\n1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n6 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1",
    "crumbs": [
      "HIPLOT",
      "Simplified Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/029-cor-heatmap-simple.html#可视化",
    "href": "Hiplot/029-cor-heatmap-simple.html#可视化",
    "title": "简单可变相关热图",
    "section": "可视化",
    "text": "可视化\n\n# 简单可变相关热图\np &lt;- show_cor(\n  data = data,\n  x_vars = c(\"mpg\",\"cyl\",\"disp\"),\n  y_vars = c(\"wt\",\"hp\",\"drat\"),\n  cor_method = \"pearson\",\n  vis_method = \"square\",\n  lab = T,\n  test = T,\n  hc_order = F,\n  legend.title = \"Corr\"\n  ) +\n  ggtitle(\"\") +\n  labs(x=\"\", y=\"\") +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 简单可变相关热图",
    "crumbs": [
      "HIPLOT",
      "Simplified Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/053-ezcox.html",
    "href": "Hiplot/053-ezcox.html",
    "title": "Cox 模型森林图",
    "section": "",
    "text": "COX 模型森林图对 COX 模型构建风险森林图，以便于筛选变量的一种可视化图形。",
    "crumbs": [
      "HIPLOT",
      "Cox Models Forest"
    ]
  },
  {
    "objectID": "Hiplot/053-ezcox.html#环境配置",
    "href": "Hiplot/053-ezcox.html#环境配置",
    "title": "Cox 模型森林图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ezcox\n\n\n# 安装包\nif (!requireNamespace(\"ezcox\", quietly = TRUE)) {\n  install.packages(\"ezcox\")\n}\n\n# 加载包\nlibrary(ezcox)",
    "crumbs": [
      "HIPLOT",
      "Cox Models Forest"
    ]
  },
  {
    "objectID": "Hiplot/053-ezcox.html#数据准备",
    "href": "Hiplot/053-ezcox.html#数据准备",
    "title": "Cox 模型森林图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为时间，生存结局及多个变量因素。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/053-ezcox-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  time status sex ph.ecog age\n1  306      2   1       1  74\n2  455      2   1       0  68\n3 1010      1   1       0  56\n4  210      2   1       1  57\n5  883      2   1       0  60\n6 1022      1   1       1  74",
    "crumbs": [
      "HIPLOT",
      "Cox Models Forest"
    ]
  },
  {
    "objectID": "Hiplot/053-ezcox.html#可视化",
    "href": "Hiplot/053-ezcox.html#可视化",
    "title": "Cox 模型森林图",
    "section": "可视化",
    "text": "可视化\n\n# Cox 模型森林图\np &lt;- show_forest(\n  data = data,\n  covariates = c(\"sex\", \"ph.ecog\"),\n  controls = \"age\",\n  merge_models = F,\n  drop_controls = F,\n  add_caption = T\n)\n\np\n\n\n\n\n\n\n\n图 1: Cox 模型森林图\n\n\n\n\n\n图示表格第一列表示变量及样本数，第二列森林图图示，第三列表示CI95%置信区间范围及其平均值和 P 值\n森林图解读\n中间垂直线表示无效线，横线表示该变量因素的95%置信区间，长短表示置信区间范围的大小，若某变量因素置信区间与无效线相交，则认为该变量因素无统计学意义，方块的位置是HR的点估计。\nage 因素为控制变量。\nph.ecog 因素的发生率大于年龄因素的发生率，且 ph.ecog 因素会增加生存的发生（P &lt; 0.001，有统计学意义）。\nsex 因素的发生率小于年龄因素的发生率，且 sex 因素会减少生存的发生（P = 0.002 &lt; 0.05，有统计学意义）。",
    "crumbs": [
      "HIPLOT",
      "Cox Models Forest"
    ]
  },
  {
    "objectID": "Hiplot/001-area.html",
    "href": "Hiplot/001-area.html",
    "title": "面积图",
    "section": "",
    "text": "面积图是一种基于折线图并以图形方式显示定量数据的图形。轴和线之间的区域通常用颜色、纹理和图案来强调。",
    "crumbs": [
      "HIPLOT",
      "Area"
    ]
  },
  {
    "objectID": "Hiplot/001-area.html#环境配置",
    "href": "Hiplot/001-area.html#环境配置",
    "title": "面积图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Area"
    ]
  },
  {
    "objectID": "Hiplot/001-area.html#数据准备",
    "href": "Hiplot/001-area.html#数据准备",
    "title": "面积图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为 x 轴数值和 y 轴数值。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/001-area-data.txt\", header = T)\n# 查看数据\nhead(data)\n\n   group xaxis.value yaxis.value\n1 Group1        1900          26\n2 Group1        1901          27\n3 Group1        1902          10\n4 Group1        1903          16\n5 Group1        1904          19\n6 Group1        1905          18",
    "crumbs": [
      "HIPLOT",
      "Area"
    ]
  },
  {
    "objectID": "Hiplot/001-area.html#可视化",
    "href": "Hiplot/001-area.html#可视化",
    "title": "面积图",
    "section": "可视化",
    "text": "可视化\n\n# 面积图\np &lt;- ggplot(data, aes(x = xaxis.value, y = yaxis.value, fill = group)) +\n  geom_area(alpha = 1) +\n  ylab(\"yaxis.value\") +\n  xlab(\"xaxis.value\") +\n  ggtitle(\"Area Plot\") +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 面积图\n\n\n\n\n\n不同颜色代表不同组的面积图。",
    "crumbs": [
      "HIPLOT",
      "Area"
    ]
  },
  {
    "objectID": "Hiplot/083-group-dumbbell.html",
    "href": "Hiplot/083-group-dumbbell.html",
    "title": "分组哑铃图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggalt\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggalt\", quietly = TRUE)) {\n  install.packages(\"ggalt\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggalt)",
    "crumbs": [
      "HIPLOT",
      "Group Dumbbell"
    ]
  },
  {
    "objectID": "Hiplot/083-group-dumbbell.html#环境配置",
    "href": "Hiplot/083-group-dumbbell.html#环境配置",
    "title": "分组哑铃图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggalt\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggalt\", quietly = TRUE)) {\n  install.packages(\"ggalt\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggalt)",
    "crumbs": [
      "HIPLOT",
      "Group Dumbbell"
    ]
  },
  {
    "objectID": "Hiplot/083-group-dumbbell.html#数据准备",
    "href": "Hiplot/083-group-dumbbell.html#数据准备",
    "title": "分组哑铃图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/083-group-dumbbell-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[order(data[[\"group\"]], data[[\"y1952\"]]),]\ndata[[\"country\"]] &lt;- factor(data[[\"country\"]], levels = data[[\"country\"]])\n\n# 查看数据\nhead(data)\n\n              country  y1952  y2007 group\n13              Haiti 37.579 60.916     A\n2             Bolivia 40.414 65.554     A\n12          Guatemala 42.023 70.259     A\n11        El Salvador 45.262 71.878     A\n9  Dominican Republic 45.928 72.235     A\n10            Ecuador 48.357 74.994     A",
    "crumbs": [
      "HIPLOT",
      "Group Dumbbell"
    ]
  },
  {
    "objectID": "Hiplot/083-group-dumbbell.html#可视化",
    "href": "Hiplot/083-group-dumbbell.html#可视化",
    "title": "分组哑铃图",
    "section": "可视化",
    "text": "可视化\n\n# 分组哑铃图\np &lt;- ggplot(data = data, aes(x = y1952, xend = y2007, y = country, color = group)) +\n  geom_dumbbell(size = 1, size_xend = 2, size_x = 2) +\n  theme_bw()\n\np\n\n\n\n\n\n\n\n图 1: 分组哑铃图",
    "crumbs": [
      "HIPLOT",
      "Group Dumbbell"
    ]
  },
  {
    "objectID": "Hiplot/045-donut.html",
    "href": "Hiplot/045-donut.html",
    "title": "环形图",
    "section": "",
    "text": "环形图是饼图的一种变体，它有一个允许包含数据整体额外信息的空白中心。且与饼图目的一致，都是用来说明数据比例。",
    "crumbs": [
      "HIPLOT",
      "Donut"
    ]
  },
  {
    "objectID": "Hiplot/045-donut.html#环境配置",
    "href": "Hiplot/045-donut.html#环境配置",
    "title": "环形图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Donut"
    ]
  },
  {
    "objectID": "Hiplot/045-donut.html#数据准备",
    "href": "Hiplot/045-donut.html#数据准备",
    "title": "环形图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同分组及其数据。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/045-donut-data.txt\", header = T)\n\n# 整理数据格式\ndata$fraction &lt;- data[, 2] / sum(data[, 2])\ndata$ymax &lt;- cumsum(data$fraction)\ndata$ymin &lt;- c(0, head(data$ymax, n = -1))\ndata$labelPosition &lt;- (data$ymax + data$ymin) / 2\ndata$label &lt;- paste0(data[, 1], \"\\n\",\n  \"(\", data[, 2], \", \", sprintf(\"%2.2f%%\", 100 * data[, 2] / sum(data[, 2])), \")\",\n  sep = \"\"\n)\n\n# 查看数据\nhead(data)\n\n   group value  fraction      ymax      ymin labelPosition                label\n1 Group1    13 0.1171171 0.1171171 0.0000000    0.05855856 Group1\\n(13, 11.71%)\n2 Group2    34 0.3063063 0.4234234 0.1171171    0.27027027 Group2\\n(34, 30.63%)\n3 Group3    21 0.1891892 0.6126126 0.4234234    0.51801802 Group3\\n(21, 18.92%)\n4 Group4    43 0.3873874 1.0000000 0.6126126    0.80630631 Group4\\n(43, 38.74%)",
    "crumbs": [
      "HIPLOT",
      "Donut"
    ]
  },
  {
    "objectID": "Hiplot/045-donut.html#可视化",
    "href": "Hiplot/045-donut.html#可视化",
    "title": "环形图",
    "section": "可视化",
    "text": "可视化\n\n# 环形图\np &lt;- ggplot(data, aes_(ymax = as.name(\"ymax\"), ymin = as.name(\"ymin\"), \n                       xmax = 4, xmin = 3, fill = as.name(colnames(data)[1]))) +\n  geom_rect() +\n  geom_text(x = 5 + (4 - 5) / 3,\n            aes(y = labelPosition, label = label), size = 4) +\n  coord_polar(theta = \"y\") +\n  xlim(c(2, 5)) +\n  scale_fill_manual(values = c(\"#00468BCC\",\"#ED0000CC\",\"#42B540CC\",\"#0099B4CC\")) +\n  ggtitle(\"Donut Plot\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"none\")\n\np\n\n\n\n\n\n\n\n图 1: 环形图\n\n\n\n\n\n不同颜色表示不同组群，不同面积表示数据及占比。",
    "crumbs": [
      "HIPLOT",
      "Donut"
    ]
  },
  {
    "objectID": "Hiplot/071-ggpiestats.html",
    "href": "Hiplot/071-ggpiestats.html",
    "title": "饼状图（ggpiestats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Piestats"
    ]
  },
  {
    "objectID": "Hiplot/071-ggpiestats.html#环境配置",
    "href": "Hiplot/071-ggpiestats.html#环境配置",
    "title": "饼状图（ggpiestats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Piestats"
    ]
  },
  {
    "objectID": "Hiplot/071-ggpiestats.html#数据准备",
    "href": "Hiplot/071-ggpiestats.html#数据准备",
    "title": "饼状图（ggpiestats）",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/071-ggpiestats-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"am\", \"cyl\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = unique(data[, axis[1]]))\ndata[, axis[2]] &lt;- factor(data[, axis[2]], levels = unique(data[, axis[2]]))\n\n# 查看数据\nhead(data)\n\n   mpg cyl disp  hp drat    wt  qsec vs am gear carb\n1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n6 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1",
    "crumbs": [
      "HIPLOT",
      "Piestats"
    ]
  },
  {
    "objectID": "Hiplot/071-ggpiestats.html#可视化",
    "href": "Hiplot/071-ggpiestats.html#可视化",
    "title": "饼状图（ggpiestats）",
    "section": "可视化",
    "text": "可视化\n\n# 饼状图\np &lt;- ggpiestats(data = data, x = am, y = cyl,\n                paired = F) +\n  scale_fill_manual(values = c(\"#3B4992FF\",\"#EE0000FF\"))\n\np\n\n\n\n\n\n\n\n图 1: 饼状图",
    "crumbs": [
      "HIPLOT",
      "Piestats"
    ]
  },
  {
    "objectID": "Hiplot/004-barplot-color-group.html",
    "href": "Hiplot/004-barplot-color-group.html",
    "title": "颜色组柱状图",
    "section": "",
    "text": "颜色组柱状图可以用于分组展示数据值，并按顺序标注不同颜色。",
    "crumbs": [
      "HIPLOT",
      "Barplot Color Group"
    ]
  },
  {
    "objectID": "Hiplot/004-barplot-color-group.html#环境配置",
    "href": "Hiplot/004-barplot-color-group.html#环境配置",
    "title": "颜色组柱状图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: plot3D; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"plot3D\", quietly = TRUE)) {\n  install.packages(\"plot3D\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(stringr)",
    "crumbs": [
      "HIPLOT",
      "Barplot Color Group"
    ]
  },
  {
    "objectID": "Hiplot/004-barplot-color-group.html#数据准备",
    "href": "Hiplot/004-barplot-color-group.html#数据准备",
    "title": "颜色组柱状图",
    "section": "数据准备",
    "text": "数据准备\n数据表格（三列）：\nTerm | 条目名称，如 GO/KEGG 通路名称\nCount | 条目的数值大小，如某通路富集到的基因数\nType | 该通路所属大类：如 BP/MF/CC/KEGG\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/004-barplot-color-group-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"term\", \"count\", \"type\")\ndata[,\"term\"] &lt;- str_to_sentence(str_remove(data[,\"term\"], pattern = \"\\\\w+:\\\\d+\\\\W\"))\ndata[,\"term\"] &lt;- factor(data[,\"term\"], \n                        levels =  data[,\"term\"][length(data[,\"term\"]):1])\ndata[,\"type\"] &lt;- factor(data[,\"type\"], \n                        levels = data[!duplicated(data[,\"type\"]), \"type\"])\n\n# 查看数据\ndata\n\n                                                  term count type\n1                                      Immune response    20   BP\n2                        Defense response to bacterium    11   BP\n3                                      Cell chemotaxis     8   BP\n4                                        Cell adhesion    17   BP\n5                                Complement activation     8   BP\n6                  Cytokine-mediated signaling pathway     8   MF\n7                             Phagocytosis, engulfment     5   MF\n8              Negative regulation of jak-stat cascade     5   MF\n9                             Epoxygenase p450 pathway     4   MF\n10                Chemokine-mediated signaling pathway     6   MF\n11  Negative regulation of leukocyte apoptotic process     3   MF\n12                   B cell receptor signaling pathway     5   MF\n13          Cellular response to tumor necrosis factor     6   CC\n14                   Positive regulation of chemotaxis     3   CC\n15                 Positive regulation of angiogenesis     6   CC\n16                        Collagen fibril organization     4   CC\n17 Positive regulation of homotypic cell-cell adhesion    20 KEGG\n18              Regulation of cell projection assembly    14 KEGG\n19                 Prostate epithelial cord elongation    10 KEGG\n20                         Bile acid catabolic process     8 KEGG\n21                           Cellular response to drug     7 KEGG\n22                 Glycosaminoglycan metabolic process     4 KEGG",
    "crumbs": [
      "HIPLOT",
      "Barplot Color Group"
    ]
  },
  {
    "objectID": "Hiplot/004-barplot-color-group.html#可视化",
    "href": "Hiplot/004-barplot-color-group.html#可视化",
    "title": "颜色组柱状图",
    "section": "可视化",
    "text": "可视化\n\n# 三维柱状图\np &lt;- ggplot(data = data, aes(x = term, y = count, fill = type)) +\n  geom_bar(stat = \"identity\", width = 0.8) + \n  theme_bw() +\n  xlab(\"Count\") +\n  ylab(\"Term\") +\n  guides(fill = guide_legend(title=\"Type\")) +\n  ggtitle(\"Barplot Color Group\") + \n  coord_flip() +\n  theme_classic() +\n  scale_fill_manual(values = c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\")) +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 颜色组柱状图\n\n\n\n\n\n上图展示了 GO/KEGG 通路富集分析结果的可视化。",
    "crumbs": [
      "HIPLOT",
      "Barplot Color Group"
    ]
  },
  {
    "objectID": "Hiplot/024-circular-pie-chart.html",
    "href": "Hiplot/024-circular-pie-chart.html",
    "title": "环形饼图",
    "section": "",
    "text": "饼图的另一种形式",
    "crumbs": [
      "HIPLOT",
      "Circular Pie Chart"
    ]
  },
  {
    "objectID": "Hiplot/024-circular-pie-chart.html#环境配置",
    "href": "Hiplot/024-circular-pie-chart.html#环境配置",
    "title": "环形饼图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Circular Pie Chart"
    ]
  },
  {
    "objectID": "Hiplot/024-circular-pie-chart.html#数据准备",
    "href": "Hiplot/024-circular-pie-chart.html#数据准备",
    "title": "环形饼图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/024-circular-pie-chart-data.txt\", header = T)\n\n# 整理数据格式\ndata$draw_percent &lt;- data[[\"values\"]] / sum(data[[\"values\"]]) * 100\ndata$draw_class &lt;- 1\ndata2 &lt;- data\ndata2[[\"values\"]] &lt;- 0\ndata2$draw_class &lt;- 0\ndata &lt;- rbind(data, data2)\nfiltered_data &lt;- data[data[[\"values\"]] &gt; 0,]\n\n# 查看数据\nhead(data)\n\n  labels values draw_percent draw_class\n1      A     20    16.666667          1\n2      B     30    25.000000          1\n3      C     15    12.500000          1\n4      D     10     8.333333          1\n5      E     45    37.500000          1\n6      A      0    16.666667          0",
    "crumbs": [
      "HIPLOT",
      "Circular Pie Chart"
    ]
  },
  {
    "objectID": "Hiplot/024-circular-pie-chart.html#可视化",
    "href": "Hiplot/024-circular-pie-chart.html#可视化",
    "title": "环形饼图",
    "section": "可视化",
    "text": "可视化\n\n# 环形饼图\np &lt;- ggplot(data, aes(x = draw_class, y = values, fill = labels)) +\n  geom_bar(position = \"stack\", stat = \"identity\", width = 0.7) +\n  geom_text(data = filtered_data, aes(label = sprintf(\"%.2f%%\", draw_percent)),\n            position = position_stack(vjust = 0.5), size = 3) +\n  coord_polar(theta = \"y\") +\n  xlab(\"\") +\n  ylab(\"Pie Chart\") +\n  scale_fill_manual(values = c(\"#e64b35ff\",\"#4dbbd5ff\",\"#00a087ff\",\"#3c5488ff\",\"#f39b7fff\")) +\n  theme_minimal() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(color = \"black\"),\n        axis.text.y = element_blank(),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank())\n\np\n\n\n\n\n\n\n\n图 1: 环形饼图",
    "crumbs": [
      "HIPLOT",
      "Circular Pie Chart"
    ]
  },
  {
    "objectID": "Hiplot/009-barplot-line-multiple.html",
    "href": "Hiplot/009-barplot-line-multiple.html",
    "title": "多柱状图和线图",
    "section": "",
    "text": "在一个图表中显示多个条形图或线形图。",
    "crumbs": [
      "HIPLOT",
      "Multiple Barplot&Line"
    ]
  },
  {
    "objectID": "Hiplot/009-barplot-line-multiple.html#环境配置",
    "href": "Hiplot/009-barplot-line-multiple.html#环境配置",
    "title": "多柱状图和线图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; reshape2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"reshape2\", quietly = TRUE)) {\n  install.packages(\"reshape2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Multiple Barplot&Line"
    ]
  },
  {
    "objectID": "Hiplot/009-barplot-line-multiple.html#数据准备",
    "href": "Hiplot/009-barplot-line-multiple.html#数据准备",
    "title": "多柱状图和线图",
    "section": "数据准备",
    "text": "数据准备\n具有多列数据（数字）的数据框。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/009-barplot-line-multiple-data.txt\", header = T)\n\n# 整理数据格式\ndata_melt &lt;- melt(data, id.vars = colnames(data)[1])\ndata_melt[, 1] &lt;- factor(data_melt[, 1], level = unique(data_melt[, 1]))\n\n# 查看数据\nhead(data)\n\n  age height weight math biology english chinese\n1  12    158    100  120      90     115     140\n2  15    160    110  145      80     120     120\n3  18    175    120  132      95     118     110\n4  20    176    121  124      99     118     136\n5  21    176    120  135      98     114     150\n6  22    177    124  140      87     110     150",
    "crumbs": [
      "HIPLOT",
      "Multiple Barplot&Line"
    ]
  },
  {
    "objectID": "Hiplot/009-barplot-line-multiple.html#可视化",
    "href": "Hiplot/009-barplot-line-multiple.html#可视化",
    "title": "多柱状图和线图",
    "section": "可视化",
    "text": "可视化\n\n1. 多线图\n\n# 多线图\np &lt;- ggplot(data = data_melt, aes(x = age, y = value, group = variable,\n                                  colour = variable)) +\n  geom_line(alpha = 1, size = 1) +\n  geom_point(aes(shape = variable), alpha = 1, size = 3) +\n  labs(title = \"Line (Multiple)\", x = \"X Lable\", y = \"Value\") +\n  scale_color_manual(values = c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\",\"#631879FF\",\n                               \"#008280FF\",\"#BB0021FF\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 多线图\n\n\n\n\n\n\n\n2. 多柱状图\n\n# 多柱状图\np &lt;- ggplot(data = data_melt, aes(x = age, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), colour = \"black\",\n           alpha = 1) +\n  labs(title = \"\", x = \"X Lable\", y = \"Value\") +\n  \n  scale_fill_manual(values = c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\",\"#631879FF\",\n                               \"#008280FF\",\"#BB0021FF\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 2: 多柱状图",
    "crumbs": [
      "HIPLOT",
      "Multiple Barplot&Line"
    ]
  },
  {
    "objectID": "Hiplot/016-bubble.html",
    "href": "Hiplot/016-bubble.html",
    "title": "气泡图",
    "section": "",
    "text": "气泡图是在散点图的基础上，用气泡的大小来展示第三个变量,从而能够同时对三个变量进行对比分析的统计图表。",
    "crumbs": [
      "HIPLOT",
      "Bubble"
    ]
  },
  {
    "objectID": "Hiplot/016-bubble.html#环境配置",
    "href": "Hiplot/016-bubble.html#环境配置",
    "title": "气泡图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; stringr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"stringr\", quietly = TRUE)) {\n  install.packages(\"stringr\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(stringr)",
    "crumbs": [
      "HIPLOT",
      "Bubble"
    ]
  },
  {
    "objectID": "Hiplot/016-bubble.html#数据准备",
    "href": "Hiplot/016-bubble.html#数据准备",
    "title": "气泡图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为 GO Term, Gene Ridio,基因数和 P 值。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/016-bubble-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 1] &lt;- str_to_sentence(str_remove(data[, 1], pattern = \"\\\\w+:\\\\d+\\\\W\"))\ntopnum &lt;- 7\ndata &lt;- data[1:topnum, ]\ndata[, 1] &lt;- factor(data[, 1], level = rev(unique(data[, 1])))\n\n# 查看数据\nhead(data)\n\n                               Term Count     Ratio   PValue\n1                   Immune response    20 10.471204 9.61e-08\n2     Defense response to bacterium    11  5.759162 3.02e-06\n3                   Cell chemotaxis     8  4.188482 5.14e-06\n4                     Cell adhesion    17  8.900524 2.73e-05\n5             Complement activation     8  4.188482 3.56e-05\n6 Extracellular matrix organization    11  5.759162 4.23e-05",
    "crumbs": [
      "HIPLOT",
      "Bubble"
    ]
  },
  {
    "objectID": "Hiplot/016-bubble.html#可视化",
    "href": "Hiplot/016-bubble.html#可视化",
    "title": "气泡图",
    "section": "可视化",
    "text": "可视化\n\n# 气泡图\np &lt;- ggplot(data, aes(Ratio, Term)) +\n  geom_point(aes(size = Count, colour = -log10(PValue))) +\n  scale_colour_gradient(low = \"#00438E\", high = \"#E43535\") +\n  labs(colour = \"-log10 (PValue)\", size = \"Count\", x = \"Ratio\", y = \"Term\", \n       title = \"Bubble Plot\") +\n  scale_x_continuous(limits = c(0, max(data$Ratio) * 1.2)) +\n  guides(color = guide_colorbar(order = 1), size = guide_legend(order = 2)) +\n  scale_y_discrete(labels = function(x) {str_wrap(x, width = 65)}) +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 气泡图\n\n\n\n\n\nx 轴表示 Gene Ridio，y 轴是 GO Term; 点的大小表示基因数，点的颜色代表 P 值的高低。",
    "crumbs": [
      "HIPLOT",
      "Bubble"
    ]
  },
  {
    "objectID": "Hiplot/048-dumbbell.html",
    "href": "Hiplot/048-dumbbell.html",
    "title": "哑铃图",
    "section": "",
    "text": "哑铃图用于展示数据变化。",
    "crumbs": [
      "HIPLOT",
      "Dumbbell Chart"
    ]
  },
  {
    "objectID": "Hiplot/048-dumbbell.html#环境配置",
    "href": "Hiplot/048-dumbbell.html#环境配置",
    "title": "哑铃图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggalt\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggalt\", quietly = TRUE)) {\n  install.packages(\"ggalt\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggalt)",
    "crumbs": [
      "HIPLOT",
      "Dumbbell Chart"
    ]
  },
  {
    "objectID": "Hiplot/048-dumbbell.html#数据准备",
    "href": "Hiplot/048-dumbbell.html#数据准备",
    "title": "哑铃图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/048-dumbbell-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n    country  y1952  y2007\n1 Argentina 62.485 75.320\n2   Bolivia 40.414 65.554\n3    Brazil 50.917 72.390\n4    Canada 68.750 80.653\n5     Chile 54.745 78.553\n6  Colombia 50.643 72.889",
    "crumbs": [
      "HIPLOT",
      "Dumbbell Chart"
    ]
  },
  {
    "objectID": "Hiplot/048-dumbbell.html#可视化",
    "href": "Hiplot/048-dumbbell.html#可视化",
    "title": "哑铃图",
    "section": "可视化",
    "text": "可视化\n\n# 哑铃图\ncolors &lt;- c(\"#3B4992FF\",\"#EE0000FF\")\np &lt;- ggplot(data, aes(y = reorder(country, y1952), x = y1952, xend = y2007)) +\n  geom_dumbbell(size = 1, size_x = 3,  size_xend = 3, colour = \"#AFAFAF\",  \n                colour_x = colors[1],  colour_xend = colors[2]) +\n  labs(title = \"Dummbbell Chart\", x = \"Life Expectancy (years)\",\n       y = \"country\") +\n  theme_minimal() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 哑铃图",
    "crumbs": [
      "HIPLOT",
      "Dumbbell Chart"
    ]
  },
  {
    "objectID": "Hiplot/086-heatmap.html",
    "href": "Hiplot/086-heatmap.html",
    "title": "热图",
    "section": "",
    "text": "热图是对实验数据分布情况进行分析的直观可视化方法，可以用来进行实验数据的质量控制和差异数据的具象化展示，还可以对数据和样品进行聚类分析，观测样品质量。",
    "crumbs": [
      "HIPLOT",
      "Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/086-heatmap.html#环境配置",
    "href": "Hiplot/086-heatmap.html#环境配置",
    "title": "热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ComplexHeatmap\n\n\n# 安装包\nif (!requireNamespace(\"ComplexHeatmap\", quietly = TRUE)) {\n  install_github(\"jokergoo/ComplexHeatmap\")\n}\nif (!requireNamespace(\"genefilter\", quietly = TRUE)) {\n  install.packages(\"genefilter\")\n}\n\n# 加载包\nlibrary(ComplexHeatmap)\nlibrary(genefilter)",
    "crumbs": [
      "HIPLOT",
      "Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/086-heatmap.html#数据准备",
    "href": "Hiplot/086-heatmap.html#数据准备",
    "title": "热图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为 count (基因名称及其对应的基因表达值)，样本信息（样本名称，所属组群及其他相关信息，如年龄），基因信息（基因名称及其所属通路，如肿瘤通路和生理状况下通路）。\n\n# 加载数据\ndata_count &lt;- read.delim(\"files/Hiplot/086-heatmap-data1.txt\", header = T)\ndata_sample &lt;- read.delim(\"files/Hiplot/086-heatmap-data2.txt\", header = T)\ndata_gene &lt;- read.delim(\"files/Hiplot/086-heatmap-data3.txt\", header = T)\n\n# 整理数据格式\ndata_count &lt;- data_count[!is.na(data_count[, 1]), ]\nidx &lt;- duplicated(data_count[, 1])\ndata_count[idx, 1] &lt;- paste0(data_count[idx, 1], \"--dup-\", cumsum(idx)[idx])\nfor (i in 2:ncol(data_count)) {\n  data_count[, i] &lt;- as.numeric(data_count[, i])\n}\ndata &lt;- as.matrix(data_count[, -1])\nrownames(data) &lt;- data_count[, 1]\n\n## 给样本添加标注信息\nsample.info &lt;- data_sample[-1]\nrow.names(sample.info) &lt;- data_sample[, 1]\nsample_info_reorder &lt;- as.data.frame(sample.info[match(\n  colnames(data), rownames(sample.info)\n  ), ])\ncolnames(sample_info_reorder) &lt;- colnames(sample.info)\nrownames(sample_info_reorder) &lt;- colnames(data)\n\n## 给基因添加标注信息\ngene_info &lt;- data_gene[-1]\nrownames(gene_info) &lt;- data_gene[, 1]\ngene_info_reorder &lt;- as.data.frame(gene_info[match(\n  rownames(data), rownames(gene_info)\n  ), ])\ncolnames(gene_info_reorder) &lt;- colnames(gene_info)\nrownames(gene_info_reorder) &lt;- rownames(data)\n\n# 查看数据\nhead(data)\n\n              M1       M2        M3       M4       M5       M6       M7\nGBP4    6.599344 5.226266  3.693288 3.938501 4.527193 9.308119 8.987865\nBCAT1   5.760380 4.892783  5.448924 3.485413 3.855669 8.662081 8.793320\nCMPK2   9.561905 4.549168  3.998655 5.614384 3.904793 9.790770 7.133188\nSTOX2   8.396409 8.717055  8.039064 7.643060 9.274649 4.417013 4.725270\nPADI2   8.419766 8.268430  8.451181 9.200732 8.598207 4.590033 5.368268\nSCARNA5 7.653074 5.780393 10.633550 5.913684 8.805605 5.890120 5.527945\n              M8       M9      M10\nGBP4    7.658312 8.666038 7.419708\nBCAT1   8.765915 8.097206 8.262942\nCMPK2   7.379591 7.938063 6.154118\nSTOX2   3.542217 4.305187 6.964710\nPADI2   4.136667 4.910986 4.080363\nSCARNA5 3.822596 4.041078 7.956589",
    "crumbs": [
      "HIPLOT",
      "Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/086-heatmap.html#可视化",
    "href": "Hiplot/086-heatmap.html#可视化",
    "title": "热图",
    "section": "可视化",
    "text": "可视化\n\n# 热图\n## 设置annotation_col和annotation_row，分别对样本和基因添加附注\ntop_var &lt;- 100\ntop_var_genes &lt;- rownames(data)[head(\n  order(genefilter::rowVars(data), decreasing = TRUE),\n  nrow(data) * top_var / 100\n)]\n## 设置annotation_colors\ncol &lt;- colorRampPalette(c(\"#0060BF\",\"#FFFFFF\",\"#CA1111\"))(50)\nannotation_colors &lt;- list()\nfor(i in colnames(sample_info_reorder)) {\n  if (is.numeric(sample_info_reorder[,i])) {\n    annotation_colors[[i]] &lt;- col\n  } else {\n    ref &lt;- c(\"#323232\",\"#1B6393\")\n    annotation_colors[[i]] &lt;- ref\n    names(annotation_colors[[i]]) &lt;- unique(sample_info_reorder[,i])\n  }\n}\nfor(i in colnames(gene_info_reorder)) {\n  if (is.numeric(gene_info_reorder[,i])) {\n    annotation_colors[[i]] &lt;- col\n  } else {\n    ref &lt;- c(\"#323232\",\"#1B6393\")\n    annotation_colors[[i]] &lt;- ref\n    names(annotation_colors[[i]]) &lt;- unique(gene_info_reorder[,i])\n  }\n}\n\np &lt;- \n  ComplexHeatmap::pheatmap(\n    data[row.names(data) %in% top_var_genes,],\n    color = col, \n    border_color = NA,\n    fontsize_row = 6, fontsize_col = 6,\n    main = \"Heatmap Plot\",\n    cluster_rows = T, cluster_cols = T,\n    scale = \"none\",\n    clustering_method = \"ward.D2\",\n    clustering_distance_cols = \"euclidean\",\n    clustering_distance_rows = \"euclidean\",\n    fontfamily = \"Arial\",\n    display_numbers = F,\n    number_color = \"black\",\n    annotation_col = sample_info_reorder,\n    annotation_row = gene_info_reorder,\n    annotation_colors = annotation_colors\n  )\n\np\n\n\n\n\n\n\n\n图 1: 热图\n\n\n\n\n\n示例图每个小格表示每个基因，颜色深浅表示该基因表达量大小，表达量越大颜色越深（红色为上调，绿色为下调）。每行表示每个基因在不同样本中的表达量状况，每列表示每个样本所有基因的表达量情况。上方树形图表示不同组群和年龄的不同样本的聚类分析结果，左侧树形图表示来自不同样本的不同基因的聚类分析结果。",
    "crumbs": [
      "HIPLOT",
      "Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/006-barplot-errorbar2.html",
    "href": "Hiplot/006-barplot-errorbar2.html",
    "title": "误差线柱状图2",
    "section": "",
    "text": "带误差线和误差组的条形图。",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar2)"
    ]
  },
  {
    "objectID": "Hiplot/006-barplot-errorbar2.html#环境配置",
    "href": "Hiplot/006-barplot-errorbar2.html#环境配置",
    "title": "误差线柱状图2",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; grafify; ggpubr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"grafify\", quietly = TRUE)) {\n  install.packages(\"grafify\")\n}\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(grafify)\nlibrary(ggpubr)",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar2)"
    ]
  },
  {
    "objectID": "Hiplot/006-barplot-errorbar2.html#数据准备",
    "href": "Hiplot/006-barplot-errorbar2.html#数据准备",
    "title": "误差线柱状图2",
    "section": "数据准备",
    "text": "数据准备\n数据表:\n第一列: (数值) Y 轴值。\n第二列: (数值或字符串) X 轴类别。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/006-barplot-errorbar2-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\n\n# 查看数据\nhead(data)\n\n  score   class\n1    60    math\n2    62    math\n3    70 chinese\n4    73 chinese\n5    80 english\n6    85 english",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar2)"
    ]
  },
  {
    "objectID": "Hiplot/006-barplot-errorbar2.html#可视化",
    "href": "Hiplot/006-barplot-errorbar2.html#可视化",
    "title": "误差线柱状图2",
    "section": "可视化",
    "text": "可视化\n\n# 误差线柱状图2\np &lt;- plot_scatterbar_sd(\n  data, ycol = get(colnames(data)[1]), xcol = get(colnames(data)[2]),\n  b_alpha = 1, ewid = 0.2, jitter = 0.1) +\n  stat_compare_means(data = data, aes(data[, 2], data[, 1], fill = data[, 2]),\n                     label = \"p.format\", ref.group = \".all.\", vjust = -2, \n                     method = \"t.test\") +\n  guides(fill=guide_legend(title=colnames(data)[2])) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +\n  labs(x=\"class\", y=\"score\") +\n  scale_fill_manual(values = c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\")) +\n  theme_classic2() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 误差线柱状图2",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar2)"
    ]
  },
  {
    "objectID": "Hiplot/077-gobar.html",
    "href": "Hiplot/077-gobar.html",
    "title": "GO 条形图",
    "section": "",
    "text": "GO 条形图用于显示按 z-score 或 adjusted p-value 的负对数排序的 Z-score 彩色条形图。",
    "crumbs": [
      "HIPLOT",
      "GOBar Plot"
    ]
  },
  {
    "objectID": "Hiplot/077-gobar.html#环境配置",
    "href": "Hiplot/077-gobar.html#环境配置",
    "title": "GO 条形图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GOplot\n\n\n# 安装包\nif (!requireNamespace(\"GOplot\", quietly = TRUE)) {\n  install.packages(\"GOplot\")\n}\n\n# 加载包\nlibrary(GOplot)",
    "crumbs": [
      "HIPLOT",
      "GOBar Plot"
    ]
  },
  {
    "objectID": "Hiplot/077-gobar.html#数据准备",
    "href": "Hiplot/077-gobar.html#数据准备",
    "title": "GO 条形图",
    "section": "数据准备",
    "text": "数据准备\n加载的数据是具有七个列的GO富集的结果：category, GO id, GO term, gene count, gene name, logFC, adjust pvalue and zscore。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/077-gobar-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"category\",\"ID\",\"term\",\"count\",\"genes\",\"logFC\",\"adj_pval\",\"zscore\")\ndata &lt;- data[data$category %in% c(\"BP\",\"CC\",\"MF\"),]\ndata &lt;- data[!is.na(data$adj_pval),]\ndata$adj_pval &lt;- as.numeric(data$adj_pval)\ndata$zscore &lt;- as.numeric(data$zscore)\n\n# 查看数据\nhead(data)\n\n  category         ID              term count  genes        logFC adj_pval\n1       BP GO:0007507 heart development    54   DLC1 -0.970787511 2.17e-06\n2       BP GO:0007507 heart development    54   NRP2 -1.515317303 2.17e-06\n3       BP GO:0007507 heart development    54   NRP1 -1.141231543 2.17e-06\n4       BP GO:0007507 heart development    54   EDN1  1.381300593 2.17e-06\n5       BP GO:0007507 heart development    54 PDLIM3 -0.887693887 2.17e-06\n6       BP GO:0007507 heart development    54   GJA1  -0.81794802 2.17e-06\n      zscore\n1 -0.8164966\n2 -0.8164966\n3 -0.8164966\n4 -0.8164966\n5 -0.8164966\n6 -0.8164966",
    "crumbs": [
      "HIPLOT",
      "GOBar Plot"
    ]
  },
  {
    "objectID": "Hiplot/077-gobar.html#可视化",
    "href": "Hiplot/077-gobar.html#可视化",
    "title": "GO 条形图",
    "section": "可视化",
    "text": "可视化\n\n# GO 条形图\np &lt;- GOBar(data, display = \"multiple\", order.by.zscore = T,\n           title = \"GO Enrichment Barplot \", \n           zsc.col = c(\"#EF8A62\",\"#F7F7F7\",\"#67A9CF\")) + \n    theme(plot.title = element_text(hjust = 0.5),\n          axis.text.x = element_text(size = 8))\n\np\n\n\n\n\n\n\n\n图 1: GO 条形图\n\n\n\n\n\n如示例图所示，x 轴表示每个 GO term，y 轴表示 -log(adj_pvalue)，每个条按 z-score 着色。如果显示分面，则面板的宽度将与 x 刻度的长度成正比。",
    "crumbs": [
      "HIPLOT",
      "GOBar Plot"
    ]
  },
  {
    "objectID": "Hiplot/073-ggscatterstats.html",
    "href": "Hiplot/073-ggscatterstats.html",
    "title": "散点图（Scatterstats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)",
    "crumbs": [
      "HIPLOT",
      "Scatterstats"
    ]
  },
  {
    "objectID": "Hiplot/073-ggscatterstats.html#环境配置",
    "href": "Hiplot/073-ggscatterstats.html#环境配置",
    "title": "散点图（Scatterstats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)",
    "crumbs": [
      "HIPLOT",
      "Scatterstats"
    ]
  },
  {
    "objectID": "Hiplot/073-ggscatterstats.html#数据准备",
    "href": "Hiplot/073-ggscatterstats.html#数据准备",
    "title": "散点图（Scatterstats）",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/073-ggscatterstats-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n                                                                 title year\n1                       Lord of the Rings: The Return of the King, The 2003\n2                   Lord of the Rings: The Fellowship of the Ring, The 2001\n3                               Lord of the Rings: The Two Towers, The 2002\n4                                                            Star Wars 1977\n5                       Star Wars: Episode V - The Empire Strikes Back 1980\n6 Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb 1964\n  length budget rating  votes  mpaa  genre\n1    251   94.0    9.0 103631 PG-13 Action\n2    208   93.0    8.8 157608 PG-13 Action\n3    223   94.0    8.8 114797 PG-13 Action\n4    125   11.0    8.8 134640    PG Action\n5    129   18.0    8.8 103706    PG Action\n6     93    1.8    8.7  63471    PG Comedy",
    "crumbs": [
      "HIPLOT",
      "Scatterstats"
    ]
  },
  {
    "objectID": "Hiplot/073-ggscatterstats.html#可视化",
    "href": "Hiplot/073-ggscatterstats.html#可视化",
    "title": "散点图（Scatterstats）",
    "section": "可视化",
    "text": "可视化\n\n# GGPubr 箱线图\np &lt;- ggscatterstats(\n  data = data, x = rating, y = budget\n)\n\np\n\n\n\n\n\n\n\n图 1: GGPubr 箱线图",
    "crumbs": [
      "HIPLOT",
      "Scatterstats"
    ]
  },
  {
    "objectID": "Hiplot/036-d3-wordcloud.html",
    "href": "Hiplot/036-d3-wordcloud.html",
    "title": "D3 词云",
    "section": "",
    "text": "文云文本展示。",
    "crumbs": [
      "HIPLOT",
      "D3 Wordcloud"
    ]
  },
  {
    "objectID": "Hiplot/036-d3-wordcloud.html#环境配置",
    "href": "Hiplot/036-d3-wordcloud.html#环境配置",
    "title": "D3 词云",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: d3wordcloud\n\n\n# 安装包\nif (!requireNamespace(\"d3wordcloud\", quietly = TRUE)) {\n  devtools::install_github(\"jbkunst/d3wordcloud\")\n}\n\n# 加载包\nlibrary(d3wordcloud)",
    "crumbs": [
      "HIPLOT",
      "D3 Wordcloud"
    ]
  },
  {
    "objectID": "Hiplot/036-d3-wordcloud.html#数据准备",
    "href": "Hiplot/036-d3-wordcloud.html#数据准备",
    "title": "D3 词云",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/036-d3-wordcloud-data.txt\", header = T)\n\n# 整理数据格式\nrow.names(data) &lt;- data[, 1]\n\n# 查看数据\nhead(data)\n\n         word freq\noil       oil   85\nsaid     said   73\nprices prices   48\nopec     opec   42\nmln       mln   31\nthe       the   26",
    "crumbs": [
      "HIPLOT",
      "D3 Wordcloud"
    ]
  },
  {
    "objectID": "Hiplot/036-d3-wordcloud.html#可视化",
    "href": "Hiplot/036-d3-wordcloud.html#可视化",
    "title": "D3 词云",
    "section": "可视化",
    "text": "可视化\n\n# D3 词云\np &lt;- d3wordcloud(\n  words = data[, 1], \n  freqs = data[, 2],\n  padding = 0,\n  rotate.min = 0,\n  rotate.max = 0,\n  size.scale = \"linear\",\n  color.scale = \"linear\",\n  spiral = \"archimedean\",\n  font = \"Arial\",\n  rangesizefont = c(10, 90)\n)\n\np\n\n\n\n\n\n\n\n图 1: D3 词云",
    "crumbs": [
      "HIPLOT",
      "D3 Wordcloud"
    ]
  },
  {
    "objectID": "Hiplot/089-interval-area-chart.html",
    "href": "Hiplot/089-interval-area-chart.html",
    "title": "区间区域图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Interval Area Chart"
    ]
  },
  {
    "objectID": "Hiplot/089-interval-area-chart.html#环境配置",
    "href": "Hiplot/089-interval-area-chart.html#环境配置",
    "title": "区间区域图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Interval Area Chart"
    ]
  },
  {
    "objectID": "Hiplot/089-interval-area-chart.html#数据准备",
    "href": "Hiplot/089-interval-area-chart.html#数据准备",
    "title": "区间区域图",
    "section": "数据准备",
    "text": "数据准备\n案例数据为一年十二个月份的最高和最低温度和对应的月份简称。通过案例数据绘制了每个月份的温度区间及温度均线。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/089-interval-area-chart-data.txt\", header = T)\n\n# 整理数据格式\ndata[[\"month\"]] &lt;- factor(data[[\"month\"]], levels = data[[\"month\"]])\n\n# 查看数据\nhead(data)\n\n  month min_temperature max_temperature mean\n1   Jan              15              20   16\n2   Feb              17              25   20\n3   Mar              20              26   23\n4   Apr              25              30   27\n5   May              30              35   32\n6   Jun              32              35   34",
    "crumbs": [
      "HIPLOT",
      "Interval Area Chart"
    ]
  },
  {
    "objectID": "Hiplot/089-interval-area-chart.html#可视化",
    "href": "Hiplot/089-interval-area-chart.html#可视化",
    "title": "区间区域图",
    "section": "可视化",
    "text": "可视化\n\n# 区间区域图\np &lt;- ggplot(data, aes(x = month, group = 1)) +\n  geom_line(aes(y = max_temperature), size = 1.2, color = \"#EA3323\", \n            linetype = \"solid\") +\n  geom_line(aes(y = min_temperature), size = 1.2, color = \"#0000F5\", \n            linetype = \"solid\") +\n  geom_line(aes(x = month, y = mean), size = 1.2, color = \"#BEBEBE\", \n            linetype = \"dashed\") +\n  geom_ribbon(aes(ymin = min_temperature, ymax = max_temperature), \n              fill = \"#F2F2F2\", alpha = 0.5) +\n  geom_text(aes(x = month, y = max_temperature + 1, label = max_temperature),\n            color = \"#EA3323\", size = 2.5, vjust = -0.5, hjust = 0) +\n  geom_text(aes(x = month, y = min_temperature - 1, label = min_temperature),\n            color = \"#0000F5\", size = 2.5, vjust = 1.5, hjust = 0) +\n  geom_text(aes(x = month, y = mean, label = mean),\n            color = \"#BEBEBE\", size = 2.5, vjust = 1.5, hjust = 0) +\n  labs(title = \"Temperature\", x = \"Month\", y = \"Temperature\") +\n  scale_color_manual(values = c(max = \"#EA3323\", min = \"#0000F5\")) +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5))\n\np\n\n\n\n\n\n\n\n图 1: 区间区域图",
    "crumbs": [
      "HIPLOT",
      "Interval Area Chart"
    ]
  },
  {
    "objectID": "Hiplot/021-circle-packing.html",
    "href": "Hiplot/021-circle-packing.html",
    "title": "圆堆图",
    "section": "",
    "text": "用于展示不同类型之间的数量差异。",
    "crumbs": [
      "HIPLOT",
      "Circle Packing"
    ]
  },
  {
    "objectID": "Hiplot/021-circle-packing.html#环境配置",
    "href": "Hiplot/021-circle-packing.html#环境配置",
    "title": "圆堆图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: packcircles; ggplot2; viridis\n\n\n# 安装包\nif (!requireNamespace(\"packcircles\", quietly = TRUE)) {\n  install.packages(\"packcircles\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"viridis\", quietly = TRUE)) {\n  install.packages(\"viridis\")\n}\n\n# 加载包\nlibrary(packcircles)\nlibrary(ggplot2)\nlibrary(viridis)",
    "crumbs": [
      "HIPLOT",
      "Circle Packing"
    ]
  },
  {
    "objectID": "Hiplot/021-circle-packing.html#数据准备",
    "href": "Hiplot/021-circle-packing.html#数据准备",
    "title": "圆堆图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/021-circle-packing-data.txt\", header = T)\n\n# 整理数据格式\npacking &lt;- circleProgressiveLayout(data[[\"v\"]], sizetype = \"area\")\ndata &lt;- cbind(data, packing)\ndat_gg &lt;- circleLayoutVertices(packing, npoints = 50)\ncolors &lt;- c(\"#E57164\",\"#F8ECA7\",\"#9389C1\",\"#3F9C78\",\"#769F8D\",\"#E5F9A9\",\"#7CE9A4\",\n            \"#CE9FCA\",\"#78F197\",\"#8BB085\",\"#D88880\",\"#A6E4C3\",\"#F7F6B1\",\"#C5E69A\",\n            \"#F45FDE\",\"#5CF371\",\"#9259CF\",\"#2B6D9B\",\"#F3C096\",\"#EEADBE\")\ndat_gg$value &lt;- rep(colors, each = 51)\n\n# 查看数据\nhead(data)\n\n  g   v           x          y   radius\n1 A 100  -5.6418958  0.0000000 5.641896\n2 B 120   6.1803872  0.0000000 6.180387\n3 C  80  -0.2298516 -9.2166458 5.046265\n4 D  10  -6.7961670 -7.3357638 1.784124\n5 E  60 -12.9322538 -6.8624061 4.370194\n6 F  30 -14.3618753  0.4597221 3.090194",
    "crumbs": [
      "HIPLOT",
      "Circle Packing"
    ]
  },
  {
    "objectID": "Hiplot/021-circle-packing.html#可视化",
    "href": "Hiplot/021-circle-packing.html#可视化",
    "title": "圆堆图",
    "section": "可视化",
    "text": "可视化\n\n# 圆堆图\np &lt;- ggplot() +\n  geom_polygon(data = dat_gg, aes(x, y, group = id, fill = value), colour = \"black\", alpha = 0.4) +\n  scale_fill_manual(values = magma(nrow(data))) +\n  theme_void() +\n  theme(legend.position = \"none\") +\n  coord_equal() +\n  scale_size_continuous(range = c(2.3, 4.5)) +\n  geom_text(data = data, aes(x, y, size = v, label = g), vjust = 0) +\n  geom_text(data = data, aes(x, y, label = v, size = v), vjust = 1.2)\n\np\n\n\n\n\n\n\n\n图 1: 圆堆图",
    "crumbs": [
      "HIPLOT",
      "Circle Packing"
    ]
  },
  {
    "objectID": "Hiplot/023-circular-barplot.html",
    "href": "Hiplot/023-circular-barplot.html",
    "title": "环状条形图",
    "section": "",
    "text": "绘制环状条形图",
    "crumbs": [
      "HIPLOT",
      "Circular Barplot"
    ]
  },
  {
    "objectID": "Hiplot/023-circular-barplot.html#环境配置",
    "href": "Hiplot/023-circular-barplot.html#环境配置",
    "title": "环状条形图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; dplyr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(dplyr)",
    "crumbs": [
      "HIPLOT",
      "Circular Barplot"
    ]
  },
  {
    "objectID": "Hiplot/023-circular-barplot.html#数据准备",
    "href": "Hiplot/023-circular-barplot.html#数据准备",
    "title": "环状条形图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/023-circular-barplot-data.txt\", header = T)\n\n# 整理数据格式\ndata$group &lt;- as.factor(data$group)\nempty_bar &lt;- 2\nto_add &lt;- data.frame(matrix(NA, empty_bar*nlevels(data$group), ncol(data)))\ncolnames(to_add) &lt;- colnames(data)\nto_add$group &lt;- rep(levels(data$group), each=empty_bar)\ndata &lt;- rbind(data, to_add)\ndata &lt;- data %&gt;% arrange(group)\ndata$id &lt;- seq(1, nrow(data))\n\nlabel_data &lt;- data\nnumber_of_bar &lt;- nrow(label_data)\nangle &lt;- 90 - 360 * (label_data$id-0.5) /number_of_bar\nlabel_data$hjust &lt;- ifelse( angle &lt; -90, 1, 0)\nlabel_data$angle &lt;- ifelse(angle &lt; -90, angle+180, angle)\n\nbase_data &lt;- data %&gt;% \n  group_by(group) %&gt;% \n  summarize(start=min(id), end=max(id) - empty_bar) %&gt;% \n  rowwise() %&gt;% \n  mutate(title=mean(c(start, end)))\n\n# 查看数据\nhead(data)\n\n  individual group value id\n1   Mister 1     A    82  1\n2   Mister 2     A    98  2\n3   Mister 3     A    72  3\n4   Mister 4     A    34  4\n5   Mister 5     A    60  5\n6   Mister 6     A    61  6",
    "crumbs": [
      "HIPLOT",
      "Circular Barplot"
    ]
  },
  {
    "objectID": "Hiplot/023-circular-barplot.html#可视化",
    "href": "Hiplot/023-circular-barplot.html#可视化",
    "title": "环状条形图",
    "section": "可视化",
    "text": "可视化\n\n# 环状条形图\np &lt;- ggplot(data, aes(x=as.factor(id), y=value, fill=group)) +\n  geom_bar(aes(x=as.factor(id), y=value, fill=group), stat=\"identity\", alpha=0.5) +\n  ylim(-50,max(na.omit(data$value))+30) +\n  geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = \"black\", alpha=0.8, size=0.8 , inherit.aes = FALSE )  +\n  geom_text(data=base_data, aes(x = title, y = -12, label=group), colour = \"black\", alpha=0.8, size=4, fontface=\"bold\", inherit.aes = FALSE) +\n  geom_text(data=label_data, aes(x=id, y=value+8, label=individual, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +\n  geom_text(data=label_data, aes(x=id, y=value-10, label=value, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +\n  coord_polar() + \n  scale_fill_manual(values = c(\"#3b4992ff\",\"#ee0000ff\",\"#008b45ff\",\"#631879ff\")) +\n  theme_minimal() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10),\n        panel.grid = element_blank(),\n        plot.margin = unit(rep(-1,4), \"cm\"))\n\np\n\n\n\n\n\n\n\n图 1: 环状条形图",
    "crumbs": [
      "HIPLOT",
      "Circular Barplot"
    ]
  },
  {
    "objectID": "Hiplot/046-dotchart.html",
    "href": "Hiplot/046-dotchart.html",
    "title": "滑珠图",
    "section": "",
    "text": "滑珠图是一种珠子在柱上滑行的图形，是条形图与散点图的叠加。",
    "crumbs": [
      "HIPLOT",
      "Dotchart"
    ]
  },
  {
    "objectID": "Hiplot/046-dotchart.html#环境配置",
    "href": "Hiplot/046-dotchart.html#环境配置",
    "title": "滑珠图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr\n\n\n# 安装包\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n# 加载包\nlibrary(ggpubr)",
    "crumbs": [
      "HIPLOT",
      "Dotchart"
    ]
  },
  {
    "objectID": "Hiplot/046-dotchart.html#数据准备",
    "href": "Hiplot/046-dotchart.html#数据准备",
    "title": "滑珠图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为基因名称及其对应的基因表达值和分组。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/046-dotchart-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n      Name Value  Group\n1     BMP2  18.7 Group1\n2     XIST  14.3 Group1\n3 C19orf38  16.4 Group1\n4    PDZD3  17.3 Group1\n5   MAPRE2  15.2 Group1\n6     IRF4  10.4 Group1",
    "crumbs": [
      "HIPLOT",
      "Dotchart"
    ]
  },
  {
    "objectID": "Hiplot/046-dotchart.html#可视化",
    "href": "Hiplot/046-dotchart.html#可视化",
    "title": "滑珠图",
    "section": "可视化",
    "text": "可视化\n\n# 滑珠图\np &lt;- ggdotchart(data, x = \"Name\", y = \"Value\", group = \"Group\", color = \"Group\",\n                rotate = T, sorting = \"descending\",\n                y.text.col = F, add = \"segments\", dot.size = 2) +\n  xlab(\"Name\") +\n  ylab(\"Value\") +\n  ggtitle(\"DotChart Plot\") +\n  scale_color_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_classic() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 滑珠图\n\n\n\n\n\n每种颜色表示不同的分组，能够直观了解不同基因表达值的差异。",
    "crumbs": [
      "HIPLOT",
      "Dotchart"
    ]
  },
  {
    "objectID": "Omics/VolcanoPlot.html",
    "href": "Omics/VolcanoPlot.html",
    "title": "火山图",
    "section": "",
    "text": "火山图用于两组之间的比较，得到两组之间的上调/下调，筛选依据为 p 值和 FC 值，转换为 -logP 值和 log2(FC) 值。导入数据可以是微生物组的 OTU 表格或 ASV 表格，或者转录组基因表达的表格，或者是代谢组学的 features 表格等多组学数据。"
  },
  {
    "objectID": "Omics/VolcanoPlot.html#示例",
    "href": "Omics/VolcanoPlot.html#示例",
    "title": "火山图",
    "section": "示例",
    "text": "示例"
  },
  {
    "objectID": "Omics/VolcanoPlot.html#环境配置",
    "href": "Omics/VolcanoPlot.html#环境配置",
    "title": "火山图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：tidyverse; readxl; ggrepel\n\n\n# 安装包\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"readxl\", quietly = TRUE)) {\n  install.packages(\"readxl\")\n}\nif (!requireNamespace(\"ggrepel\", quietly = TRUE)) {\n  install.packages(\"ggrepel\")\n}\n\n# 加载包\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggrepel)"
  },
  {
    "objectID": "Omics/VolcanoPlot.html#数据准备",
    "href": "Omics/VolcanoPlot.html#数据准备",
    "title": "火山图",
    "section": "数据准备",
    "text": "数据准备\n我们导入来自 omicshare 的火山图示例数据。\n\n# 读取Excel数据\ndata &lt;- read_excel(\"files/volcano.eg.xlsx\")\n\n# 重命名列名（处理特殊字符）\ndata &lt;- data %&gt;%\n  rename(log2FC = \"log2 Ratio(WT0/LOG)\", Pvalue = \"Pvalue\")\n# 处理 p-value 为 0 的情况（避免计算-Inf）\ndata &lt;- data %&gt;%\n  mutate(log10P = -log10(Pvalue + 1e-300)) # 确保处理了 P=0 的情况\n# 转为数值型，并处理转换失败的值（如无效字符）\ndata &lt;- data %&gt;%\n  mutate(\n    log2FC = as.numeric(log2FC) # 转换失败的值会变为 NA\n  )\n\n# 查找导致转换失败的原始值\ndata %&gt;%\n  filter(is.na(log2FC)) %&gt;%\n  select(log2FC) # 查看这些行的 log2FC 原始值\n\n# A tibble: 0 × 1\n# ℹ 1 variable: log2FC &lt;dbl&gt;\n\n# 根据实际情况修复数据（例如替换或删除异常值）\n# 示例：将\"Inf\"替换为实际数值或过滤掉\ndata &lt;- data %&gt;%\n  mutate(\n    log2FC = ifelse(log2FC == \"Inf\", 100, log2FC), # 根据需求调整\n    log2FC = as.numeric(log2FC)\n    ) %&gt;%\n  filter(!is.na(log2FC)) # 删除无法修复的行\n\n# 定义显著性（同时满足P值&lt;0.05且|log2FC|&gt;1）\n# 定义显著性分类（上调、下调、无显著）\ndata &lt;- data %&gt;%\n  mutate(\n    significant = case_when(\n      Pvalue &lt; 0.05 & log2FC &gt; 2 ~ \"Upregulated\", # 上调（红色）\n      Pvalue &lt; 0.05 & log2FC &lt; -2 ~ \"Downregulated\", # 下调（绿色）\n      TRUE ~ \"Not significant\" # 无显著（灰色）\n    )\n  )\n\n# 查看数据结构\nhead(data, 5)\n\n# A tibble: 5 × 10\n  GeneID         LOG_count WT0_count LOG_rpkm WT0_rpkm  log2FC    Pvalue     FDR\n  &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 Unigene0000003     17243     17525   932.     942.    0.0168   5.15e-1 6.73e-1\n2 Unigene0000004        65       101     4.12     6.37  0.629    6.64e-3 1.79e-2\n3 Unigene0000005       909       984    36.9     39.7   0.108    1.26e-1 2.25e-1\n4 Unigene0000006      1376      1082    74.7     58.5  -0.353    1.17e-8 6.86e-8\n5 Unigene0000007       121        73    15.7      9.42 -0.736    7.42e-4 2.45e-3\n# ℹ 2 more variables: significant &lt;chr&gt;, log10P &lt;dbl&gt;"
  },
  {
    "objectID": "Omics/VolcanoPlot.html#可视化",
    "href": "Omics/VolcanoPlot.html#可视化",
    "title": "火山图",
    "section": "可视化",
    "text": "可视化\n\n1. 基础火山图\n\n# 基础火山图\np &lt;- \n  ggplot(data, aes(x = log2FC, y = -log10(Pvalue))) + # 初步绘制火山图\n  # 绘制散点，按显著分类着色\n  geom_point(aes(color = significant), alpha = 0.6, size = 1.5) + \n  # 设置颜色映射（上调红，下调绿，无显著灰）\n  scale_color_manual(\n    values = c(\"Upregulated\" = \"red\", \"Downregulated\" = \"green\", \"Not significant\" = \"gray\"),\n    name = \"Significance\" # 图例标题\n    ) +\n  # 添加筛选阈值线\n  geom_vline(xintercept = c(-2, 2), linetype = \"dashed\", color = \"green\", linewidth = 0.5) + # log2FC阈值线\n  geom_hline(yintercept = -log10(0.05), linetype = \"dashed\", color = \"blue\", linewidth = 0.5) + # p值阈值线\n  # 调整坐标轴和标题\n  labs(x = \"log2(Fold Change)\", y = \"-log10(P-value)\",\n       title = \"Volcano Plot with Thresholds\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), # 标题居中加粗\n        legend.position = \"right\") # 图例位置\n\np\n\n\n\n\n\n\n\n图 1: 基础火山图\n\n\n\n\n\n\n\n2. 带标签火山图\n\n# 添加标签\n# 步骤1：筛选需标注的基因\nlabel_data &lt;- data %&gt;%\n  filter(Pvalue &lt; 0.05) %&gt;% # 筛选显著基因\n  group_by(significant) %&gt;% # 按上下调控分组\n  top_n(10, abs(log2FC)) %&gt;% # 取 log2FC 绝对值最大的 10 个\n  ungroup()\n# 步骤2：定义标签颜色（浅红和浅绿）\nlabel_colors &lt;- c(\n  \"Upregulated\" = \"#FF9999\", # 浅红色\n  \"Downregulated\" = \"#99FF99\" # 浅绿色\n  )\n# 步骤3：绘制带标签的火山图\np &lt;- \n  ggplot(data, aes(x = log2FC, y = -log10(Pvalue))) +\n  geom_point(aes(color = significant), alpha = 0.6, size = 1.5) +\n  # 添加基因标签（仅标注目标基因）\n  geom_text_repel(\n    data = label_data,\n    aes(label = GeneID, color = significant), # 假设基因名列名为 OTU ID\n    size = 3,\n    box.padding = 0.5, # 标签间距\n    max.overlaps = 50, # 允许最大重叠\n    segment.color = \"grey50\", # 连接线颜色\n    show.legend = FALSE\n    ) +\n  # 设置颜色映射（原颜色+标签颜色）\n  scale_color_manual(\n    values = c(\"Upregulated\" = \"red\", \"Downregulated\" = \"green\", \"Not significant\" = \"gray\"),\n    guide = guide_legend(override.aes = list(\n      color = c(\"red\", \"green\", \"gray\"), # 图例颜色保持原色\n      label = \"\" # 图例中不显示文字\n      ))) +\n  # 控制标签颜色（浅红和浅绿）\n  scale_color_manual(\n    values = label_colors,\n    guide = \"none\" # 隐藏额外图例\n    ) +\n  # 保留原有阈值线和标题\n  geom_vline(xintercept = c(-2, 2), linetype = \"dashed\", color = \"black\") +\n  geom_hline(yintercept = -log10(0.05), linetype = \"dashed\", color = \"black\") +\n  labs(title = \"Volcano Plot with Top 20 Labels\") +\n  theme_minimal()\n\np\n\n\n\n\n\n\n\n图 2: 带标签火山图"
  },
  {
    "objectID": "Omics/CollinearityPlot.html",
    "href": "Omics/CollinearityPlot.html",
    "title": "共线性图",
    "section": "",
    "text": "共线性图（Collinearity Plot）常用于比较不同物种的基因组序列，识别保守的同源基因区块及其排列顺序，揭示进化过程中染色体结构的变化。该图广泛应用于研究基因组进化、功能基因定位及物种亲缘关系分析等。"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#示例",
    "href": "Omics/CollinearityPlot.html#示例",
    "title": "共线性图",
    "section": "示例",
    "text": "示例\n\n\n\n\n\n该图为三元基因组的共线性图，其中 Amborella、Grape、Liriodendron 表示三个不同的物种，长条代表基因组，数字为染色体编号，连线表示不同的物种基因组之间的比较。高亮的连线表示感兴趣的基因组区域的比较。"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#环境配置",
    "href": "Omics/CollinearityPlot.html#环境配置",
    "title": "共线性图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: 跨平台（Linux/MacOS/Windows）\n编程语言: R\n依赖包: RIdeogram\n\n\n# 安装包\nif (!requireNamespace(\"RIdeogram\", quietly = TRUE)) {\n  install.packages(\"RIdeogram\")\n}\n\n# 加载包\nlibrary(RIdeogram)"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#数据准备",
    "href": "Omics/CollinearityPlot.html#数据准备",
    "title": "共线性图",
    "section": "数据准备",
    "text": "数据准备\n我们导入 RIdeogram 包中提供的示例数据，karyotype_ternary_comparison 中包含了不同的物种以及基因组信息，synteny_ternary_comparison 中包含了不同物种之间基因组的比较信息。\n\ndata(karyotype_ternary_comparison, package=\"RIdeogram\")\ndata(synteny_ternary_comparison, package=\"RIdeogram\")\n\n\n# 查看 karyotype_ternary_comparison 数据格式\nhead(karyotype_ternary_comparison)\n\n  Chr Start      End   fill   species size  color\n1  NA     1 15980527 fcb06b Amborella   10 fcb06b\n2  NA     1 11522362 fcb06b Amborella   10 fcb06b\n3  NA     1 11085951 fcb06b Amborella   10 fcb06b\n4  NA     1 10537363 fcb06b Amborella   10 fcb06b\n5  NA     1  9585472 fcb06b Amborella   10 fcb06b\n6  NA     1  9414115 fcb06b Amborella   10 fcb06b\n\n\n\n# 查看 synteny_ternary_comparison 数据格式\nhead(synteny_ternary_comparison)\n\n  Species_1 Start_2   End_2 Species_2  Start_1    End_1   fill type\n1         1 4761181 2609697         1   342802   981451 cccccc    1\n2         6 6344197 8074393         1 15387184 16716190 cccccc    1\n3        10 6457890 9052487         1 11224953 14959548 cccccc    1\n4        13 6318795 1295413         1 20564870 21386271 cccccc    1\n5        16 1398101 2884119         1 21108654 22221088 cccccc    1\n6        16 1482529 2093625         1 21864494 22364888 cccccc    1"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#可视化",
    "href": "Omics/CollinearityPlot.html#可视化",
    "title": "共线性图",
    "section": "可视化",
    "text": "可视化\n\n1. 基础绘图\n可以使用 RIdeogram 包中提供的 ideogram 函数绘制共线性图。\n\n# 基础共线性图\nideogram(karyotype = karyotype_ternary_comparison, synteny = synteny_ternary_comparison)\nconvertSVG(\"chromosome.svg\", device = \"png\")\n\n\n\n\n\n\n\n图 1: 基础共线性图\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: \n\nkaryotype：包含不同物种以及基因组信息的表格，数据结构如 karyotype_ternary_comparison 所示。\noverlaid：包含了不同物种之间基因组比较信息的表格，数据结构如 synteny_ternary_comparison 所示。\n\n\n\n\n\n2. 修改颜色\n如果您想对修改绘图的颜色，只需修改 karyotype 和 overlaid 表格中的颜色列。如下所示，我们修改了 karyotype_ternary_comparison 表格中的 color 和 fill 列，以及 synteny_ternary_comparison 中的 fill 列。\n\n# 修改三个物种颜色\nchange_color1 &lt;- c(\"fcb06b\"=\"ff0000\", \"078dd8\"=\"00ff00\", \"139b08\"=\"0000ff\")\nkaryotype_ternary_comparison$color &lt;- as.character(change_color1[karyotype_ternary_comparison$color])\nkaryotype_ternary_comparison$fill &lt;- as.character(change_color1[karyotype_ternary_comparison$fill])\n\n# 修改连线颜色\nchange_color2 &lt;- c(\"cccccc\"=\"add8e6\", \"e41a1c\"=\"8b0000\")\nsynteny_ternary_comparison$fill &lt;- as.character(change_color2[synteny_ternary_comparison$fill])\n\n# 绘图\nideogram(karyotype = karyotype_ternary_comparison, synteny = synteny_ternary_comparison)\n\n\n\n\n\n\n\n图 2: 修改颜色"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#应用",
    "href": "Omics/CollinearityPlot.html#应用",
    "title": "共线性图",
    "section": "应用",
    "text": "应用\n\n\n\n\n\n\n图 3: 共线性图应用\n\n\n\n该图展示了 R2R3-MYB 基因在 B. napus 和 3 个祖先植物物种中的同源关系。图中显示了 Arabidopsis (A. thaliana)、Brassica rapa (B. rapa)、Brassica oleracea (B. oleracea)、Brassica napus (B. napus) 之间的共线性。[1]"
  },
  {
    "objectID": "Omics/CollinearityPlot.html#参考资料",
    "href": "Omics/CollinearityPlot.html#参考资料",
    "title": "共线性图",
    "section": "参考资料",
    "text": "参考资料\n[1] Luo D, Mei D, Wei W, Liu J. Identification and Phylogenetic Analysis of the R2R3-MYB Subfamily in Brassica napus. Plants (Basel). 2023;12(4):886. Published 2023 Feb 16. doi:10.3390/plants12040886"
  },
  {
    "objectID": "Omics/NetworkPlot.html",
    "href": "Omics/NetworkPlot.html",
    "title": "网络图",
    "section": "",
    "text": "在微生物组学研究中，理解微生物之间的相互作用至关重要。而网络分析作为一种强大的方法，能够帮助我们可视化和量化这些复杂关系。接下来向大家介绍 MetaNet 包的网络操作与注释功能，它能让我们的网络分析更加深入和直观。"
  },
  {
    "objectID": "Omics/NetworkPlot.html#示例",
    "href": "Omics/NetworkPlot.html#示例",
    "title": "网络图",
    "section": "示例",
    "text": "示例"
  },
  {
    "objectID": "Omics/NetworkPlot.html#环境配置",
    "href": "Omics/NetworkPlot.html#环境配置",
    "title": "网络图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：MetaNet; pcutils; igraph; dplyr\n\n\n# 安装包\nif (!requireNamespace(\"MetaNet\", quietly = TRUE)) {\n  install.packages(\"MetaNet\")\n}\nif (!requireNamespace(\"pcutils\", quietly = TRUE)) {\n  install.packages(\"pcutils\")\n}\nif (!requireNamespace(\"igraph\", quietly = TRUE)) {\n  install.packages(\"igraph\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\n\n# 加载包\nlibrary(MetaNet)\nlibrary(pcutils)\nlibrary(igraph)\nlibrary(dplyr)"
  },
  {
    "objectID": "Omics/NetworkPlot.html#数据准备",
    "href": "Omics/NetworkPlot.html#数据准备",
    "title": "网络图",
    "section": "数据准备",
    "text": "数据准备\n\n1. 导入数据\n\n数据使用 pcutils 中的 otutab 数据集\nMetaNet 是一个针对组学数据的综合网络分析 R 包\nc_net_calculate() 函数用于快速计算变量间的相关性\nc_net_build() 函数用于构建网络\n\n\ndata(otutab, package = \"pcutils\")\nt(otutab) -&gt; totu\nc_net_calculate(totu, method = \"spearman\") -&gt; corr\nc_net_build(corr, r_threshold = 0.6, p_threshold = 0.05, delete_single = T) -&gt; co_net\nclass(co_net) \n\n[1] \"metanet\" \"igraph\" \n\n\n\n\n2. 获取网络属性\n用 MetaNet 构建网络后，得到的是一个分类对象，它来自 igraph。意味着可以同时使用 MetaNet 的专有功能和 igraph 的通用功能。接下来了解如何获取网络的基本信息：\n\n# 获取整体网络属性\nget_n(co_net)\n\n  n_type\n1 single\n\n# 查看节点(顶点)属性\nget_v(co_net) %&gt;% head(5)\n\n                          name  v_group  v_class size\n1 s__un_f__Thermomonosporaceae v_group1 v_class1    4\n2        s__Pelomonas_puraquae v_group1 v_class1    4\n3     s__Rhizobacter_bergeniae v_group1 v_class1    4\n4     s__Flavobacterium_terrae v_group1 v_class1    4\n5         s__un_g__Rhizobacter v_group1 v_class1    4\n                         label  shape   color\n1 s__un_f__Thermomonosporaceae circle #a6bce3\n2        s__Pelomonas_puraquae circle #a6bce3\n3     s__Rhizobacter_bergeniae circle #a6bce3\n4     s__Flavobacterium_terrae circle #a6bce3\n5         s__un_g__Rhizobacter circle #a6bce3\n\n### 查看边属性\nget_e(co_net) %&gt;% head(5)\n\n  id                         from                            to    weight\n1  1 s__un_f__Thermomonosporaceae     s__Actinocorallia_herbida 0.6759546\n2  2 s__un_f__Thermomonosporaceae       s__Kribbella_catacumbae 0.6742386\n3  3 s__un_f__Thermomonosporaceae       s__Kineosporia_rhamnosa 0.7378741\n4  4 s__un_f__Thermomonosporaceae   s__un_f__Micromonosporaceae 0.6236449\n5  5 s__un_f__Thermomonosporaceae s__Flavobacterium_saliperosum 0.6045747\n        cor      p.value   e_type     width   color  e_class lty\n1 0.6759546 0.0020739524 positive 0.6759546 #48A4F0 e_class1   1\n2 0.6742386 0.0021502138 positive 0.6742386 #48A4F0 e_class1   1\n3 0.7378741 0.0004730567 positive 0.7378741 #48A4F0 e_class1   1\n4 0.6236449 0.0056818984 positive 0.6236449 #48A4F0 e_class1   1\n5 0.6045747 0.0078660171 positive 0.6045747 #48A4F0 e_class1   1\n\n\n这些函数返回的数据框包含了最基本的多组学生物网络的关键信息，如节点名称、分组、大小、边的权重等。 MetaNet 在构建网络时已经设置了一些内部属性（如v_group、v_class、e_type等），这些属性将影响后续的分析和可视化。\n\n\n3. 为网络添加生物学意义\n在微生物组研究中，仅有网络结构是不够的，我们需要整合分类学、丰度等生物学信息。MetaNet 提供了灵活的注释功能：\n\n# 向节点添加分类信息\nc_net_annotate(co_net, taxonomy[\"Phylum\"], mode = \"v\") -&gt; co_net1\nanno &lt;- data.frame(\"from\" = \"s__un_f__Thermomonosporaceae\", \n                   \"to\" = \"s__Actinocorallia_herbida\", new_atr = \"new\")\nc_net_annotate(co_net, anno, mode = \"e\") -&gt; co_net1\n\n在 MetaNet 中提供 c_net_set() 函数，它可以同时添加多个注释表并指定哪些列用于设置节点大小、颜色等属性：\n\nAbundance_df &lt;- data.frame(\"Abundance\" = colSums(totu))\nco_net1 &lt;- c_net_set(co_net, taxonomy[\"Phylum\"], Abundance_df)\nco_net1 &lt;- co_net\nV(co_net1)$new_attri &lt;- seq_len(length(co_net1))\nE(co_net1)$new_attri &lt;- \"new attribute\"\nget_e(co_net1) %&gt;% head(5)\n\n  id                         from                            to    weight\n1  1 s__un_f__Thermomonosporaceae     s__Actinocorallia_herbida 0.6759546\n2  2 s__un_f__Thermomonosporaceae       s__Kribbella_catacumbae 0.6742386\n3  3 s__un_f__Thermomonosporaceae       s__Kineosporia_rhamnosa 0.7378741\n4  4 s__un_f__Thermomonosporaceae   s__un_f__Micromonosporaceae 0.6236449\n5  5 s__un_f__Thermomonosporaceae s__Flavobacterium_saliperosum 0.6045747\n        cor      p.value   e_type     width   color  e_class lty     new_attri\n1 0.6759546 0.0020739524 positive 0.6759546 #48A4F0 e_class1   1 new attribute\n2 0.6742386 0.0021502138 positive 0.6742386 #48A4F0 e_class1   1 new attribute\n3 0.7378741 0.0004730567 positive 0.7378741 #48A4F0 e_class1   1 new attribute\n4 0.6236449 0.0056818984 positive 0.6236449 #48A4F0 e_class1   1 new attribute\n5 0.6045747 0.0078660171 positive 0.6045747 #48A4F0 e_class1   1 new attribute\n\n\n这样，就能获得一个既有统计意义又有生物学背景的网络信息。"
  },
  {
    "objectID": "Omics/NetworkPlot.html#可视化",
    "href": "Omics/NetworkPlot.html#可视化",
    "title": "网络图",
    "section": "可视化",
    "text": "可视化\n\n1. 构建网络\n简单多组学网络：包含微生物组，代谢组，转录组等信息。\n\n# 基础网络图\ndata(\"multi_test\", package = \"MetaNet\")\ndata(\"c_net\", package = \"MetaNet\")\nmulti1 &lt;- multi_net_build(list(Microbiome = micro, Metabolome = metab, Transcriptome = transc))\nplot(multi1)\n\n\n\n\n基础网络图\n\n\n\n\n\n\n2. 添加 annotation\n\n# 设置顶点类别\nmulti1_with_anno &lt;- c_net_set(multi1, \n                              micro_g, metab_g, \n                              transc_g, \n                              vertex_class = c(\"Phylum\", \"kingdom\", \"type\"))\n\n# 设置顶点大小\nmulti1_with_anno &lt;- c_net_set(multi1_with_anno,\n                              data.frame(\"Abundance1\" = colSums(micro)),\n                              data.frame(\"Abundance2\" = colSums(metab)),\n                              data.frame(\"Abundance3\" = colSums(transc)),\n                              vertex_size = paste0(\"Abundance\", 1:3))\n\nplot(multi1_with_anno)\n\n\n\n\n添加 annotation\n\n\n\n\n\n\n3. 筛选子网络\n\n# 筛选子网络\ndata(\"multi_net\", package = \"MetaNet\")\nmulti2 &lt;- c_net_filter(multi1_with_anno, v_group %in% \n                         c(\"Microbiome\", \"Metabolome\")) %&gt;%\n  c_net_filter(., e_class == \"intra\", mode = \"e\")\n\nplot(multi2, lty_legend = T, main = \"Sub-network\") \n\n\n\n\n筛选子网络\n\n\n\n\n\n\n4. 合并网络\n\n# 网络1\ndata(\"c_net\")\nplot(co_net)\n\n\n\n\n网络1\n\n\n\n\n\n# 网络2\ndata(\"c_net\")\nplot(co_net2)\n\n\n\n\n网络2\n\n\n\n\n\n# 合并网络\nco_net_union &lt;- c_net_union(co_net, co_net2)\nplot(co_net_union)\n\n\n\n\n合并网络\n\n\n\n\nMetaNet 包为微生物网络分析提供了全面的工具集，从基础的网络构建到高级的注释与可视化。通过灵活使用这些功能，我们能够从复杂的微生物组数据中提取有意义的生物学模式，为理解微生物群落结构与功能提供新视角。"
  },
  {
    "objectID": "Omics/NetworkPlot.html#参考文献",
    "href": "Omics/NetworkPlot.html#参考文献",
    "title": "网络图",
    "section": "参考文献",
    "text": "参考文献\n[1] K. Contrepois, S. Wu, K. J. Moneghetti, D. Hornburg, et al., [Molecular Choreography of Acute Exercise (https://doi.org/10.1016/j.cell.2020.04.043). Cell. 181, 1112–1130.e16 (2020).\n[2] Y. Deng, Y. Jiang, Y. Yang, Z. He, et al., Molecular ecological network analyses. BMC bioinformatics (2012), doi:10.1186/1471-2105-13-113.\n[3] K. Faust, J. Raes, Microbial interactions: From networks to models. Nature Reviews Microbiology (2012), doi:10.1038/nrmicro2832.\n[4] Chen Peng (2025). MetaNet: Network Analysis for Omics Data. R package"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bizard",
    "section": "",
    "text": "在生物医学研究中，数据可视化是解读复杂数据集、推动科学发现和指导临床决策的关键工具。R语言凭借其强大的统计功能和丰富的扩展包生态系统，已成为创建高质量可视化的基石。然而，R语言绘图工具包数量庞大且持续更新，研究人员常面临方法选择与图表定制的双重挑战——他们需要根据特定研究需求筛选合适方案并进行个性化调整。这一过程不仅需要高超的编程技能、跨学科协作能力，还需投入大量时间，这些因素都可能延缓研究进度，甚至影响实验结果的准确性。\n为应对这些挑战，我们开发了 Bizard。这个社区驱动的综合性平台整合了精选可视化代码库、进阶教程和协作论坛，通过优化资源获取路径与促进知识共享，致力于提升生物医学研究者的数据分析能力，加速科研成果向临床实践的转化。",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Bizard",
    "section": "",
    "text": "在生物医学研究中，数据可视化是解读复杂数据集、推动科学发现和指导临床决策的关键工具。R语言凭借其强大的统计功能和丰富的扩展包生态系统，已成为创建高质量可视化的基石。然而，R语言绘图工具包数量庞大且持续更新，研究人员常面临方法选择与图表定制的双重挑战——他们需要根据特定研究需求筛选合适方案并进行个性化调整。这一过程不仅需要高超的编程技能、跨学科协作能力，还需投入大量时间，这些因素都可能延缓研究进度，甚至影响实验结果的准确性。\n为应对这些挑战，我们开发了 Bizard。这个社区驱动的综合性平台整合了精选可视化代码库、进阶教程和协作论坛，通过优化资源获取路径与促进知识共享，致力于提升生物医学研究者的数据分析能力，加速科研成果向临床实践的转化。",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#什么是-bizard",
    "href": "index.html#什么是-bizard",
    "title": "Bizard",
    "section": "什么是 Bizard?",
    "text": "什么是 Bizard?\nBizard 汇聚了强大的可视化工具、精选代码和协作功能，助力研究人员高效完成数据分析，并以清晰有力的方式呈现研究成果。\n\n全面可视化资源库: 整合来自多方的可视化代码，既有经典图表库（graphgallery）资源，也有全球专家的创新贡献，为生物医学研究提供前沿工具集。\n多样化图表支持: 提供涵盖变量分布、相关性分析、排序图表及交互式可视化等场景的R代码实现，满足多元数据分析需求。\n真实场景应用: 基于R原生数据集与真实生物医学数据案例，让可视化技术的学习和应用更贴近实际研究场景，加速临床转化进程。\n生物医学数据适配: 包含预处理算法、带注释的绘图代码和专用方法，适配生物医学数据的复杂性，即使编程基础有限也能实现高级可视化。\n统计分析一体化: 将统计分析与可视化模块无缝结合，确保结果兼具严谨性与表现力，提升研究可信度，推动循证医学发展。\n开放协作生态: 积极吸纳生物医学领域专家的贡献，通过集体智慧优化功能，应对数据可视化领域的动态挑战。\n多平台便捷访问: 通过开源GitHub仓库、互动论坛及微信公众号教程等多渠道提供资源，促进知识共享与协作创新。\n推动研究卓越: 赋能研究人员提升可视化技能，完善方法学标准，助力精准医疗与个性化治疗发展。\n未来愿景: 致力于拓展国际协作，持续提供创新解决方案，以应对生物医学数据可视化与分析日益增长的复杂性。\n\n\n\n\n\n\n\n注记\n\n\n\n如果您觉得这有用或有改进的建议，请在任何页面底部的GitHub讨论中留下您的评论，让我们知道。",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html",
    "href": "Omics/MultiVolcanoPlot.html",
    "title": "多组火山图",
    "section": "",
    "text": "多组火山图是一种用于高通量数据（如转录组、蛋白组）差异表达分析的图形。相比于传统火山图，多组火山图可以同时展示多个分组的结果，便于横向比较差异特征的一致性或特异性。"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#示例",
    "href": "Omics/MultiVolcanoPlot.html#示例",
    "title": "多组火山图",
    "section": "示例",
    "text": "示例\n\n\n\n\n\n这个多组火山图展示了单细胞测序数据中多个细胞类群的差异基因表达模式。X 轴不同的颜色的方块表示不同的细胞类群，方块内部的散点表示差异基因，使用 geom_jitter 函数给散点添加了抖动效果，以避免数据点重叠。Y 轴表示差异倍数（Average log2FoldChange，红色散点表示 log2FC&gt;0 的上调基因，蓝色散点表示 log2FC&lt;0 的下调基因，文字标记出了 top5 差异基因。多组火山图不仅突出了各细胞类群特异性差异基因（如特定细胞类型的标记基因），还能直观识别跨细胞类群共有的关键调控分子。"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#环境配置",
    "href": "Omics/MultiVolcanoPlot.html#环境配置",
    "title": "多组火山图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：scRNAtoolVis; corrplot\n\n\n# 安装包\nif (!requireNamespace(\"scRNAtoolVis\", quietly = TRUE)) {\n  install_github('junjunlab/scRNAtoolVis')\n}\nif (!requireNamespace(\"corrplot\", quietly = TRUE)) {\n  install.packages(\"corrplot\")\n}\n\n# 加载包\nlibrary(scRNAtoolVis)\nlibrary(corrplot)"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#数据准备",
    "href": "Omics/MultiVolcanoPlot.html#数据准备",
    "title": "多组火山图",
    "section": "数据准备",
    "text": "数据准备\n数据使用 scRNAtoolVis 包中提供的 pbmc.markers 单细胞测序差异基因数据集。\n\n# 读取数据\ndata('pbmc.markers')\n# 查看数据集\nhead(pbmc.markers)\n\n              p_val avg_log2FC pct.1 pct.2     p_val_adj     cluster  gene\nRPS12 2.008629e-140  0.7256738 1.000 0.991 2.754633e-136 Naive CD4 T RPS12\nRPS27 2.624075e-140  0.7242847 0.999 0.992 3.598656e-136 Naive CD4 T RPS27\nRPS6  1.280169e-138  0.6742630 1.000 0.995 1.755623e-134 Naive CD4 T  RPS6\nRPL32 4.358823e-135  0.6121027 0.999 0.995 5.977689e-131 Naive CD4 T RPL32\nRPS14 3.618793e-128  0.6179756 1.000 0.994 4.962812e-124 Naive CD4 T RPS14\nCYBA  1.090337e-124 -1.5739355 0.661 0.914 1.495288e-120 Naive CD4 T  CYBA\n\n\n注意：数据集中应至少包括 p_val、avg_log2FC、p_val_adj、cluster、gene 这五列，且列名称不能改变，列顺序可以改变。绘图中展示的分组方块的名称为 cluster 列内容中的名称。"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#可视化",
    "href": "Omics/MultiVolcanoPlot.html#可视化",
    "title": "多组火山图",
    "section": "可视化",
    "text": "可视化\n\n1. 基础绘图\n可以使用 scRNAtoolVis 包中提供的 jjVolcano 函数绘制多组火山图。\n\n# 基础多组火山图\np &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  topGeneN = 5,\n  log2FC.cutoff = 0.5,\n  col.type = \"updown\",\n  aesCol = c('#0099CC','#CC3333'),\n  tile.col = corrplot::COL2('PuOr', 15)[4:12],\n  cluster.order = rev(unique(pbmc.markers$cluster)),\n  size  = 3.5,\n  fontface = 'italic'\n  )\n\np\n\n\n\n\n\n\n\n图 1: 基础多组火山图\n\n\n\n\n\nFigure 1 绘制了九种单细胞类群中上调和下调的差异基因。\n\n\n\n\n\n\n提示\n\n\n\n关键参数: \n\ndiffData: 输入的差异基因表格，数据结构如 pbmc.markers 所示。\nmyMarkers: 自定义要展示文字标签的基因，例如：myMarkers = c('PPBP', 'PF4') 自定义展示两个基因的文字标签。\n\n\n\n\n# 设置参数 myMarkers = c('PPBP', 'PF4')\np &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  myMarkers = c('PPBP', 'PF4'),\n  log2FC.cutoff = 0.5,\n  col.type = \"updown\",\n  aesCol = c('#0099CC','#CC3333'),\n  tile.col = corrplot::COL2('PuOr', 15)[4:12],\n  cluster.order = rev(unique(pbmc.markers$cluster)),\n  size  = 3.5,\n  fontface = 'italic',\n  legend.position = c(0.7,0.9)\n  )\n\np\n\n\n\n\n\n\n\n图 2: 关键参数：myMarkers\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: \n\ntopGeneN: 展示多少个 top 基因的文字标签，Figure1 示例中 topGeneN = 5 展示了每个类群中 top5 的上调和下调基因的文字标签，topGeneN 和 myMarkers 参数不能同时使用。\nlog2FC.cutoff: 设置 log2FoldChange 的阈值，该参数决定了分组方块的上下边界。\n\n\n\n\n# 设置 log2FC.cutoff=0.5\np1 &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  topGeneN = 0,\n  log2FC.cutoff = 0.5,\n  col.type = \"updown\",\n  aesCol = c('#0099CC','#CC3333'),\n  tile.col = corrplot::COL2('PuOr', 15)[4:12],\n  cluster.order = rev(unique(pbmc.markers$cluster)),\n  size  = 3.5,\n  fontface = 'italic',\n  legend.position = c(0.7,0.9)\n  )\n\n# 设置 log2FC.cutoff=2.5\np2 &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  topGeneN = 0,\n  log2FC.cutoff = 2.5,\n  col.type = \"updown\",\n  aesCol = c('#0099CC','#CC3333'),\n  tile.col = corrplot::COL2('PuOr', 15)[4:12],\n  cluster.order = rev(unique(pbmc.markers$cluster)),\n  size  = 3.5,\n  fontface = 'italic',\n  legend.position = c(0.7,0.9)\n  )\n\np1 + p2\n\n\n\n\n\n\n\n图 3: 关键参数：log2FC.cutoff\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: \n\ncol.type: 散点颜色分组方式，Figure1 示例按照 “updown” 分组，也可以按照 “adjustP” 分组。\n\n\n\n\n# 设置参数 col.type=\"adjustP\"\np &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  topGeneN = 5,\n  log2FC.cutoff = 0.5,\n  col.type = \"adjustP\",\n  aesCol = c('#0099CC','#CC3333'),\n  tile.col = corrplot::COL2('PuOr', 15)[4:12],\n  cluster.order = rev(unique(pbmc.markers$cluster)),\n  size  = 3.5,\n  fontface = 'italic',\n  legend.position = c(0.7,0.9)\n  )\n\np\n\n\n\n\n\n\n\n图 4: 关键参数：col.type\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: \n\naesCol：设置散点的颜色配色。\ntile.col：设置分组方块的颜色配色。\ncluster.order：设置分组方块的顺序。\nsize：设置基因文字标签的字体大小。\nfontface：设置基因文字标签的字体样式。\nlegend.position：设置 legend 的位置。\n\n\n\n\n\n2. 旋转方向\n使用 jjVolcano 函数中的 flip 参数可以旋转热图的方向。\n\n# 横向多组火山图\np &lt;- \n  jjVolcano(\n    diffData = pbmc.markers,\n    tile.col = corrplot::COL2('PiYG', 15)[4:12],\n    size  = 3.5,\n    fontface = 'italic',\n    legend.position = c(0.8,0.2),\n    flip = T)\n\np\n\n\n\n\n\n\n\n图 5: 关键参数：flip\n\n\n\n\n\nFigure 5 通过设置参数 flip = T 将多组火山图旋转为横向。\n\n\n3. 极坐标\n\n# 极坐标多组火山图\np &lt;- jjVolcano(\n  diffData = pbmc.markers,\n  tile.col = corrplot::COL2('RdBu', 15)[4:12],\n  size  = 3.5,\n  fontface = 'italic',\n  polar = T)\n\np\n\n\n\n\n\n\n\n图 6: 关键参数：polar\n\n\n\n\n\nFigure 6 通过设置参数 polar = T 将多组火山图转换为极坐标。"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#应用场景",
    "href": "Omics/MultiVolcanoPlot.html#应用场景",
    "title": "多组火山图",
    "section": "应用场景",
    "text": "应用场景\n\n\n\n\n\n\n图 7: 多组火山图应用\n\n\n\nFigure 7H 显示了所有十个单细胞类群中上调和下调基因的差异基因表达分析。调整后的P值&lt;0.01表示为红色，而调整后的P值≥0.01表示为黑色 [1]。"
  },
  {
    "objectID": "Omics/MultiVolcanoPlot.html#参考文献",
    "href": "Omics/MultiVolcanoPlot.html#参考文献",
    "title": "多组火山图",
    "section": "参考文献",
    "text": "参考文献\n[1] Asp M, Giacomello S, Larsson L, et al. A Spatiotemporal Organ-Wide Gene Expression and Cell Atlas of the Developing Human Heart. Cell. 2019;179(7):1647-1660.e19. doi:10.1016/j.cell.2019.11.025."
  },
  {
    "objectID": "Omics/ManhattanPlot.html",
    "href": "Omics/ManhattanPlot.html",
    "title": "曼哈顿图",
    "section": "",
    "text": "Manhattan plot，即曼哈顿图，是一种用于描述染色体上的突变与性状之间关联强弱的图，由于图形形似美国曼哈顿区的城市景观因此得名曼哈顿图。绘制曼哈顿图一般使用散点图的形式，但是也可以使用柱状图或折线图展示，常用R包qqman或者直接使用ggplot2绘制。"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#示例",
    "href": "Omics/ManhattanPlot.html#示例",
    "title": "曼哈顿图",
    "section": "示例",
    "text": "示例\n\n\n\n\n\n曼哈顿图的横坐标为染色体位置，纵坐标为Pvalue或者诸如ΔSNP、ED等一切可以表示突变位点与性状之间关联强弱的值。下面将使用Pvalue作为示例。"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#环境配置",
    "href": "Omics/ManhattanPlot.html#环境配置",
    "title": "曼哈顿图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：qqman; tidyverse; aplot\n\n\n# 安装包\nif (!requireNamespace(\"qqman\", quietly = TRUE)) {\n  install.packages(\"qqman\")\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"aplot\", quietly = TRUE)) {\n  install.packages(\"aplot\")\n}\n\n# 加载包\nlibrary(qqman)\nlibrary(tidyverse)\nlibrary(aplot)"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#数据准备",
    "href": "Omics/ManhattanPlot.html#数据准备",
    "title": "曼哈顿图",
    "section": "数据准备",
    "text": "数据准备\n数据使用qqman中自带的gwasResults数据集。\n\n# 查看数据集\nhead(gwasResults)\n\n  SNP CHR BP         P\n1 rs1   1  1 0.9148060\n2 rs2   1  2 0.9370754\n3 rs3   1  3 0.2861395\n4 rs4   1  4 0.8304476\n5 rs5   1  5 0.6417455\n6 rs6   1  6 0.5190959"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#可视化",
    "href": "Omics/ManhattanPlot.html#可视化",
    "title": "曼哈顿图",
    "section": "可视化",
    "text": "可视化\n\n1. qqman绘制曼哈顿图\nmanhattan和qq是qqman中最重要的两个函数，分别负责绘制曼哈顿图和QQ图：\n\n\n\n\n\n\n提示\n\n\n\nmanhattan 参数:\n\nx：输入数据，要求格式为dataframe数据框\nchr：记录染色体信息的列名，必须是数字\nbp：记录碱基坐标位置信息的列名，必须是数字\np：记录P值或其他值信息的列名，必须是数字\nsnp：记录SNP名称的列名\ncol：交替的颜色设置\nchrlabs：X轴上染色体的名称，默认与数据框中的名称一致\nsuggestiveline：蓝色阈值线，设置为FALSE时不绘制\ngenomewideline：红色阈值线，设置为FALSE时不绘制\nhighlight：高亮的SNP名称\nlogp：设置为TRUE时，纵轴为-log10(P)，设置为FALSE时纵轴为P\nannotatePval：设置阈值，标注图中高于该阈值的SNP\nannotateTop：每条染色体仅标注一个最高的SNP\n\n\n\n\n# 基础曼哈顿图\nmanhattan(gwasResults)\n\n\n\n\n\n\n\n图 1: 基础曼哈顿图\n\n\n\n\n\n此图展示了基因组上所有SNP与性状的关联情况，其中三号染色体上存在一个明显的峰，表明三号染色体上存在一个可能是与性状强相关的区域。\nmanhattan中染色体的颜色可以通过col参数修改：\n\n# 颜色设置\nmanhattan(gwasResults, col = c(\"#3E7B92\",\"#F0E442\",\"#BF242A\"))\n\n\n\n\n\n\n\n图 2: 颜色设置\n\n\n\n\n\n对特定SNP进行高亮显示：\n\n# 高亮设置\nmanhattan(gwasResults, highlight =\"rs3057\")\n\n\n\n\n\n\n\n图 3: 高亮设置\n\n\n\n\n\n标注高于阈值的SNP(每条染色体一个)：\n\n# 注释设置\nmanhattan(gwasResults, highlight =\"rs3057\", annotatePval=1e-5)\n\n\n\n\n\n\n\n图 4: 注释设置\n\n\n\n\n\n\n\n2. ggplot2绘制曼哈顿图\n使用qqman绘制曼哈顿图能满足大部分需求，然而仍有部分需求不能满足，例如设置阈值线的样式和颜色，此时可以用ggplot2绘图。\n\n# ggplot2绘制曼哈顿图\ndf &lt;- gwasResults\ndf$CHR &lt;- factor(as.character(df$CHR),levels=unique(df$CHR))\nlen &lt;- \n    df %&gt;% \n    group_by(CHR) %&gt;%  # CHR为染色体信息的列名\n    summarise(len=max(BP))  # BP为位置信息的列名\nlen &lt;-  # 计算snp在图中的位置\n    len %&gt;% summarise(pos=cumsum(len)-len)\nrownames(len) &lt;- unique(df$CHR)\ndf$BP &lt;- df$BP+len$pos[match(df$CHR,rownames(len))]\nX_axis &lt;-  df %&gt;% group_by(CHR) %&gt;% summarize(center=( max(BP) + min(BP) ) / 2 ) # 计算染色体的位置\n\n# 下面对P值进行多重矫正，qqman中对P取固定的阈值其实是不可取的。\nbf &lt;- max(df$P[p.adjust(df$P, method = \"bonferroni\")&lt;0.05])  # 使用bonferroni法\nfdr&lt;- max(df$P[p.adjust(df$P, method = \"fdr\")&lt;0.05])  # 使用fdr法\n\ncol &lt;- c(\"gray10\", \"gray60\") # 此处设置染色体颜色\ncols &lt;- rep(col ,nrow(X_axis))\nline_col1 &lt;- \"red\" # 此处阈值线颜色\nline_col2 &lt;- \"blue\"\nline_type1 &lt;- \"dashed\" # 此处阈值线类型\nline_type2 &lt;- \"dashed\" \nggplot()+\n    geom_point(df,mapping=aes(x=BP,y=-log10(P),color=CHR),alpha=0.7,size=1,shape=16)+\n    geom_hline(yintercept = -log10(bf),lty=line_type1 ,color= line_col1 )+\n    geom_hline(yintercept = -log10(fdr),lty=line_type2 ,color= line_col2)+\n    scale_color_manual(values = cols ) +\n    theme_bw()+\n    theme(panel.grid.major = element_blank(),panel.grid.minor=element_blank(),\n          legend.position = 'none')+\n    xlab(\"CHR\")+ylab(\"-log10(P)\")+ #横轴纵轴标题\n    scale_x_continuous( limits = c(0, max(df$BP)),label = X_axis$CHR, breaks= X_axis$center ) +\n    scale_y_continuous(expand = c(0,0)) \n\n\n\n\n\n\n\n图 5: ggplot2绘制曼哈顿图\n\n\n\n\n\n使用ggplot2绘制曼哈顿图的好处在于可以高度自定义图像的风格，可以注意到在上面我已经设置好了几个变量，只需要对这些变量进行修改即可自定义颜色以及阈值线样式。\n\ncol &lt;- c(\"#3E7B92\",\"#F0E442\",\"#BF242A\") #此处设置染色体颜色\ncols &lt;- rep(col ,nrow(X_axis))\nline_col1 &lt;- \"#DB5A6A\" #此处阈值线颜色\nline_col2 &lt;- \"#0050B7\"\nline_type1 &lt;- \"solid\" #此处阈值线类型，可以设置的线条类型有：”solid“,“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, “twodash”\nline_type2 &lt;- \"dotdash\" \nggplot()+\n    geom_point(df,mapping=aes(x=BP,y=-log10(P),color=CHR),alpha=0.7,size=1,shape=16)+\n    geom_hline(yintercept = -log10(bf),lty=line_type1 ,color= line_col1 )+\n    geom_hline(yintercept = -log10(fdr),lty=line_type2 ,color= line_col2)+\n    scale_color_manual(values = cols ) +\n    theme_bw()+\n    theme(panel.grid.major = element_blank(),panel.grid.minor=element_blank(),\n          legend.position = 'none')+\n    xlab(\"CHR\")+ylab(\"-log10(P)\")+\n    scale_x_continuous( limits = c(0, max(df$BP)),label = X_axis$CHR, breaks= X_axis$center ) +\n    scale_y_continuous(expand = c(0,0)) \n\n\n\n\n\n\n\n图 6: ggplot2修改颜色\n\n\n\n\n\n由于ggplot2绘图是将一张张图叠加起来，因此可以将筛选后的SNP用geom_point叠加到原图上：\n\ndf2 &lt;- df[df$P&lt;bf,]\ndf3 &lt;- df[df$SNP==\"rs3057\",]\ncol &lt;- c(\"gray10\", \"gray60\") #此处设置染色体颜色\ncols &lt;- rep(col ,nrow(X_axis))\nline_col1 &lt;- \"red\" #此处阈值线颜色\nline_col2 &lt;- \"blue\"\nline_type1 &lt;- \"dashed\" #此处阈值线类型\nline_type2 &lt;- \"dashed\" \nggplot()+\n    geom_point(df,mapping=aes(x=BP,y=-log10(P),color=CHR),alpha=0.7,size=1,shape=16)+\n    geom_point(df2,mapping=aes(x=BP,y=-log10(P)),color=\"blue\",size=1,shape=16)+\n    geom_point(df3,mapping=aes(x=BP,y=-log10(P)),color=\"red\",size=3,shape=18)+\n    geom_hline(yintercept = -log10(bf),lty=line_type1 ,color= line_col1 )+\n    geom_hline(yintercept = -log10(fdr),lty=line_type2 ,color= line_col2)+\n    scale_color_manual(values = cols ) +\n    theme_bw()+\n    theme(panel.grid.major = element_blank(),panel.grid.minor=element_blank(),\n          legend.position = 'none')+\n    xlab(\"CHR\")+ylab(\"-log10(P)\")+\n    scale_x_continuous( limits = c(0, max(df$BP)),label = X_axis$CHR, breaks= X_axis$center ) +\n    scale_y_continuous(limits = c(0, max(-log10(df$P))+1),expand = c(0,0)) \n\n\n\n\n\n\n\n图 7: 高亮或标记snp\n\n\n\n\n\n当你有两个性状时可能需要将两个性状的GWAS结果同时展现在结果上，可以使用下列方法绘制双向曼哈顿图。这里只用一组数据作为示例。\n\ncol &lt;- c(\"gray10\", \"gray60\") #此处设置染色体颜色\ncols &lt;- rep(col ,nrow(X_axis))\nline_col1 &lt;- \"red\" #此处阈值线颜色\nline_col2 &lt;- \"blue\"\nline_type1 &lt;- \"dashed\" #此处阈值线类型\nline_type2 &lt;- \"dashed\" \np1 &lt;- \n    ggplot()+\n    geom_point(df,mapping=aes(x=BP,y=-log10(P),color=CHR),alpha=0.7,size=1,shape=16)+\n    geom_hline(yintercept = -log10(bf),lty=line_type1 ,color= line_col1 )+\n    geom_hline(yintercept = -log10(fdr),lty=line_type2 ,color= line_col2)+\n    scale_color_manual(values = cols ) +\n    theme_bw()+\n    theme(panel.grid.major = element_blank(),panel.grid.minor=element_blank(),\n          axis.text.x = element_text(vjust = -2),\n          axis.title.x = element_blank(),\n          legend.position = 'none')+\n    ylab(\"-log10(P)\")+ #横轴纵轴标题\n    scale_x_continuous( limits = c(0, max(df$BP)),label = X_axis$CHR, breaks= X_axis$center ) +\n    scale_y_continuous(expand = c(0,0)) \np2 &lt;- \n    ggplot()+\n    geom_point(df,mapping=aes(x=BP,y=-log10(P),color=CHR),alpha=0.7,size=1,shape=16)+\n    geom_hline(yintercept = -log10(bf),lty=line_type1 ,color= line_col1 )+\n    geom_hline(yintercept = -log10(fdr),lty=line_type2 ,color= line_col2)+\n    scale_color_manual(values = cols ) +\n    theme_bw()+\n    theme(panel.grid.major = element_blank(),panel.grid.minor=element_blank(),\n          axis.text.x = element_blank(),axis.title.x = element_blank(),\n          legend.position = 'none')+\n    ylab(\"-log10(P)\")+\n    scale_x_continuous( limits = c(0, max(df$BP)),label = X_axis$CHR, breaks= X_axis$center ,position = 'top') +\n    scale_y_reverse(expand = c(0,0))\np1/p2\n\n\n\n\n\n\n\n图 8: 双向曼哈顿图"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#应用场景",
    "href": "Omics/ManhattanPlot.html#应用场景",
    "title": "曼哈顿图",
    "section": "应用场景",
    "text": "应用场景\nfig-HistApplications} \n曼哈顿图应用 :::\n此图展示了杨树上的SNP位点与温度（上图）/降雨（下图）之间的关联 [1]。"
  },
  {
    "objectID": "Omics/ManhattanPlot.html#参考文献",
    "href": "Omics/ManhattanPlot.html#参考文献",
    "title": "曼哈顿图",
    "section": "参考文献",
    "text": "参考文献\n[1] Sang Y, Long Z, Dan X, Feng J, Shi T, Jia C, Zhang X, Lai Q, Yang G, Zhang H, Xu X, Liu H, Jiang Y, Ingvarsson PK, Liu J, Mao K, Wang J. Genomic insights into local adaptation and future climate-induced vulnerability of a keystone forest tree in East Asia. Nat Commun. 2022 Nov 1;13(1):6541. doi: 10.1038/s41467-022-34206-8. PMID: 36319648; PMCID: PMC9626627."
  },
  {
    "objectID": "Omics/GeneStructurePlot.html",
    "href": "Omics/GeneStructurePlot.html",
    "title": "基因结构图",
    "section": "",
    "text": "在生物学，尤其是分子生物学研究中解析基因的表达调控模式一直以来都是研究的重点内容，而在此过程中难免会有绘制一个基因的结构或者上下游关系的需求，因此本教程将基于R包gggenes对常见的一些基因结构画法进行总结。"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#示例",
    "href": "Omics/GeneStructurePlot.html#示例",
    "title": "基因结构图",
    "section": "示例",
    "text": "示例"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#环境配置",
    "href": "Omics/GeneStructurePlot.html#环境配置",
    "title": "基因结构图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：tidyverse; gggenes; ggtree\n\n\n# 安装包\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"gggenes\", quietly = TRUE)) {\n  install.packages(\"gggenes\")\n}\nif (!requireNamespace(\"ggtree\", quietly = TRUE)) {\n  install.packages(\"ggtree\")\n}\n\n# 加载包\nlibrary(tidyverse)\nlibrary(gggenes)\nlibrary(ggtree)"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#数据准备",
    "href": "Omics/GeneStructurePlot.html#数据准备",
    "title": "基因结构图",
    "section": "数据准备",
    "text": "数据准备\n数据使用gggenes中自带的example_genes数据集、example_subgenes数据集以及example_features数据集，分别记录了基因的位置信息、基因子结构的位置信息、基因上标记点的位置信息。\nexample_genes为一个数据框（dataframe），包含一个记录染色体或链信息的列作为纵坐标，一个记录基因或序列ID的列作为染色的映射索引，两个记录基因起始和终止位置的列，一个记录基因方向的列，每一行为一个基因，下表为example_genes的数据示例：\n\nhead(example_genes)\n\n  molecule gene start   end  strand orientation\n1  Genome1 genA 15389 17299 reverse           1\n2  Genome1 genB 17301 18161 forward           0\n3  Genome1 genC 18176 18640 reverse           1\n4  Genome1 genD 18641 18985 forward           0\n5  Genome1 genE 18999 20078 reverse           1\n6  Genome1 genF 20086 20451 forward           1\n\n\nexample_subgenes需要包含example_genes的所有列，并且需要额外包含一个记录基因子结构ID的列，两个记录基因子结构起始和终止位置的列，每一行为一个基因子结构，下表为example_subgenes的数据示例：\n\nhead(example_subgenes)\n\n  molecule gene  start    end  strand subgene   from     to orientation\n1  Genome5 genA 405113 407035 forward  genA-1 405774 406538           0\n2  Genome5 genB 407035 407916 forward  genB-1 407458 407897           0\n3  Genome5 genC 407927 408394 forward  genC-1 407942 408158           0\n4  Genome5 genC 407927 408394 forward  genC-2 408186 408209           0\n5  Genome5 genC 407927 408394 forward  genC-3 408233 408257           0\n6  Genome5 genF 409836 410315 forward  genF-1 409938 410016           0\n\n\nexample_features需要包含一个记录染色体或链信息的列，一个记录标记点名称的列，一个记录标记点类型的列，一个记录标记点位置的列，一个记录标记点方向的列，每一行为一个标记，下表为example_features的数据示例：\n\nhead(example_features)\n\n  molecule name             type position forward\n1  Genome1 tss9              tss    22988      NA\n2  Genome1  rs4 restriction site    18641      NA\n3  Genome1 ori5              ori    18174      NA\n4  Genome2  rs0 restriction site    12256      NA\n5  Genome2  rs1 restriction site    14076      NA\n6  Genome2 ori1              ori    13355   FALSE"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#可视化",
    "href": "Omics/GeneStructurePlot.html#可视化",
    "title": "基因结构图",
    "section": "可视化",
    "text": "可视化\n\n1. 基因结构图基础\ngggenes作为ggplot2的扩展，其功能由一个主要函数geom_gene_arrow以及若干次要函数完成，首先介绍gggenes的基础用法：\n\n1.1 绘制一连串的基因相对位置\n\n# 绘制一连串的基因相对位置\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1)  # gggenes通常配合facet_wrap函数进行分面使用。需要注意的是，画图界面过小的话会提示报错：“Viewport has zero dimension(s)”，只需将画图窗口拉大或者设置更大的界面即可。\n\n\n\n\n\n\n\n图 1: 绘制一连串的基因相对位置\n\n\n\n\n\n\n\n1.2 绘制一组基因\n如果关注的是基因本身的结构而不是基因的位置可以将基因ID作为纵轴：\n\n# 绘制一组基因\ndf &lt;- subset(example_genes, molecule == \"Genome4\")\ndf$end &lt;- df$end-df$start\ndf$start &lt;- 1\nggplot(df, aes(xmin = start, xmax = end, y = gene)) +\n    geom_gene_arrow()\n\n\n\n\n\n\n\n图 2: 绘制一组基因\n\n\n\n\n\n\n\n1.3 绘制基因子结构\n有时我们会关注于基因上更精细的结构，比如CDS位置或者特殊的motif位置等，此时则需要gggenes中提供的另一个扩展函数geom_subgene_arrow来完成，需要注意的是虽然example_subgenes也可以作为geom_gene_arrow的输入但是由于数据中的每一行都会创建一个基因的轮廓图像，因此在一个基因含有多个子结构的时候不建议这么做，建议的使用方法还是将基因信息以及子结构信息单独分为俩个数据框处理。使用方法如下：\n\n# 绘制基因子结构\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule)) +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    geom_gene_arrow(fill = \"white\") +\n    geom_subgene_arrow(data = example_subgenes,\n                       aes(fill = gene, xsubmin = from, xsubmax = to),\n                       color=\"black\", alpha=.7)\n\n\n\n\n\n\n\n图 3: 绘制基因子结构\n\n\n\n\n\n\n\n1.4 绘制基因标记点\n有时我们会关注基因或序列上的某个特殊点位，例如酶切位点或者启动子位点等，与基因或者其子结构不同的是标记常常为一个或有限的几个碱基，此时不适合使用箭头的画图方法，而geom_feature和geom_feature_label拓展函数则可以很好的完成这种标记任务：\n\n# 绘制基因标记点\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule)) +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    geom_gene_arrow(fill = \"white\")+\n    geom_feature(\n        data = example_features,\n        aes(x = position, y = molecule, forward = forward)\n    ) +\n    geom_feature_label(\n        data = example_features,\n        aes(x = position, y = molecule, label = name, forward = forward),\n        feature_height = unit(4, \"mm\"), #当标记点无法正常显示时，可以设置该参数调整标记的标签高度\n        label_height = unit(3, \"mm\") #当标记点标签大小不合适时，可以设置该参数调整标记的标签大小\n    ) +\n    theme_genes() #这个主题下面会提到\n\n\n\n\n\n\n\n图 4: 绘制基因标记点\n\n\n\n\n\n\n\n1.5 与进化树和作图\n我们可能会关注不同物种或品种在某个染色体区域的基因差异，此时我们可以将进化树与基因结构图联用，除了使用拼图的方法以外，R包ggtree也提供了一个接口用于二者联用： 首先我们需要获取一个树结构，这里直接用gggenes的数据集构造一个tree，实际使用时读取一个树文件即可。 根据基因结构生成一个进化树，实际使用不需要生成：\n\nget_genes &lt;- function(data, genome) {\n    filter(data, molecule == genome) %&gt;% pull(gene)\n}\n\ng &lt;- unique(example_genes[,1])\nn &lt;- length(g)\nd &lt;- matrix(nrow = n, ncol = n)\nrownames(d) &lt;- colnames(d) &lt;- g\ngenes &lt;- lapply(g, get_genes, data = example_genes)\n\nfor (i in 1:n) {\n    for (j in 1:i) {\n        jaccard_sim &lt;- length(intersect(genes[[i]], genes[[j]])) / \n            length(union(genes[[i]], genes[[j]]))\n        d[j, i] &lt;- d[i, j] &lt;- 1 - jaccard_sim\n    }\n}\ntree &lt;- ape::bionj(d) \n\n画图时使用ggtree函数，并在geom_facet中指定基因结构数据，并指定geom = geom_motif panel = 'Alignment'，on 参数用于指定需要对齐的基因名称（必须是所有物种共有的，如果没有的话暂时不知道怎么设置）。坐标映射参数为xmin和xmax。需要注意的是在上方被作为纵轴的染色体ID（这里可以是不同物种的名称）必须位于数据框的第一列，ggtree会通过比较树的枝标签以及基因结构的第一列来决定基因结构的纵轴位置。 画图代码如下：\n\n# 与进化树和作图\nggtree(tree, branch.length='none') + \n    geom_tiplab() + xlim_tree(5.5) + \n    geom_facet(data = example_genes,\n               geom = geom_motif,\n               mapping = aes(xmin = start, xmax = end, fill = gene), \n               panel = 'Alignment',on = 'genE', \n               label = 'gene', align = 'left') +\n    scale_fill_brewer(palette = \"Set3\") +  #修改配色的方法下面会提到\n    scale_x_continuous(expand=c(0,0)) +\n    theme(strip.text=element_blank())\n\n\n\n\n\n\n\n图 5: 与进化树和作图\n\n\n\n\n\n\n\n\n2. 图像美化\n\n2.1 theme_genes 主题\n在gggenes中，有一个名为theme_genes的图像主题，非常适合用于绘制基因结构：\n\n# theme_genes主题\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    theme_genes() \n\n\n\n\n\n\n\n图 6: theme_genes主题\n\n\n\n\n\n\n\n2.2 修改颜色\n对不同的基因添加颜色(子结构同理，不再赘述)：\n\n# 修改颜色\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill=gene)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    theme_genes()\n\n\n\n\n\n\n\n图 7: 修改颜色\n\n\n\n\n\n更换配色方案可以使用调色板或者手动设置：\n\n# 修改颜色\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill = gene)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    scale_fill_brewer(palette = \"Set3\") +\n    theme_genes()\n\n\n\n\n\n\n\n图 8: 修改颜色\n\n\n\n\n\n自定义配色：\n\n# 修改颜色\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill = gene)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    scale_fill_manual(values=c(\"genA\"=\"#266CAF\",\n                               \"genB\"=\"#BF3237\",\n                               \"genC\"=\"#54AC78\",\n                               \"genD\"=\"#FBD75F\")) +\n    theme_genes()\n\n\n\n\n\n\n\n图 9: 修改颜色\n\n\n\n\n\n\n\n2.3 为基因添加标签\n添加基因标签需要使用geom_gene_label扩展函数，该函数只需要额外定义一个label映射即可\n\n# 为基因添加标签\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill = gene)) +\n    geom_gene_arrow() +\n    geom_gene_label(aes(label = gene),align = \"left\") +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    scale_fill_brewer(palette = \"Set3\") +\n    theme_genes()\n\n\n\n\n\n\n\n图 10: 为基因添加标签\n\n\n\n\n\n\n\n2.4 修改基因箭头形状\n想要修改箭头性状需要用到geom_gene_arrow中的两个参数：arrowhead_height arrowhead_width，分别定义箭头的高度与宽度\n\n# 修改基因箭头形状\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill = gene)) +\n    geom_gene_arrow(arrowhead_height = unit(3, \"mm\"), arrowhead_width = unit(1, \"mm\")) +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    scale_fill_brewer(palette = \"Set3\") +\n    theme_genes()\n\n\n\n\n\n\n\n图 11: 修改基因箭头形状\n\n\n\n\n\n\n\n2.5 修改基因的方向\n修改基因方向一般需要设置forward映射，映射列的内容必须是可以转化为布尔值的值，例如：0/1，T/F，TRUE/FALSE，”True“/“False”等，可以使用as.logical函数自行判断。 在没有设置的情况下，基因的箭头默认指向xmax的方向，当设置forward的映射后，布尔值为TRUE的基因指向xmax的方向，布尔值为FALSE的基因指向xmin的方向。因此如果在你的数据中xmin和xmax本身就带有方向性，也可以不进行forward映射。\n\n# 修改基因的方向\nggplot(example_genes, aes(xmin = start, xmax = end, y = molecule, fill = gene, forward = orientation)) +\n    geom_gene_arrow() +\n    facet_wrap(~ molecule, scales = \"free\", ncol = 1) +\n    scale_fill_brewer(palette = \"Set3\") +\n    theme_genes()\n\n\n\n\n\n\n\n图 12: 修改基因的方向"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#应用场景",
    "href": "Omics/GeneStructurePlot.html#应用场景",
    "title": "基因结构图",
    "section": "应用场景",
    "text": "应用场景\n\n\n\n\n\n\n图 13: 基因结构图应用\n\n\n\n图中展示了植物在进化过程中，NLR基因的丢失分化模型 [1]。"
  },
  {
    "objectID": "Omics/GeneStructurePlot.html#参考文献",
    "href": "Omics/GeneStructurePlot.html#参考文献",
    "title": "基因结构图",
    "section": "参考文献",
    "text": "参考文献\n[1] Guo BC, Zhang YR, Liu ZG, Li XC, Yu Z, Ping BY, Sun YQ, van den Burg H, Ma FW, Zhao T. Deciphering Plant NLR Genomic Evolution: Synteny-Informed Classification Unveils Insights into TNL Gene Loss. Mol Biol Evol. 2025 Feb 3;42(2):msaf015. doi: 10.1093/molbev/msaf015. PMID: 39835721; PMCID: PMC11789945."
  },
  {
    "objectID": "Omics/SankeyBubblePlot.html#环境配置",
    "href": "Omics/SankeyBubblePlot.html#环境配置",
    "title": "组合桑基气泡图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: 跨平台（Linux/MacOS/Windows）\n编程语言: R\n依赖包: tidyverse; readr; ggalluvial; patchwork\n\n\n# 安装包\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"readr\", quietly = TRUE)) {\n  install.packages(\"readr\")\n}\nif (!requireNamespace(\"ggalluvial\", quietly = TRUE)) {\n  install.packages(\"ggalluvial\")\n}\nif (!requireNamespace(\"patchwork\", quietly = TRUE)) {\n  install.packages(\"patchwork\")\n}\n\n# 加载包\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(ggalluvial)\nlibrary(patchwork)"
  },
  {
    "objectID": "Omics/SankeyBubblePlot.html#数据准备",
    "href": "Omics/SankeyBubblePlot.html#数据准备",
    "title": "组合桑基气泡图",
    "section": "数据准备",
    "text": "数据准备\n我们导入来自 DAVID 的网络药理学注释分析通路富集数据。\n\n# 读取数据\ndata &lt;- read_tsv(\"files/DAVID.txt\")\n\n# 添加新分类列\nget_category &lt;- function(cat) {\n  if (grepl(\"BP\", cat)) return(\"BP\")\n  if (grepl(\"MF\", cat)) return(\"MF\")\n  if (grepl(\"CC\", cat)) return(\"CC\")\n  if (grepl(\"KEGG\", cat)) return(\"KEGG\")\n  return(NA)\n}\ndata$MainCategory &lt;- sapply(data$Category, get_category)\n\n# 剔除 SMART 和 NA\ndata2 &lt;- data %&gt;%\n  filter(!grepl(\"SMART\", Category)) %&gt;%\n  filter(!is.na(MainCategory))\n\n# 每类排序并取前10\ntopN &lt;- function(data, n=10) {\n  data %&gt;%\n  arrange(desc(Count), PValue) %&gt;%\n  head(n)\n}\nresult &lt;- data2 %&gt;%\n  group_by(MainCategory) %&gt;%\n  group_modify(~topN(.x, 10)) %&gt;%\n  ungroup()\n\n# KEGG 通路注释\nresult &lt;- result %&gt;%\n  mutate(\n    Source = ifelse(MainCategory == \"KEGG\", \"KEGG\", \"GO\"),\n    KEGG_Group = case_when(\n      MainCategory == \"KEGG\" & str_detect(Term,\"Neuro|synapse|neurodegeneration|Alzheimer|Parkinson|Prion\") ~ \"Nervous system\",\n      MainCategory == \"KEGG\" & str_detect(Term, \"Cytokine|inflammatory\") ~ \"Immune system\",\n      MainCategory == \"KEGG\" & str_detect(Term, \"Lipid|atherosclerosis\") ~ \"Lipid metabolism\",\n      MainCategory == \"KEGG\" ~ \"Other KEGG\",\n      TRUE ~ NA_character_\n      ),\n    GO_Group = ifelse(MainCategory != \"KEGG\", MainCategory, NA)\n    )\nalluvial_data &lt;- result %&gt;%\n  mutate(\n    Term = str_replace(Term, \"^GO:\\\\d+~\", \"\"), # 去除 GO 编号\n    Term = str_replace(Term, \"^hsa\\\\d+:?\", \"\") # 去除 KEGG 编号\n    )\n\n# GO 部分\ngo_links &lt;- result %&gt;%\n  filter(Source == \"GO\") %&gt;%\n  transmute(\n    Source = Source,\n    Group = GO_Group,\n    Term = Term,\n    Count = Count\n    )\n\n# KEGG 部分\nkegg_links &lt;- result %&gt;%\n  filter(Source == \"KEGG\") %&gt;%\n  transmute(\n    Source = Source,\n    Group = KEGG_Group,\n    Term = Term,\n    Count = Count\n    )\n\n# 生成桑基图数据\nalluvial_data &lt;- result %&gt;%\n  mutate(Group = ifelse(Source == \"KEGG\", KEGG_Group, GO_Group)) %&gt;%\n  select(Source, Group, Term, Count, FDR, FoldEnrichment, MainCategory)\n\n# 确保字符型\nalluvial_data$Source &lt;- as.character(alluvial_data$Source)\nalluvial_data$Group &lt;- as.character(alluvial_data$Group)\nalluvial_data$Term &lt;- as.character(alluvial_data$Term)\n\n# 合并\nalluvial_data &lt;- bind_rows(go_links, kegg_links)\n\n# 将 term 列按照 count 值从小到大排列，并且保证气泡图和桑基图的顺序一致\nterm_levels &lt;- alluvial_data %&gt;%\n  arrange(Source, Group, desc(Count)) %&gt;%\n  pull(Term) %&gt;%\n  unique()\nalluvial_data$Term &lt;- factor(alluvial_data$Term, levels = term_levels)\n\n# 查看数据结构\nhead(alluvial_data, 5)\n\n# A tibble: 5 × 4\n  Source Group Term                                                        Count\n  &lt;chr&gt;  &lt;chr&gt; &lt;fct&gt;                                                       &lt;dbl&gt;\n1 GO     BP    GO:0010628~positive regulation of gene expression              12\n2 GO     BP    GO:0045944~positive regulation of transcription by RNA pol…    11\n3 GO     BP    GO:0007187~G protein-coupled receptor signaling pathway, c…    10\n4 GO     BP    GO:0007268~chemical synaptic transmission                      10\n5 GO     BP    GO:0006954~inflammatory response                               10"
  },
  {
    "objectID": "Omics/SankeyBubblePlot.html#可视化",
    "href": "Omics/SankeyBubblePlot.html#可视化",
    "title": "组合桑基气泡图",
    "section": "可视化",
    "text": "可视化\n\n1. 桑基图\n\n# 桑基图（Term列不显示标签）\n\n# 确保 Group 为字符型且无 NA\nalluvial_data$Group &lt;- as.character(alluvial_data$Group)\nalluvial_data$Group[is.na(alluvial_data$Group)] &lt;- \"Other\"\n# 计算每个 Group 的总 Count\ngroup_order &lt;- alluvial_data %&gt;%\n  group_by(Group) %&gt;%\n  summarise(group_count = sum(Count, na.rm = TRUE)) %&gt;%\n  arrange(desc(group_count)) %&gt;%\n  pull(Group)\n# 设置 group 为有序因子\nalluvial_data$Group &lt;- factor(alluvial_data$Group, levels = group_order)\n# 对 Term 列进行排序，设置 term 为有序因子\nterm_order &lt;- alluvial_data %&gt;%\n  group_by(Term) %&gt;%\n  summarise(total_count = sum(Count, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_count)) %&gt;%\n  pull(Term)\nalluvial_data$Term &lt;- factor(alluvial_data$Term, levels = term_order)\n# 重新获取 group 的有序标签\ngroup_labels &lt;- levels(alluvial_data$Group)\ngroup_labels &lt;- c(\"BP\", \"MF\", \"CC\", \"Nervous system\", \"Immune system\", \"Lipid metabolism\", \"Other KEGG\")\nterm_labels &lt;- levels(alluvial_data$Term)\n\np1 &lt;- ggplot(\n  alluvial_data,\n  aes(axis1 = Source, axis2 = Group, axis3 = Term, y = 1)) +\n  geom_alluvium(aes(fill = Group), width = 1/12, alpha = 0.8) +\n  geom_stratum(width = 1/12, fill = \"grey\", color = \"black\") +\n  scale_fill_manual(values = c(\n    \"BP\" = \"#33ad37\",\"MF\" = \"#f2c867\",\"CC\" = \"#d45327\", \n    \"Nervous system\" = \"#2eb6aa\", \"Immune system\" = \"#3e4999\", \n    \"Lipid metabolism\" = \"#4fc1e4\", \"Other KEGG\" = \"#e0c4ce\")) +\n  geom_text(stat = \"stratum\", aes(label = ifelse(\n    after_stat(stratum) %in% group_labels, after_stat(stratum),\n    ifelse(after_stat(stratum) %in% term_labels, after_stat(stratum), \"\")\n    )), size = 3) +\n  scale_x_discrete(\n    limits = c(\"Source\", \"Group\", \"Term\"),\n    labels = c(\"Source\", \"Group\", \"term\"), expand = c(.05, .05)) +\n  labs(title = NULL, y = NULL, x = NULL) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.margin = margin(5, 5, 5, 5), # 这里和 p2 保持一致\n    panel.grid = element_blank()\n    ) +\n  guides(fill = \"none\")\n\np1\n\n\n\n\n\n\n\n图 1: 桑基图\n\n\n\n\n\n\n\n2. 气泡图\n\n# 气泡图（Term标签只在右侧）\n# 先准备 term_levels，确保顺序和 y 轴一致\nterm_levels &lt;- levels(alluvial_data$Term)\n# 生成气泡图数据\nalluvial_data &lt;- result %&gt;%\n  mutate(Group = ifelse(Source == \"KEGG\", KEGG_Group, GO_Group)) %&gt;%\n  select(Source, Group, Term, Count, FDR, FoldEnrichment, MainCategory)\n\np2 &lt;- ggplot(alluvial_data, aes(x = log2(FoldEnrichment), y = Term)) +\n  # 虚线棒：从 x = min_x - offset 到 x = log2(FoldEnrichment)\n  geom_segment(aes(\n    x = min(log2(FoldEnrichment), na.rm = TRUE) - 0.5,\n    xend = log2(FoldEnrichment),\n    y = Term, yend = Term),\n    linetype = \"dashed\", color = \"grey50\") +\n  # 左侧标签\n  geom_text(aes(\n    x = min(log2(FoldEnrichment), na.rm = TRUE) - 0.2,\n    label = Term\n    ), hjust = 1, size = 3) +\n  # 气泡\n  geom_point(aes(size = Count, color = -log10(FDR))) +\n  scale_y_discrete(limits = rev(term_levels), position = \"right\") +\n  scale_color_gradient(low = \"#4659a7\", high = \"#de4f30\") +\n  labs(title = NULL, x = \"log2(FoldEnrichment)\", y = NULL, color = \"-log10(FDR)\") +\n  theme_minimal() +\n  theme(\n    axis.text.y.left = element_blank(),\n    axis.text.y.right = element_blank(), # 右侧不显示标签\n    axis.title.y = element_blank(),\n    plot.margin = margin(5, 5, 5, 0),\n    panel.grid.major.y = element_blank()\n    )\n\np2\n\n\n\n\n\n\n\n图 2: 气泡图\n\n\n\n\n\n\n\n3. 拼接\n\ncombined_plot &lt;- p1 + p2 + plot_layout(widths = c(1.5, 2), guides = \"collect\")\nprint(combined_plot)\n\n\n\n\n\n\n\n图 3: 拼接"
  },
  {
    "objectID": "Hiplot/056-flowerplot.html",
    "href": "Hiplot/056-flowerplot.html",
    "title": "花瓣图",
    "section": "",
    "text": "绘制多集合花瓣图。",
    "crumbs": [
      "HIPLOT",
      "Flower plot"
    ]
  },
  {
    "objectID": "Hiplot/056-flowerplot.html#环境配置",
    "href": "Hiplot/056-flowerplot.html#环境配置",
    "title": "花瓣图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: flowerplot; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"flowerplot\", quietly = TRUE)) {\n  install_github(\"dongwei1220/flowerplot\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(flowerplot)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Flower plot"
    ]
  },
  {
    "objectID": "Hiplot/056-flowerplot.html#数据准备",
    "href": "Hiplot/056-flowerplot.html#数据准备",
    "title": "花瓣图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/056-flowerplot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n     Set1   Set2  Set3  Set4   Set5    Set6   Set7     Set8\n1   ZMIZ1  ADCY5  TNS1  TNS1   TNS1   ZMIZ1 SORBS1     RGS3\n2    TNS1  ACTN4 ZMIZ1 ZMIZ1  ZMIZ1    TNS1   TNS1    FHOD3\n3   CASZ1 SORBS1  RXRA  RXRA TSPAN9   CASZ1  ZMIZ1 PPARGC1B\n4    NFIC   TNS1 AHDC1 NCOR2   MIDN    NFIC  RBM20     NNMT\n5 CACNA1C  ZMIZ1 ACTN4  MIDN  NCOR2 CACNA1C TSPAN9   SORBS2\n6   AHDC1  RBM20  MIDN AHDC1  AHDC1   AHDC1  SYNPO   FAM53B",
    "crumbs": [
      "HIPLOT",
      "Flower plot"
    ]
  },
  {
    "objectID": "Hiplot/056-flowerplot.html#可视化",
    "href": "Hiplot/056-flowerplot.html#可视化",
    "title": "花瓣图",
    "section": "可视化",
    "text": "可视化\n\n# 花瓣图\np &lt;- as.ggplot(function(){\n  flowerplot(\n    flower_dat = data,\n    angle = 90,\n    a = 0.5,\n    b = 2,\n    r = 1,\n    ellipse_col = \"RdBu\",\n    circle_col = \"#FFFFFF\",\n    label_text_cex = 1\n  )})\n\np\n\n\n\n\n\n\n\n图 1: 花瓣图",
    "crumbs": [
      "HIPLOT",
      "Flower plot"
    ]
  },
  {
    "objectID": "Hiplot/051-eulerr.html",
    "href": "Hiplot/051-eulerr.html",
    "title": "比例韦恩图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: eulerr; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"eulerr\", quietly = TRUE)) {\n  install.packages(\"eulerr\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(eulerr)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Eulerr Plot"
    ]
  },
  {
    "objectID": "Hiplot/051-eulerr.html#环境配置",
    "href": "Hiplot/051-eulerr.html#环境配置",
    "title": "比例韦恩图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: eulerr; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"eulerr\", quietly = TRUE)) {\n  install.packages(\"eulerr\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(eulerr)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Eulerr Plot"
    ]
  },
  {
    "objectID": "Hiplot/051-eulerr.html#数据准备",
    "href": "Hiplot/051-eulerr.html#数据准备",
    "title": "比例韦恩图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/051-eulerr-data.txt\", header = T)\n\n# 整理数据格式\ngenes &lt;- as.numeric(data[, 2])\nnames(genes) &lt;- as.character(data[, 1])\neuler_set &lt;- euler(genes)\n  \n# 查看数据\nhead(data)\n\n      Term Value\n1       SE    13\n2    Treat    28\n3 Anti-CCP   101\n4    DAS28    91\n5 SE&Treat     1\n6 SE&DAS28    14",
    "crumbs": [
      "HIPLOT",
      "Eulerr Plot"
    ]
  },
  {
    "objectID": "Hiplot/051-eulerr.html#可视化",
    "href": "Hiplot/051-eulerr.html#可视化",
    "title": "比例韦恩图",
    "section": "可视化",
    "text": "可视化\n\n# 比例韦恩图\nfill &lt;- c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\",\"#631879FF\",\"#008280FF\",\"#BB0021FF\",\n          \"#5F559BFF\",\"#A20056FF\")\np &lt;- as.ggplot(\n  plot(euler_set,\n    labels = list(col = rep(\"white\", length(genes))),\n    fills = list(fill = fill),\n    quantities = list(type = c(\"percent\", \"counts\"),\n    col = rep(\"white\", length(genes))),\n    main = \"Eulerr\")\n)\n\np\n\n\n\n\n\n\n\n图 1: 比例韦恩图",
    "crumbs": [
      "HIPLOT",
      "Eulerr Plot"
    ]
  },
  {
    "objectID": "Hiplot/020-chord.html",
    "href": "Hiplot/020-chord.html",
    "title": "弦图",
    "section": "",
    "text": "复杂的数据关系交互作用以和弦图的形式表现出来。",
    "crumbs": [
      "HIPLOT",
      "Chord Plot"
    ]
  },
  {
    "objectID": "Hiplot/020-chord.html#环境配置",
    "href": "Hiplot/020-chord.html#环境配置",
    "title": "弦图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: circlize; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"circlize\", quietly = TRUE)) {\n  install.packages(\"circlize\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(circlize)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Chord Plot"
    ]
  },
  {
    "objectID": "Hiplot/020-chord.html#数据准备",
    "href": "Hiplot/020-chord.html#数据准备",
    "title": "弦图",
    "section": "数据准备",
    "text": "数据准备\n基因与通路或基因本体相互作用的数据框架或矩阵。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/020-chord-data.txt\", header = T)\n\n# 整理数据格式\nrow.names(data) &lt;- data[, 1]\ndata &lt;- data[, -1]\ndata &lt;- as.matrix(data)\n\n# 查看数据\nhead(data)\n\n   E1 E2 E3 E4 E5\nS1  4 16 12 18 11\nS2  7 11  2 15 10\nS3  9  2 17 16 11\nS4 14  9 12  3 17\nS5  1  1  7  1 12\nS6 10 18  9 13  9",
    "crumbs": [
      "HIPLOT",
      "Chord Plot"
    ]
  },
  {
    "objectID": "Hiplot/020-chord.html#可视化",
    "href": "Hiplot/020-chord.html#可视化",
    "title": "弦图",
    "section": "可视化",
    "text": "可视化\n\n# 弦图\nPalette &lt;- c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\",\"#F39B7FFF\",\n             \"#8491B4FF\",\"#91D1C2FF\",\"#DC0000FF\",\"#7E6148FF\",\"#B09C85FF\")\ngrid.col &lt;- c(Palette, Palette, Palette[1:5])\np &lt;- as.ggplot(function() {\n  chordDiagram(\n    data, grid.col = grid.col, grid.border = NULL, transparency = 0.5,\n    row.col = NULL, column.col = NULL,  order = NULL,\n    directional = 0, # 1, -1, 0, 2\n    direction.type = \"diffHeight\", # diffHeight and arrows\n    diffHeight = convert_height(2, \"mm\"), reduce = 1e-5, xmax = NULL, \n    self.link = 2, symmetric = FALSE, keep.diagonal = FALSE, \n    preAllocateTracks = NULL,\n    annotationTrack = c(\"name\", \"grid\", \"axis\"),\n    annotationTrackHeight = convert_height(c(3, 3), \"mm\"),\n    link.border = NA, link.lwd = par(\"lwd\"), link.lty = par(\"lty\"), \n    link.sort = FALSE, link.decreasing = TRUE, link.largest.ontop = FALSE,\n    link.visible = T, link.rank = NULL, link.overlap = FALSE,\n    scale = F, group = NULL, big.gap = 10, small.gap = 1\n    )\n  })\n\np\n\n\n\n\n\n\n\n图 1: 弦图",
    "crumbs": [
      "HIPLOT",
      "Chord Plot"
    ]
  },
  {
    "objectID": "Hiplot/018-calibration-curve.html",
    "href": "Hiplot/018-calibration-curve.html",
    "title": "校准曲线",
    "section": "",
    "text": "校准曲线用于评估一致性/校准，即预测值和实际值之间的差异。",
    "crumbs": [
      "HIPLOT",
      "Calibration Curve"
    ]
  },
  {
    "objectID": "Hiplot/018-calibration-curve.html#环境配置",
    "href": "Hiplot/018-calibration-curve.html#环境配置",
    "title": "校准曲线",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: survival; rms; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"survival\", quietly = TRUE)) {\n  install.packages(\"survival\")\n}\nif (!requireNamespace(\"rms\", quietly = TRUE)) {\n  install.packages(\"rms\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(survival)\nlibrary(rms)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Calibration Curve"
    ]
  },
  {
    "objectID": "Hiplot/018-calibration-curve.html#数据准备",
    "href": "Hiplot/018-calibration-curve.html#数据准备",
    "title": "校准曲线",
    "section": "数据准备",
    "text": "数据准备\n多列数据的数据帧（数字允许NA）。ie生存数据（状态为0和1）。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/018-calibration-curve-data.txt\", header = T)\n\n# 整理数据格式\nres.lrm &lt;- lrm(as.formula(paste(\n  \"status ~ \", \n  paste(colnames(data)[3:length(colnames(data))], collapse = \"+\"))),\n  data = data, x = TRUE, y = TRUE)\n\nlrm.cal &lt;- calibrate(res.lrm, method = \"boot\", B = length(rownames(data)))\n\n# 查看数据\nhead(data)\n\n  time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n1  306      2  74   1       1       90       100     1175      NA\n2  455      2  68   1       0       90        90     1225      15\n3 1010      1  56   1       0       90        90       NA      15\n4  210      2  57   1       1       90        60     1150      11\n5  883      2  60   1       0      100        90       NA       0\n6 1022      1  74   1       1       50        80      513       0",
    "crumbs": [
      "HIPLOT",
      "Calibration Curve"
    ]
  },
  {
    "objectID": "Hiplot/018-calibration-curve.html#可视化",
    "href": "Hiplot/018-calibration-curve.html#可视化",
    "title": "校准曲线",
    "section": "可视化",
    "text": "可视化\n\n# 校准曲线\np &lt;- as.ggplot(function() {\n  plot(lrm.cal,\n       xlab = \"Nomogram Predicted Survival\",\n       ylab = \"Actual Survival\",\n       main = \"Calibration Curve\"\n       )\n})\n\n\nn=168   Mean absolute error=0.063   Mean squared error=0.0048\n0.9 Quantile of absolute error=0.094\n\np\n\n\n\n\n\n\n\n图 1: 校准曲线",
    "crumbs": [
      "HIPLOT",
      "Calibration Curve"
    ]
  },
  {
    "objectID": "Hiplot/064-ggbetweenstats.html",
    "href": "Hiplot/064-ggbetweenstats.html",
    "title": "小提琴图（Betweenstats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Betweenstats"
    ]
  },
  {
    "objectID": "Hiplot/064-ggbetweenstats.html#环境配置",
    "href": "Hiplot/064-ggbetweenstats.html#环境配置",
    "title": "小提琴图（Betweenstats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Betweenstats"
    ]
  },
  {
    "objectID": "Hiplot/064-ggbetweenstats.html#数据准备",
    "href": "Hiplot/064-ggbetweenstats.html#数据准备",
    "title": "小提琴图（Betweenstats）",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/064-ggbetweenstats-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"mpaa\", \"length\", \"genre\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = unique(data[, axis[1]]))\ndata[, axis[3]] &lt;- factor(data[, axis[3]], levels = unique(data[, axis[3]]))\n\n# 查看数据\nhead(data)\n\n                                                                 title year\n1                       Lord of the Rings: The Return of the King, The 2003\n2                   Lord of the Rings: The Fellowship of the Ring, The 2001\n3                               Lord of the Rings: The Two Towers, The 2002\n4                                                            Star Wars 1977\n5                       Star Wars: Episode V - The Empire Strikes Back 1980\n6 Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb 1964\n  length budget rating  votes  mpaa  genre\n1    251   94.0    9.0 103631 PG-13 Action\n2    208   93.0    8.8 157608 PG-13 Action\n3    223   94.0    8.8 114797 PG-13 Action\n4    125   11.0    8.8 134640    PG Action\n5    129   18.0    8.8 103706    PG Action\n6     93    1.8    8.7  63471    PG Comedy",
    "crumbs": [
      "HIPLOT",
      "Betweenstats"
    ]
  },
  {
    "objectID": "Hiplot/064-ggbetweenstats.html#可视化",
    "href": "Hiplot/064-ggbetweenstats.html#可视化",
    "title": "小提琴图（Betweenstats）",
    "section": "可视化",
    "text": "可视化\n\n# 小提琴图\ng &lt;- unique(data[,axis[3]])\nplist &lt;- list()\nfor (i in 1:length(g)) {\n  fil &lt;- data[,axis[3]] == g[i]\n  plist[[i]] &lt;- ggbetweenstats(\n    data = data[fil,], x = mpaa, y = length,\n    title= paste('', axis[3], g[i], sep = ':'),\n    p.adjust.method = \"holm\",\n    plot.type = \"boxviolin\",\n    pairwise.comparisons = T,\n    pairwise.display = \"significant\",\n    effsize.type = \"unbiased\",\n    notch = T,\n    type = \"parametric\",\n    plotgrid.args = list(ncol = 2)) +\n    scale_color_manual(values = c(\"#00468BFF\",\"#ED0000FF\",\"#42B540FF\"))\n}\np &lt;- plot_grid(plotlist = plist, ncol = 2)\n\np\n\n\n\n\n\n\n\n图 1: 小提琴图",
    "crumbs": [
      "HIPLOT",
      "Betweenstats"
    ]
  },
  {
    "objectID": "Hiplot/061-gene-rank.html",
    "href": "Hiplot/061-gene-rank.html",
    "title": "基因差异表达排序图",
    "section": "",
    "text": "基因表达排序可视化。",
    "crumbs": [
      "HIPLOT",
      "Gene Ranking Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/061-gene-rank.html#环境配置",
    "href": "Hiplot/061-gene-rank.html#环境配置",
    "title": "基因差异表达排序图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggrepel; ggplot2; RColorBrewer\n\n\n# 安装包\nif (!requireNamespace(\"ggrepel\", quietly = TRUE)) {\n  install.packages(\"ggrepel\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"RColorBrewer\", quietly = TRUE)) {\n  install.packages(\"RColorBrewer\")\n}\n\n# 加载包\nlibrary(ggrepel)\nlibrary(ggplot2)\nlibrary(RColorBrewer)",
    "crumbs": [
      "HIPLOT",
      "Gene Ranking Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/061-gene-rank.html#数据准备",
    "href": "Hiplot/061-gene-rank.html#数据准备",
    "title": "基因差异表达排序图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/061-gene-rank-data.txt\", header = T)\n\n# 整理数据格式\n## 按 log2FoldChange 和 pvalue 排序\ndata &lt;- data[order(-data$log2FC, data$pvalue), ]\n## 添加 rank 列\ndata$rank &lt;- 1:nrow(data)\n## 获取 top n 上调和下调基因进行标记\ntop_n &lt;- 5\ntop_n_up &lt;- rownames(head(data, top_n))\ntop_n_down &lt;- rownames(tail(data, top_n))\ngenes_to_label &lt;- c(top_n_up, top_n_down)\ndata2 &lt;- data[genes_to_label, ]\n\n\n# 查看数据\nhead(data)\n\n        gene   log2FC       pvalue rank\n514 LOC91370 3.889820 8.478310e-03    1\n293   LRRC25 3.492413 5.000000e-05    2\n470   BEGAIN 3.312996 3.347634e-03    3\n159   RDM1P5 3.125070 1.538852e-02    4\n194    CLDN1 3.096516 2.622163e-02    5\n626    KCNS1 2.949729 2.770000e-09    6",
    "crumbs": [
      "HIPLOT",
      "Gene Ranking Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/061-gene-rank.html#可视化",
    "href": "Hiplot/061-gene-rank.html#可视化",
    "title": "基因差异表达排序图",
    "section": "可视化",
    "text": "可视化\n\n# 基因差异表达排序图\np &lt;- \n  ggplot(data, aes(rank, log2FC, color = pvalue, size = abs(log2FC))) + \n  geom_point() + \n  scale_color_gradientn(colours = colorRampPalette(brewer.pal(11,'RdYlBu'))(100)) +\n  geom_hline(yintercept = c(-1, 1), linetype = 2, size = 0.3) +\n  geom_hline(yintercept = 0, linetype = 1, size = 0.5) +\n  geom_vline(xintercept = median(data$rank), linetype = 2, size = 0.3) + \n  geom_text_repel(data = data2, aes(rank, log2FC, label = gene),\n                  size = 3, color = \"red\") +\n  xlab(\"\") + ylab(\"\") + \n  ylim(c(-max(abs(data$log2FC)), max(abs(data$log2FC)))) +\n  labs(color = \"Pvalue\", size = \"Log2FoldChange\") +\n  theme_bw(base_size = 12) +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 基因差异表达排序图",
    "crumbs": [
      "HIPLOT",
      "Gene Ranking Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/014-bivariate.html",
    "href": "Hiplot/014-bivariate.html",
    "title": "双变量图",
    "section": "",
    "text": "展示双变量关系。",
    "crumbs": [
      "HIPLOT",
      "Bivariate Chart"
    ]
  },
  {
    "objectID": "Hiplot/014-bivariate.html#环境配置",
    "href": "Hiplot/014-bivariate.html#环境配置",
    "title": "双变量图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GGally\n\n\n# 安装包\nif (!requireNamespace(\"GGally\", quietly = TRUE)) {\n  install.packages(\"GGally\")\n}\n\n# 加载包\nlibrary(GGally)",
    "crumbs": [
      "HIPLOT",
      "Bivariate Chart"
    ]
  },
  {
    "objectID": "Hiplot/014-bivariate.html#数据准备",
    "href": "Hiplot/014-bivariate.html#数据准备",
    "title": "双变量图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/014-bivariate-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  total_bill  tip gender smoker day   time size\n1      16.99 1.01 Female     No Sun Dinner    2\n2      10.34 1.66   Male     No Sun Dinner    3\n3      21.01 3.50   Male     No Sun Dinner    3\n4      23.68 3.31   Male     No Sun Dinner    2\n5      24.59 3.61 Female     No Sun Dinner    4\n6      25.29 4.71   Male     No Sun Dinner    4",
    "crumbs": [
      "HIPLOT",
      "Bivariate Chart"
    ]
  },
  {
    "objectID": "Hiplot/014-bivariate.html#可视化",
    "href": "Hiplot/014-bivariate.html#可视化",
    "title": "双变量图",
    "section": "可视化",
    "text": "可视化\n\n# 双变量图\np &lt;- ggbivariate(data, outcome = \"smoker\", \n                 explanatory = c(\"day\",\"time\",\"gender\",\"tip\")) +\n  ggtitle(\"Bivariate\") +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\")) +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 双变量图",
    "crumbs": [
      "HIPLOT",
      "Bivariate Chart"
    ]
  },
  {
    "objectID": "Hiplot/005-barplot-errorbar.html",
    "href": "Hiplot/005-barplot-errorbar.html",
    "title": "误差线柱状图",
    "section": "",
    "text": "带误差线和误差组的条形图。",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar)"
    ]
  },
  {
    "objectID": "Hiplot/005-barplot-errorbar.html#环境配置",
    "href": "Hiplot/005-barplot-errorbar.html#环境配置",
    "title": "误差线柱状图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; Rmisc; ggpubr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"Rmisc\", quietly = TRUE)) {\n  install.packages(\"Rmisc\")\n}\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n\n# 加载包\nlibrary(ggplot2)\nlibrary(Rmisc)\nlibrary(ggpubr)",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar)"
    ]
  },
  {
    "objectID": "Hiplot/005-barplot-errorbar.html#数据准备",
    "href": "Hiplot/005-barplot-errorbar.html#数据准备",
    "title": "误差线柱状图",
    "section": "数据准备",
    "text": "数据准备\n数据表:\n第一列: (数值) Y 轴值。\n第二列: (数值或字符串) X 轴类别。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/005-barplot-errorbar-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\ndata_sd &lt;- summarySE(data, measurevar = colnames(data)[1], groupvars = colnames(data)[2])\n\n# 查看数据\nhead(data_sd)\n\n    class N score       sd       se       ci\n1    math 4 63.50 3.109126 1.554563 4.947314\n2 chinese 4 73.75 2.986079 1.493039 4.751518\n3 english 4 83.25 2.362908 1.181454 3.759914",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar)"
    ]
  },
  {
    "objectID": "Hiplot/005-barplot-errorbar.html#可视化",
    "href": "Hiplot/005-barplot-errorbar.html#可视化",
    "title": "误差线柱状图",
    "section": "可视化",
    "text": "可视化\n\n# 误差线柱状图\np &lt;- ggplot(data_sd, aes(x = data_sd[, 1], y = data_sd[, 3], fill = data_sd[, 1])) +\n  geom_bar(stat = \"identity\", color = \"black\", \n           position = position_dodge(), alpha = 1) +\n  geom_errorbar(aes(ymin = data_sd[, 3] - sd, ymax = data_sd[, 3] + sd),\n                width = 0.2,\n                position = position_dodge(0.9)) +\n  labs(title = \"Barplot (errorbar)\", x = colnames(data_sd)[1], \n       y = colnames(data_sd)[3], fill = colnames(data_sd)[1]) +\n  geom_jitter(data = data, aes(data[, 2], data[, 1], fill = data[, 2]), size = 2, fill = \"black\", pch = 19, width = 0.2) +\n  stat_compare_means(data = data, aes(data[, 2], data[, 1], fill = data[, 2]),\n                     label = \"p.format\", ref.group = \".all.\", vjust = 1, \n                     method = \"t.test\") +\n  scale_fill_manual(values = c(\"#E64B35FF\",\"#4DBBD5FF\",\"#00A087FF\",\"#3C5488FF\")) +\n  theme_bw() +\n  ylim(0,100) +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 误差线柱状图",
    "crumbs": [
      "HIPLOT",
      "Barplot (errorbar)"
    ]
  },
  {
    "objectID": "Hiplot/063-ggbarstats.html",
    "href": "Hiplot/063-ggbarstats.html",
    "title": "堆叠条形图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Barstats"
    ]
  },
  {
    "objectID": "Hiplot/063-ggbarstats.html#环境配置",
    "href": "Hiplot/063-ggbarstats.html#环境配置",
    "title": "堆叠条形图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Barstats"
    ]
  },
  {
    "objectID": "Hiplot/063-ggbarstats.html#数据准备",
    "href": "Hiplot/063-ggbarstats.html#数据准备",
    "title": "堆叠条形图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/063-ggbarstats-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"relig\", \"partyid\", \"race\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = rev(unique(data[, axis[1]])))\ndata[, axis[2]] &lt;- factor(data[, axis[2]], levels = unique(data[, axis[2]]))\ndata[, axis[3]] &lt;- factor(data[, axis[3]], levels = unique(data[, axis[3]]))\n\n# 查看数据\nhead(data)\n\n  year       marital age  race        rincome            partyid      relig\n1 2000 Never married  26 White  $8000 to 9999       Ind,near rep Protestant\n2 2000      Divorced  48 White  $8000 to 9999 Not str republican Protestant\n3 2000       Widowed  67 White Not applicable        Independent Protestant\n4 2000      Divorced  25 White Not applicable   Not str democrat       None\n5 2000       Married  25 White $20000 - 24999    Strong democrat Protestant\n6 2000      Divorced  44 White  $7000 to 7999       Ind,near dem Protestant\n              denom tvhours\n1  Southern baptist      12\n2  Baptist-dk which      NA\n3   No denomination       2\n4    Not applicable       1\n5  Southern baptist      NA\n6 Lutheran-mo synod      NA",
    "crumbs": [
      "HIPLOT",
      "Barstats"
    ]
  },
  {
    "objectID": "Hiplot/063-ggbarstats.html#可视化",
    "href": "Hiplot/063-ggbarstats.html#可视化",
    "title": "堆叠条形图",
    "section": "可视化",
    "text": "可视化\n\n# 堆叠条形图\ng &lt;- unique(data[,axis[3]])\nplist &lt;- list()\nfor (i in 1:length(g)) {\n  fil &lt;- data[,axis[3]] == g[i]\n  plist[[i]] &lt;- ggbarstats(\n    data = data[fil,], x = relig, y = partyid,\n    plotgrid.args = list(ncol = 1), paired = F, k = 2) +\n    scale_fill_manual(values = c(\"#00468BFF\",\"#ED0000FF\",\"#42B540FF\"))\n}\np &lt;- plot_grid(plotlist = plist, ncol = 1)\n\np\n\n\n\n\n\n\n\n图 1: 堆叠条形图",
    "crumbs": [
      "HIPLOT",
      "Barstats"
    ]
  },
  {
    "objectID": "Hiplot/074-ggseqlogo.html",
    "href": "Hiplot/074-ggseqlogo.html",
    "title": "序列 Logo",
    "section": "",
    "text": "序列 Logo 是一种用来描述结合位点序列模式的图形。",
    "crumbs": [
      "HIPLOT",
      "Seqlogo"
    ]
  },
  {
    "objectID": "Hiplot/074-ggseqlogo.html#环境配置",
    "href": "Hiplot/074-ggseqlogo.html#环境配置",
    "title": "序列 Logo",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggseqlogo; ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggseqlogo\", quietly = TRUE)) {\n  install.packages(\"ggseqlogo\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggseqlogo)\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Seqlogo"
    ]
  },
  {
    "objectID": "Hiplot/074-ggseqlogo.html#数据准备",
    "href": "Hiplot/074-ggseqlogo.html#数据准备",
    "title": "序列 Logo",
    "section": "数据准备",
    "text": "数据准备\n载入数据为多个转录因子在多个基因上的结合位点的序列。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/074-ggseqlogo-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[, !sapply(data, function(x) {all(is.na(x))})]\ndata &lt;- as.list(data)\ndata &lt;- lapply(data, function(x) {return(x[!is.na(x)])})\n\n# 查看数据\nstr(data)\n\nList of 12\n $ MA0001.1: chr [1:97] \"CCATATATAG\" \"CCATATATAG\" \"CCATAAATAG\" \"CCATAAATAG\" ...\n $ MA0002.1: chr [1:26] \"AATTGTGGTTA\" \"ATCTGTGGTTA\" \"AATTGTGGTAA\" \"TTCTGCGGTTA\" ...\n $ MA0004.1: chr [1:20] \"CACGTG\" \"CACGTG\" \"CACGTG\" \"CACGTG\" ...\n $ MA0005.1: chr [1:90] \"CCTAATTGGGC\" \"CCTAATTTGGC\" \"CCTAATCGGGC\" \"CCTAATCGGGC\" ...\n $ MA0006.1: chr [1:24] \"CGCGTG\" \"CGCGTG\" \"CGCGTG\" \"CGCGTG\" ...\n $ MA0007.1: chr [1:24] \"AAAAGTACACCCTGTACCGACA\" \"CTAAGCACACCGTGTCCCAGTC\" \"TTAAGAACACTCTGTACGACAC\" \"AGTAGAACATAATGTTCCGACA\" ...\n $ MA0008.1: chr [1:25] \"CAATTATT\" \"CAATTATT\" \"CAATTATT\" \"CAATTATT\" ...\n $ MA0009.1: chr [1:40] \"CTAGGTGTGAA\" \"CTAGGTGTGAA\" \"CTAGGTGTGAA\" \"CTAGGTGTGAA\" ...\n $ MA0010.1: chr [1:9] \"CTAATTGGCAAATG\" \"ATAATAAACAAAAC\" \"GACATAGACAAGAC\" \"GTCTTTCACAAATA\" ...\n $ MA0011.1: chr [1:12] \"AACTATTT\" \"TGCTAGTT\" \"TCCTAGTT\" \"TTCTATTC\" ...\n $ MA0012.1: chr [1:12] \"TAAACTTGTTG\" \"TAAACTAAAGC\" \"TCAACTAGGAT\" \"TAAACAAAACC\" ...\n $ MA0013.1: chr [1:6] \"TTGTGAAAGAC\" \"AAGTAAACTAA\" \"TAATAAACAAA\" \"TAATAAACAAA\" ...",
    "crumbs": [
      "HIPLOT",
      "Seqlogo"
    ]
  },
  {
    "objectID": "Hiplot/074-ggseqlogo.html#可视化",
    "href": "Hiplot/074-ggseqlogo.html#可视化",
    "title": "序列 Logo",
    "section": "可视化",
    "text": "可视化\n\n# 序列 Logo\np &lt;- ggseqlogo(\n  data,\n  ncol = 4,\n  col_scheme = \"nucleotide\",\n  seq_type = \"dna\",\n  method = \"bits\") + \n  theme(plot.title = element_text(hjust = 0.5))\n\np\n\n\n\n\n\n\n\n图 1: 序列 Logo\n\n\n\n\n\n采用 bits 计算的方式将一个结合位点序列展示在图表一列，可以清晰观测到不同序列占比较大的碱基。",
    "crumbs": [
      "HIPLOT",
      "Seqlogo"
    ]
  },
  {
    "objectID": "Hiplot/043-diverging-scale.html",
    "href": "Hiplot/043-diverging-scale.html",
    "title": "双侧标准化图",
    "section": "",
    "text": "双侧标准化图是一种将连续的，定量的输入映射到连续的固定的插值器上的图形。",
    "crumbs": [
      "HIPLOT",
      "Diverging Scale"
    ]
  },
  {
    "objectID": "Hiplot/043-diverging-scale.html#环境配置",
    "href": "Hiplot/043-diverging-scale.html#环境配置",
    "title": "双侧标准化图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggcharts\n\n\n# 安装包\nif (!requireNamespace(\"ggcharts\", quietly = TRUE)) {\n  install.packages(\"ggcharts\")\n}\n\n# 加载包\nlibrary(ggcharts)",
    "crumbs": [
      "HIPLOT",
      "Diverging Scale"
    ]
  },
  {
    "objectID": "Hiplot/043-diverging-scale.html#数据准备",
    "href": "Hiplot/043-diverging-scale.html#数据准备",
    "title": "双侧标准化图",
    "section": "数据准备",
    "text": "数据准备\n导入数据第一列为模型名称列表，其余列输入相关指标及对应数值。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/043-diverging-scale-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- dplyr::transmute(.data = data, x = model, y = scale(hp))\n\n# 查看数据\nhead(data)\n\n                  x          y\n1         Mazda RX4 -0.6130929\n2     Mazda RX4 Wag -0.6130929\n3        Datsun 710 -0.9123057\n4    Hornet 4 Drive -0.6130929\n5 Hornet Sportabout  0.5309561\n6           Valiant -0.7010967",
    "crumbs": [
      "HIPLOT",
      "Diverging Scale"
    ]
  },
  {
    "objectID": "Hiplot/043-diverging-scale.html#可视化",
    "href": "Hiplot/043-diverging-scale.html#可视化",
    "title": "双侧标准化图",
    "section": "可视化",
    "text": "可视化\n\n1.条形图\n\n# 双侧条形图\nfill_colors &lt;- c(\"#C20B01\", \"#196ABD\")\nfill_colors &lt;- fill_colors[c(any(data[, \"y\"] &gt; 0), any(data[, \"y\"] &lt; 0))]\np &lt;- diverging_bar_chart(data = data, x = x, y = y, bar_colors = fill_colors,\n                         text_color = '#000000') + \n  theme(axis.text.x = element_text(color = \"#000000\"),\n        axis.title.x = element_text(colour = \"#000000\"),\n        axis.title.y = element_text(colour = \"#000000\"),\n        plot.background = element_blank()) + \n  labs(x = \"model\", y = \"scale(hp)\", title = \"\")\n\np\n\n\n\n\n\n\n\n图 1: 双侧条形图\n\n\n\n\n\n图示横轴表示hp数据，纵轴表示模型名称（分类），红色表示超过平均值的模型，蓝色表示低于平均值的模型，数据是按照大小赋值于 2 的比例尺上面。\n\n\n2.棒棒糖图\n\n# 双侧棒棒糖图\nfill_colors &lt;- c(\"#C20B01\", \"#196ABD\")\nfill_colors &lt;- fill_colors[c(any(data[, \"y\"] &gt; 0), any(data[, \"y\"] &lt; 0))]\np &lt;- diverging_lollipop_chart(\n  data = data, x = x, y = y, lollipop_colors = fill_colors,\n  line_size = 0.3, point_size = 1.9, text_color = '#000000') + \n  theme(axis.text.x = element_text(color = \"#000000\"),\n        axis.title.x = element_text(colour = \"#000000\"),\n        axis.title.y = element_text(colour = \"#000000\"),\n        plot.background = element_blank()) + \n  labs(x = \"model\", y = \"scale(hp)\", title = \"\")\n\np\n\n\n\n\n\n\n\n图 2: 双侧棒棒糖图",
    "crumbs": [
      "HIPLOT",
      "Diverging Scale"
    ]
  },
  {
    "objectID": "Hiplot/075-ggwithinstats.html",
    "href": "Hiplot/075-ggwithinstats.html",
    "title": "复杂小提琴图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Complex-Violin"
    ]
  },
  {
    "objectID": "Hiplot/075-ggwithinstats.html#环境配置",
    "href": "Hiplot/075-ggwithinstats.html#环境配置",
    "title": "复杂小提琴图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Complex-Violin"
    ]
  },
  {
    "objectID": "Hiplot/075-ggwithinstats.html#数据准备",
    "href": "Hiplot/075-ggwithinstats.html#数据准备",
    "title": "复杂小提琴图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/075-ggwithinstats-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"condition\", \"desire\", \"region\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = unique(data[, axis[1]]))\ndata[, axis[3]] &lt;- factor(data[, axis[3]], levels = unique(data[, axis[3]]))\n\n# 查看数据\nstr(data)\n\n'data.frame':   172 obs. of  6 variables:\n $ subject  : int  1 2 3 4 5 6 7 8 9 11 ...\n $ gender   : chr  \"Female\" \"Female\" \"Female\" \"Female\" ...\n $ region   : Factor w/ 2 levels \"North America\",..: 1 1 2 1 1 2 1 1 1 1 ...\n $ education: chr  \"some\" \"advance\" \"college\" \"college\" ...\n $ condition: Factor w/ 2 levels \"LDLF\",\"LDHF\": 1 1 1 1 1 1 1 1 1 1 ...\n $ desire   : num  6 10 5 6 3 2 10 10 9.5 0 ...",
    "crumbs": [
      "HIPLOT",
      "Complex-Violin"
    ]
  },
  {
    "objectID": "Hiplot/075-ggwithinstats.html#可视化",
    "href": "Hiplot/075-ggwithinstats.html#可视化",
    "title": "复杂小提琴图",
    "section": "可视化",
    "text": "可视化\n\n# 复杂小提琴图\ng &lt;- unique(data[,axis[3]])\nplist &lt;- list()\nfor (i in 1:length(g)) {\n  fil &lt;- data[,axis[3]] == g[i]\n  plist[[i]] &lt;- ggwithinstats(\n    data = data[fil,], x = condition, y = desire,\n    title= paste('', axis[3], g[i], sep = ':'),\n    p.adjust.method = \"holm\",\n    plot.type = \"boxviolin\",\n    pairwise.comparisons = T,\n    pairwise.display = \"significant\",\n    effsize.type = \"unbiased\",\n    notch = T,\n    type = \"parametric\",\n    k = 2,\n    plotgrid.args = list(ncol = 2)\n  ) +\n    scale_color_manual(values = c(\"#3B4992FF\",\"#EE0000FF\"))\n}\n\nplot_grid(plotlist = plist, ncol = 2)\n\n\n\n\n\n\n\n图 1: 复杂小提琴图",
    "crumbs": [
      "HIPLOT",
      "Complex-Violin"
    ]
  },
  {
    "objectID": "Hiplot/039-density-histogram.html",
    "href": "Hiplot/039-density-histogram.html",
    "title": "密度图-直方图",
    "section": "",
    "text": "使用密度图或直方图展示数据分布。",
    "crumbs": [
      "HIPLOT",
      "Density-Histogram"
    ]
  },
  {
    "objectID": "Hiplot/039-density-histogram.html#环境配置",
    "href": "Hiplot/039-density-histogram.html#环境配置",
    "title": "密度图-直方图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: grafify; dplyr\n\n\n# 安装包\nif (!requireNamespace(\"grafify\", quietly = TRUE)) {\n  install.packages(\"grafify\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\n\n# 加载包\nlibrary(grafify)\nlibrary(dplyr)",
    "crumbs": [
      "HIPLOT",
      "Density-Histogram"
    ]
  },
  {
    "objectID": "Hiplot/039-density-histogram.html#数据准备",
    "href": "Hiplot/039-density-histogram.html#数据准备",
    "title": "密度图-直方图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/039-density-histogram-data.txt\", header = T)\n\n# 整理数据格式\ny &lt;- \"Doubling_time\"\ngroup &lt;- \"Student\"\ndata[, group] &lt;- factor(data[, group], levels = unique(data[, group]))\ndata &lt;- data %&gt;% \n  mutate(median = median(get(y), na.rm = TRUE),\n         mean = mean(get(y), na.rm = TRUE))\n\n# 查看数据\nhead(data)\n\n  Experiment Student Doubling_time facet   median     mean\n1       Exp1       A      17.36765    F1 20.18114 19.91642\n2       Exp1       B      18.04119    F1 20.18114 19.91642\n3       Exp1       C      18.70120    F1 20.18114 19.91642\n4       Exp1       D      20.06762    F1 20.18114 19.91642\n5       Exp1       E      20.19807    F2 20.18114 19.91642\n6       Exp1       F      22.11908    F2 20.18114 19.91642",
    "crumbs": [
      "HIPLOT",
      "Density-Histogram"
    ]
  },
  {
    "objectID": "Hiplot/039-density-histogram.html#可视化",
    "href": "Hiplot/039-density-histogram.html#可视化",
    "title": "密度图-直方图",
    "section": "可视化",
    "text": "可视化\n\n1. 密度图\n\n# 密度图\np &lt;- plot_density(\n  data = data, \n  ycol = get(y), \n  group = get(group),\n  linethick = 0.5,\n  c_alpha = 0.6) + \n  ggtitle(\"Density Plot\") + \n  geom_vline(aes_string(xintercept = \"median\"),\n        colour = 'black', linetype = 2, size = 0.5) + \n  xlab(y) + \n  ylab(\"density\") + \n  guides(fill = guide_legend(title = group), color = FALSE) +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 密度图\n\n\n\n\n\n\n\n2. 直方图\n\n# 直方图\np &lt;- plot_histogram(\n  data = data, \n  ycol = get(y), \n  group = get(group),\n  linethick = 0.5,\n  BinSize = 30)  + \n  ggtitle(\"Histogram Plot\") + \n  geom_vline(aes_string(xintercept = \"median\"),\n        colour = 'black', linetype = 2, size = 0.5) + \n  xlab(y) + \n  ylab(\"density\") + \n  guides(fill = guide_legend(title = group), color = FALSE) +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 2: 直方图",
    "crumbs": [
      "HIPLOT",
      "Density-Histogram"
    ]
  },
  {
    "objectID": "Hiplot/015-boxplot.html",
    "href": "Hiplot/015-boxplot.html",
    "title": "箱式图",
    "section": "",
    "text": "箱形图是一种通过四分位数图形象化地描述一组数据分布特征的方法。",
    "crumbs": [
      "HIPLOT",
      "Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/015-boxplot.html#环境配置",
    "href": "Hiplot/015-boxplot.html#环境配置",
    "title": "箱式图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggpubr)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/015-boxplot.html#数据准备",
    "href": "Hiplot/015-boxplot.html#数据准备",
    "title": "箱式图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为数据集 (不同治疗方案的治疗效果数据)。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/015-boxplot-data.txt\", header = T)\n\n# 整理数据格式\ngroups &lt;- unique(data[, 2])\nmy_comparisons &lt;- combn(groups, 2, simplify = FALSE)\nmy_comparisons &lt;- lapply(my_comparisons, as.character)\n\n# 查看数据\nhead(data)\n\n  Value Group1 Group2\n1   4.2    low treat1\n2  11.5    low treat1\n3   7.3    low treat1\n4   5.8    low treat1\n5   6.4    low treat1\n6  10.0    low treat1",
    "crumbs": [
      "HIPLOT",
      "Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/015-boxplot.html#可视化",
    "href": "Hiplot/015-boxplot.html#可视化",
    "title": "箱式图",
    "section": "可视化",
    "text": "可视化\n\n# 箱式图\np &lt;- ggboxplot(data, x = \"Group1\", y = \"Value\", notch = F, facet.by = \"Group2\",\n               add = \"point\", color = \"Group1\", xlab = \"Group2\", ylab = \"Value\",\n               palette = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\"),\n               title = \"Box Plot\") +\n  stat_compare_means(comparisons = my_comparisons, label = \"p.format\", \n                     method = \"t.test\") +\n  scale_y_continuous(expand = expansion(mult = c(0.1, 0.1))) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 箱式图\n\n\n\n\n\n横坐标表示几组不同的数据，纵坐标分别表示各组数据的四分位数；即方框上、中、下的横线分别代表上四分位数，中位数，下四分位数；上下方线段代表的数值分别指数据最大值和最小值，方框以外的点代表离群值。图示上方数值表示两两变量间的 P 值，可认为治疗方案 1 中，中剂量组同低剂量组疗效有显著差异，以此类推。",
    "crumbs": [
      "HIPLOT",
      "Boxplot"
    ]
  },
  {
    "objectID": "Hiplot/033-corrplot.html",
    "href": "Hiplot/033-corrplot.html",
    "title": "相关性热图 (Corrplot)",
    "section": "",
    "text": "相关性热图是一种分析多个变量，两两之间相关性的图形。",
    "crumbs": [
      "HIPLOT",
      "Corrplot"
    ]
  },
  {
    "objectID": "Hiplot/033-corrplot.html#环境配置",
    "href": "Hiplot/033-corrplot.html#环境配置",
    "title": "相关性热图 (Corrplot)",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: corrplot; ggcorrplot; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"corrplot\", quietly = TRUE)) {\n  install.packages(\"corrplot\")\n}\nif (!requireNamespace(\"ggcorrplot\", quietly = TRUE)) {\n  install.packages(\"ggcorrplot\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(corrplot)\nlibrary(ggcorrplot)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Corrplot"
    ]
  },
  {
    "objectID": "Hiplot/033-corrplot.html#数据准备",
    "href": "Hiplot/033-corrplot.html#数据准备",
    "title": "相关性热图 (Corrplot)",
    "section": "数据准备",
    "text": "数据准备\n载入数据为基因名称及每个样本的表达量。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/033-corrplot-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[!is.na(data[, 1]), ]\nidx &lt;- duplicated(data[, 1])\ndata[idx, 1] &lt;- paste0(data[idx, 1], \"--dup-\", cumsum(idx)[idx])\nrownames(data) &lt;- data[, 1]\ndata &lt;- data[, -1]\nstr2num_df &lt;- function(x) {\n  final &lt;- NULL\n  for (i in seq_len(ncol(x))) {\n    final &lt;- cbind(final, as.numeric(x[, i]))\n  }\n  colnames(final) &lt;- colnames(x)\n  return(final)\n}\ntmp &lt;- str2num_df(t(data))\ncorr &lt;- round(cor(tmp, use = \"na.or.complete\", method = \"pearson\"), 3)\np_mat &lt;- round(cor_pmat(tmp, method = \"pearson\"), 3)\n\n# 查看数据\nhead(data)\n\n             M1       M2       M3       M4       M5       M6        M7       M8\nRGL4   8.454808 8.019389 8.990836 9.718631 7.908075 4.147051  4.985084 4.576711\nMPP7   8.690520 8.630346 7.080873 9.838476 8.271824 5.179200  5.200868 3.266993\nUGCG   8.648366 8.600555 9.431046 7.923021 8.309214 4.902510  5.750804 4.492856\nCYSTM1 8.628884 9.238677 8.487243 8.958537 7.357109 4.541605  6.370533 4.246651\nANXA2  4.983769 6.748022 6.220791 4.719403 3.284346 8.089850 10.637472 7.214912\nENDOD1 5.551640 5.406465 4.663785 3.550765 4.103507 8.393991  9.538503 9.069923\n             M9      M10\nRGL4   4.930349 4.293700\nMPP7   5.565226 4.300309\nUGCG   4.659987 3.306275\nCYSTM1 4.745769 3.449627\nANXA2  9.002710 5.123359\nENDOD1 8.639664 7.106392",
    "crumbs": [
      "HIPLOT",
      "Corrplot"
    ]
  },
  {
    "objectID": "Hiplot/033-corrplot.html#可视化",
    "href": "Hiplot/033-corrplot.html#可视化",
    "title": "相关性热图 (Corrplot)",
    "section": "可视化",
    "text": "可视化\n\n# 相关性热图 (Corrplot)\np &lt;- as.ggplot(function(){\n  corrplot(\n    corr, \n    method = \"circle\", \n    type = \"upper\",\n    tl.col = \"black\", \n    diag = F,\n    col = colorRampPalette(c(\"#4477AA\", \"#FFFFFF\", \"#BB4444\"))(200),\n    order = \"hclust\",\n    hclust.method = \"ward.D2\")\n  }) +\n  xlab(\"\") + ylab(\"\") +\n  ggtitle(\"Cor Heatmap Plot\") +\n  theme_void() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_blank(), axis.text.y = element_blank(),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\np\n\n\n\n\n\n\n\n图 1: 相关性热图 (Corrplot)\n\n\n\n\n\n红色系表示两个基因之间呈正相关，蓝色系表示两个基因之间呈负相关，每一格中的数字表示相关系数。",
    "crumbs": [
      "HIPLOT",
      "Corrplot"
    ]
  },
  {
    "objectID": "Hiplot/055-fishplot.html",
    "href": "Hiplot/055-fishplot.html",
    "title": "鱼形图",
    "section": "",
    "text": "克隆演化分析。",
    "crumbs": [
      "HIPLOT",
      "Fishplot"
    ]
  },
  {
    "objectID": "Hiplot/055-fishplot.html#环境配置",
    "href": "Hiplot/055-fishplot.html#环境配置",
    "title": "鱼形图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: fishplot\n\n\n# 安装包\nif (!requireNamespace(\"fishplot\", quietly = TRUE)) {\n  install_github(\"chrisamiller/fishplot\")\n}\n\n# 加载包\nlibrary(fishplot)",
    "crumbs": [
      "HIPLOT",
      "Fishplot"
    ]
  },
  {
    "objectID": "Hiplot/055-fishplot.html#数据准备",
    "href": "Hiplot/055-fishplot.html#数据准备",
    "title": "鱼形图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/055-fishplot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  timepoints parents sample.name event1 event2 event3 event4\n1          0       0     Sample1    100      2      2     98\n2         30       1     Sample1     45      0      0      0\n3         75       1     Sample1      0      0      2     95\n4        150       3     Sample1      0      0      1     40\n\n\n\ntimepoints：为矩阵的每一列指定时间点\nparents：指定克隆之间的父母关系\nsamplename：样品名称（支持多个样品）\nother：包含所有时间点所有克隆的肿瘤比例估计值的数值矩阵",
    "crumbs": [
      "HIPLOT",
      "Fishplot"
    ]
  },
  {
    "objectID": "Hiplot/055-fishplot.html#可视化",
    "href": "Hiplot/055-fishplot.html#可视化",
    "title": "鱼形图",
    "section": "可视化",
    "text": "可视化\n\n## 创建一个 fish 对象\nfish = createFishObject(as.matrix(data[,4:7]), parents=data$parents, \n                        timepoints=data$timepoints, \n                        col = c(\"#888888\",\"#e8130c\",\"#f8150d\",\"#55158f\"))\n## 计算绘图的布局\nfish = layoutClones(fish)\n## 使用 splining 方法绘制图（推荐），并提供标签和绘图标题的时间点\nfishPlot(fish,shape=\"spline\", title.btm=\"Sample1\", title = \"Fishplot\",\n         cex.title=1, vlines=c(0,30,75,150), \n         vlab=c(\"Day 0\",\"Day 30\",\"Day 75\",\"Day 150\"))\n\n\n\n\n\n\n\n图 1: 鱼形图",
    "crumbs": [
      "HIPLOT",
      "Fishplot"
    ]
  },
  {
    "objectID": "Hiplot/076-ggwordcloud.html",
    "href": "Hiplot/076-ggwordcloud.html",
    "title": "ggplot2 词云",
    "section": "",
    "text": "词云是通过形成“关键字云层”或“关键字渲染”来可视化Web文本中经常出现的“关键字”。",
    "crumbs": [
      "HIPLOT",
      "ggwordcloud"
    ]
  },
  {
    "objectID": "Hiplot/076-ggwordcloud.html#环境配置",
    "href": "Hiplot/076-ggwordcloud.html#环境配置",
    "title": "ggplot2 词云",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggwordcloud\n\n\n# 安装包\nif (!requireNamespace(\"ggwordcloud\", quietly = TRUE)) {\n  install.packages(\"ggwordcloud\")\n}\n\n# 加载包\nlibrary(ggwordcloud)",
    "crumbs": [
      "HIPLOT",
      "ggwordcloud"
    ]
  },
  {
    "objectID": "Hiplot/076-ggwordcloud.html#数据准备",
    "href": "Hiplot/076-ggwordcloud.html#数据准备",
    "title": "ggplot2 词云",
    "section": "数据准备",
    "text": "数据准备\n加载数据名词和名词频率。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/076-ggwordcloud-data.txt\", header = T)\ninmask &lt;- \"files/Hiplot/076-ggwordcloud-hearth.png\"\n\n# 整理数据格式\ncol &lt;- data[, 2]\ndata &lt;- cbind(data, col)\n\n# 查看数据\nhead(data)\n\n    word freq col\n1    oil   85  85\n2   said   73  73\n3 prices   48  48\n4   opec   42  42\n5    mln   31  31\n6    the   26  26",
    "crumbs": [
      "HIPLOT",
      "ggwordcloud"
    ]
  },
  {
    "objectID": "Hiplot/076-ggwordcloud.html#可视化",
    "href": "Hiplot/076-ggwordcloud.html#可视化",
    "title": "ggplot2 词云",
    "section": "可视化",
    "text": "可视化\n\n# ggplot2 词云\np &lt;- ggplot(data, aes(label = word, size = freq, color = col)) +\n  scale_size_area(max_size = 40) +\n  theme_minimal() + \n  geom_text_wordcloud_area(mask = png::readPNG(inmask), rm_outside = TRUE) +\n  scale_color_gradient(low = \"#8B0000\", high = \"#FF0000\")\n\np\n\n\n\n\n\n\n\n图 1: ggplot2 词云\n\n\n\n\n\n根据名词的频率在词云图中显示名词的比例。",
    "crumbs": [
      "HIPLOT",
      "ggwordcloud"
    ]
  },
  {
    "objectID": "Hiplot/069-ggpiestats-group.html",
    "href": "Hiplot/069-ggpiestats-group.html",
    "title": "分组饼状图（ggpiestats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Piestats Group"
    ]
  },
  {
    "objectID": "Hiplot/069-ggpiestats-group.html#环境配置",
    "href": "Hiplot/069-ggpiestats-group.html#环境配置",
    "title": "分组饼状图（ggpiestats）",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Piestats Group"
    ]
  },
  {
    "objectID": "Hiplot/069-ggpiestats-group.html#数据准备",
    "href": "Hiplot/069-ggpiestats-group.html#数据准备",
    "title": "分组饼状图（ggpiestats）",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/069-ggpiestats-group-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"genre\", \"mpaa\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = unique(data[, axis[1]]))\ndata[, axis[2]] &lt;- factor(data[, axis[2]], levels = unique(data[, axis[2]]))\n\n# 查看数据\nhead(data)\n\n                                               title year length budget rating\n1                          Shawshank Redemption, The 1994    142     25    9.1\n2     Lord of the Rings: The Return of the King, The 2003    251     94    9.0\n3 Lord of the Rings: The Fellowship of the Ring, The 2001    208     93    8.8\n4             Lord of the Rings: The Two Towers, The 2002    223     94    8.8\n5                                       Pulp Fiction 1994    168      8    8.8\n6                                   Schindler's List 1993    195     25    8.8\n   votes  mpaa  genre\n1 149494     R  Drama\n2 103631 PG-13 Action\n3 157608 PG-13 Action\n4 114797 PG-13 Action\n5 132745     R  Drama\n6  97667     R  Drama",
    "crumbs": [
      "HIPLOT",
      "Piestats Group"
    ]
  },
  {
    "objectID": "Hiplot/069-ggpiestats-group.html#可视化",
    "href": "Hiplot/069-ggpiestats-group.html#可视化",
    "title": "分组饼状图（ggpiestats）",
    "section": "可视化",
    "text": "可视化\n\n# 分组饼状图\ng &lt;- unique(data[,axis[2]])\nplist &lt;- list()\nfor (i in 1:length(g)) {\n  fil &lt;- data[,axis[2]] == g[i]\n  plist[[i]] &lt;- \n    ggpiestats(\n      data = data[fil,], x = genre, \n      title= paste('', axis[2], g[i], sep = ':'),\n      plotgrid.args = list(ncol = 3),\n      label.repel = TRUE,\n      k = 2\n    ) +\n    scale_fill_manual(values = c(\"#3B4992FF\",\"#EE0000FF\",\"#008B45FF\",\"#631879FF\",\n                                 \"#008280FF\",\"#BB0021FF\",\"#5F559BFF\",\"#A20056FF\",\n                                 \"#808180FF\"))\n}\n\nplot_grid(plotlist = plist, ncol = 3)\n\n\n\n\n\n\n\n图 1: 分组饼状图",
    "crumbs": [
      "HIPLOT",
      "Piestats Group"
    ]
  },
  {
    "objectID": "Hiplot/080-grdotplot.html",
    "href": "Hiplot/080-grdotplot.html",
    "title": "分组排序点图",
    "section": "",
    "text": "不同组别连续变量样本值及分布比较。",
    "crumbs": [
      "HIPLOT",
      "Group Rank Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/080-grdotplot.html#环境配置",
    "href": "Hiplot/080-grdotplot.html#环境配置",
    "title": "分组排序点图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: sigminer; ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"sigminer\", quietly = TRUE)) {\n  install_github(\"ShixiangWang/sigminer\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(sigminer)\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Group Rank Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/080-grdotplot.html#数据准备",
    "href": "Hiplot/080-grdotplot.html#数据准备",
    "title": "分组排序点图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/080-grdotplot-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  gvar       dvar\n1    A  0.4871212\n2    A -0.1370275\n3    A  0.1717455\n4    A -0.9447939\n5    A -1.2876203\n6    A  1.4077657",
    "crumbs": [
      "HIPLOT",
      "Group Rank Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/080-grdotplot.html#可视化",
    "href": "Hiplot/080-grdotplot.html#可视化",
    "title": "分组排序点图",
    "section": "可视化",
    "text": "可视化\n\n# 分组排序点图\np &lt;- show_group_distribution(data, gvar = \"gvar\",  dvar = \"dvar\", \n                             order_by_fun = F)\n\np\n\n\n\n\n\n\n\n图 1: 分组排序点图",
    "crumbs": [
      "HIPLOT",
      "Group Rank Dotplot"
    ]
  },
  {
    "objectID": "Hiplot/025.complex-heatmap.html",
    "href": "Hiplot/025.complex-heatmap.html",
    "title": "复合热图",
    "section": "",
    "text": "一个多组学插件同时绘制热图、注释和突变信息。"
  },
  {
    "objectID": "Hiplot/025.complex-heatmap.html#环境配置",
    "href": "Hiplot/025.complex-heatmap.html#环境配置",
    "title": "复合热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ComplexHeatmap\", quietly = TRUE)) {\n  install.packages(\"ComplexHeatmap\")\n}\nif (!requireNamespace(\"circlize\", quietly = TRUE)) {\n  install.packages(\"circlize\")\n}\nif (!requireNamespace(\"randomcoloR\", quietly = TRUE)) {\n  install.packages(\"randomcoloR\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\nif (!requireNamespace(\"stringr\", quietly = TRUE)) {\n  install.packages(\"stringr\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\nif (!requireNamespace(\"hiplotlib\", quietly = TRUE)) {\n  remotes::install_github(\"hiplot/hiplotlib\")\n}\n\n# 加载包\nlibrary(ComplexHeatmap)\nlibrary(circlize)\nlibrary(randomcoloR)\nlibrary(ggplotify)\nlibrary(stringr)\nlibrary(cowplot)\nlibrary(hiplotlib)"
  },
  {
    "objectID": "Hiplot/025.complex-heatmap.html#数据准备",
    "href": "Hiplot/025.complex-heatmap.html#数据准备",
    "title": "复合热图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/025-complex-heatmap-data1.txt\", header = T)\ndata2 &lt;- read.delim(\"files/Hiplot/025-complex-heatmap-data2.txt\", header = T)\n\n# 整理数据格式\nkeep_vars_ref &lt;- ls() \nrow.names(data) &lt;- data[, 1]\ndata &lt;- data[, -1]\naxis_raw &lt;- c(\"KRAS\",\"GBP4\")\nexp_start_col &lt;- which(colnames(data) == axis_raw[2])\nmut_start_col &lt;- which(colnames(data) == axis_raw[1])\nheat_mat &lt;- as.matrix(t(data[, exp_start_col:ncol(data)]))\nmut_mat &lt;- as.matrix(t(data[, mut_start_col:(exp_start_col - 1)]))\nmut_mat[is.na(mut_mat)] &lt;- \"\"\n\ncolor_key &lt;- c(\"#196ABD\", \"#3399FF\", \"#3399FF\", \"#f4f4f4\", \"#f4f4f4\", \"#f4f4f4\", \"#FF3333\", \"#FF3333\", \"#C20B01\")\n\ncols &lt;- c()\nfor (i in 1:nrow(data2)) {\n  cols[data2[i,1]] &lt;- data2[i,2]\n}\ncol_meta &lt;- list()\ncol_meta_pre &lt;- list()\nitems &lt;- c()\nfor (i in 1:(mut_start_col - 1)) {\n  ref &lt;- unique(data[, i])\n  ref &lt;- ref[!is.na(ref) & ref != \"\"]\n  if (any(is.numeric(ref)) & length(ref) &gt; 2) {\n    col_meta_pre[[colnames(data)[i]]] &lt;- hiplotlib::col_fun_cont(data[,i])\n  } else if (length(ref) == 2 & any(is.numeric(ref))) {\n    col_meta_pre[[colnames(data)[i]]] &lt;- c(\"#f4f4f4\", \"#5a5a5a\")\n    items &lt;- c(items, ref)\n  } else if (length(ref) == 2 & any(is.character(ref))) {\n    col_meta_pre[[colnames(data)[i]]] &lt;- c(\"#196ABD\", \"#C20B01\")\n    items &lt;- c(items, unique(data[, i]))\n  } else if (length(unique(data[, i])) &gt; 2) {\n    col_meta_pre[[colnames(data)[i]]] &lt;- distinctColorPalette(\n      length(unique(data[, i]))\n    )\n    items &lt;- c(items, unique(data[, i]))\n  }\n}\nmeta_mat2 &lt;- NULL\nmeta_mat2_unique_names &lt;- c()\nmeta_mat2_unique_cols &lt;- c()\nfor (i in names(col_meta_pre)) {\n  if (!is.function(col_meta_pre[[i]])) {\n    meta_mat2_unique_names &lt;- c(meta_mat2_unique_names, i)\n    meta_mat2_unique_cols &lt;- c(meta_mat2_unique_cols, col_meta_pre[[i]])\n    meta_mat2 &lt;- cbind(meta_mat2, data[, i])\n    colnames(meta_mat2)[ncol(meta_mat2)] &lt;- i\n  } else {\n    col_meta[[i]] &lt;- col_meta_pre[[i]]\n  }\n}\nmeta_mat2 &lt;- as.matrix(meta_mat2)\ncol_meta[[\"Meta2\"]] &lt;- structure(\n  names = items[!duplicated(items)],\n  meta_mat2_unique_cols[!duplicated(items)]\n)\n\n# 查看数据\nhead(data)\n\n   Age Gender      Fusion Death Relapse     KRAS       TP53                NRAS\nM1  12 Female   ETV6-PMEL     0       0 missense       &lt;NA&gt; missense/frameshift\nM2   5   Male ETV6-BORCS5     0       1 missense       &lt;NA&gt;                &lt;NA&gt;\nM3  16 Female   ETV6-NID1     0       0 missense       &lt;NA&gt;                &lt;NA&gt;\nM4  26 Female     ERG-FUS     0       0     &lt;NA&gt;       &lt;NA&gt;                &lt;NA&gt;\nM5  32 Female RUNX1-UGGT2     1       0     &lt;NA&gt; frameshift                &lt;NA&gt;\nM6   1 Female  ETV6-RUNX1     1       1 missense       &lt;NA&gt;                &lt;NA&gt;\n         JAK1       JAK3       PTEN   NOTCH1      KMT2A               SETD2\nM1       &lt;NA&gt; frameshift       &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; missense/frameshift\nM2       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;                &lt;NA&gt;\nM3       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; missense   nonsense            nonsense\nM4       &lt;NA&gt;       &lt;NA&gt; proteinIns     &lt;NA&gt;       &lt;NA&gt;                &lt;NA&gt;\nM5       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; missense frameshift                &lt;NA&gt;\nM6 frameshift       &lt;NA&gt; proteinIns     &lt;NA&gt;       &lt;NA&gt;                &lt;NA&gt;\n        KDM6A     DNMT3A                        DDX3X     GBP4    BCAT1\nM1                  &lt;NA&gt;                         &lt;NA&gt; 6.599344 5.760380\nM2   nonsense       &lt;NA&gt;                         &lt;NA&gt; 5.226266 4.892783\nM3       &lt;NA&gt;       &lt;NA&gt;                         &lt;NA&gt; 3.693288 5.448924\nM4       &lt;NA&gt;       &lt;NA&gt;                         &lt;NA&gt; 3.938501 3.485413\nM5       &lt;NA&gt;       &lt;NA&gt;                         &lt;NA&gt; 4.527193 3.855669\nM6 proteinDel frameshift missense/frameshift/missense 9.308119 8.662081\n      CMPK2    STOX2    PADI2   SCARNA5 ALOX12P2  SNORA74B HIST1H2BL     MNDA\nM1 9.561905 8.396409 8.419766  7.653074 9.001421  5.538709  6.181270 8.702635\nM2 4.549168 8.717055 8.268430  5.780393 7.753542  7.169053  4.448419 7.322352\nM3 3.998655 8.039064 8.451181 10.633550 4.920960 11.441646  5.604961 9.271821\nM4 5.614384 7.643060 9.200732  5.913684 7.636354  5.982566  6.485168 9.134515\nM5 3.904793 9.274649 8.598207  8.805605 9.888625  8.394403  2.599574 8.339114\nM6 9.790770 4.417013 4.590033  5.890120 6.211944  4.751559  7.630177 4.571902\n      OLFM4     FLT3     CHD7    NFIL3   HSPA1B    AP5B1   IPCEF1     LRG1\nM1 9.345308 5.164306 8.373475 8.055416 5.008199 8.236820 8.263067 8.553083\nM2 6.438607 4.419355 8.728032 8.365100 9.194650 8.972639 9.287856 9.053322\nM3 8.716761 5.063551 8.408818 9.239194 6.598850 8.204217 8.602233 9.074509\nM4 9.685545 5.412784 8.716476 8.536825 7.129509 8.432428 8.491156 8.736700\nM5 7.688262 3.337863 8.373771 8.452351 3.885270 9.224007 8.447699 7.656333\nM6 5.969804 8.585164 4.613199 4.478527 5.712179 4.424204 4.483936 4.529944\n      THBS4     RGL4     MPP7     UGCG   CYSTM1    ANXA2   ENDOD1 ARHGAP24\nM1 8.881039 8.454808 8.690520 8.648366 8.628884 4.983769 5.551640 6.890079\nM2 8.896205 8.019389 8.630346 8.600555 9.238677 6.748022 5.406465 8.883941\nM3 7.844801 8.990836 7.080873 9.431046 8.487243 6.220791 4.663785 9.560651\nM4 8.739369 9.718631 9.838476 7.923021 8.958537 4.719403 3.550765 8.285674\nM5 8.627063 7.908075 8.271824 8.309214 7.357109 3.284346 4.103507 9.043752\nM6 4.699310 4.147051 5.179200 4.902510 4.541605 8.089850 8.393991 3.544010\n       CST7 HIST1H2BM     EREG     EMP1    NFAM1  SLC40A1     CD52 HIST1H2BH\nM1 7.883061  6.186908 8.598145 4.837475 8.656290 9.520822 4.230927  5.805177\nM2 8.546585  4.448803 4.920184 5.999576 9.957289 4.630086 5.932496  4.343197\nM3 8.364553  5.428771 9.227645 6.115168 7.319900 5.116486 5.011898  6.139380\nM4 9.540110  6.747681 5.222157 5.056323 8.073514 9.346003 5.101308  5.817530\nM5 8.697473  2.577579 4.689850 4.808930 9.016658 9.813192 4.398327  2.513284\nM6 3.557674  7.828233 8.703617 6.713164 4.517623 6.101416 6.380094  8.188458\n     PFKFB3 SNORD116.20    STX11    SYNE2     TCN1  SNORA74A     CD74   EIF4E3\nM1 7.424257    8.377058 8.338488 9.110726 8.193179  5.498904 5.017443 9.366888\nM2 9.676785    5.359553 8.565954 9.678361 8.907285  5.062103 5.383978 8.360189\nM3 8.935156    8.694841 8.767868 8.405612 8.713848 12.561499 3.405651 5.655052\nM4 8.045833    8.044567 9.403257 6.946242 8.980928  5.839202 3.264327 4.287721\nM5 8.890690    2.953568 7.892702 8.156073 7.627558  7.581051 5.602966 8.713765\nM6 4.273864    7.268419 4.205835 5.791007 4.626609  5.498296 8.550157 8.880801\n      MYO7B       MX1      LDLR    S100P  PTPRCAP      KIT     OLR1      NKG7\nM1 8.796115 10.739903  3.302395 8.356363 5.028667 5.888212 9.018682  7.312523\nM2 9.265837  4.504043 10.582430 7.915491 4.724011 2.533194 7.936957 10.372964\nM3 7.865640  4.714303  6.209913 9.481770 4.122229 5.077111 9.390897  7.937744\nM4 8.785320  6.244798  3.804214 9.642993 4.188948 4.744693 8.897994  8.161249\nM5 9.209703  4.891501  4.631391 8.363519 3.803051 4.839051 8.668925  9.671051\nM6 4.272202 10.727879  5.534046 3.699451 8.525159 9.085158 5.261595  4.164076"
  },
  {
    "objectID": "Hiplot/025.complex-heatmap.html#可视化",
    "href": "Hiplot/025.complex-heatmap.html#可视化",
    "title": "复合热图",
    "section": "可视化",
    "text": "可视化\n\n# 复合热图\nparams &lt;- list()\nfor (i in names(col_meta)) {\n  if (i != \"Meta2\") {\n    params[[i]] &lt;- data[, i]\n  }\n}\nparams2 &lt;- list(\n  Meta2 = meta_mat2,\n  gap = 0,\n  border = TRUE,\n  show_annotation_name = TRUE,\n  col = col_meta,\n  na_col = \"#FFFFFF\",\n  show_legend = FALSE,\n  annotation_legend_param = list(direction = \"horizontal\")\n)\nfor (i in names(params2)) {\n  params[[i]] &lt;- params2[[i]]\n}\nha &lt;- do.call(HeatmapAnnotation, params)\nhlist &lt;- Heatmap(heat_mat,\n      col = hiplotlib::col_fun_cont(heat_mat, cols = color_key),\n      name = \"Expression\",\n      gap = 0,\n      clustering_distance_columns = \"euclidean\",\n      clustering_distance_rows = \"euclidean\",\n      clustering_method_columns = \"ward.D2\",\n      show_row_dend = TRUE, show_column_dend = TRUE,\n      show_row_names = FALSE,\n      row_title_gp = gpar(col = \"#FFFFFF00\"),\n      cluster_rows = TRUE,\n      cluster_columns = TRUE,\n      bottom_annotation = ha,\n      show_heatmap_legend = TRUE,\n      heatmap_legend_param = list(direction = \"horizontal\")\n    )\np1 &lt;- as.ggplot(\n  function() {\n    draw(hlist, annotation_legend_side = \"right\", heatmap_legend_side = \"top\")\n  }\n)\nidx &lt;- sort(rowSums(!is.na(mut_mat) & mut_mat != \"0\" & mut_mat != \"\"), decreasing = TRUE)\nmut_mat &lt;- mut_mat[names(idx),]\n\np2 &lt;- as.ggplot(\n  function() {\n    params &lt;- list(\n      mut_mat,\n      get_type = function(x) strsplit(x, \"/\")[[1]],\n      alter_fun = hiplotlib::alter_fun, col = cols, row_order = 1:nrow(mut_mat),\n      show_column_names = TRUE,\n      show_pct = TRUE,\n      right_annotation = NULL,\n      top_annotation = NULL,\n      border = TRUE,\n      heatmap_legend_param = list(direction = \"horizontal\"),\n      show_heatmap_legend = FALSE)\n      params$column_order &lt;- unlist(column_order(hlist))\n      draw(do.call(oncoPrint, params), annotation_legend_side = \"bottom\", heatmap_legend_side = \"bottom\")\n    }\n  )\n\np3 &lt;- as.ggplot(function() {\n    legend_tmp &lt;- list()\n    for (i in names(col_meta_pre)) {\n      if (is.function(col_meta_pre[[i]])) {\n        legend_tmp[[i]] &lt;- Legend(\n          col_fun = col_meta_pre[[i]],\n          title = i, direction = \"horizontal\"\n        )\n      } else if (identical(col_meta_pre[[i]], c(\"#f4f4f4\", \"#5a5a5a\"))) {\n        legend_tmp[[i]] &lt;- Legend(\n          at = unique(data[, i]), title = i,\n          direction = \"horizontal\",\n          labels = c(\"No\", \"Yes\"),\n          legend_gp = gpar(fill = col_meta_pre[[i]])\n        )\n      } else {\n         legend_tmp[[i]] &lt;- Legend(\n          at = unique(data[, i]), title = i,\n          direction = \"horizontal\",\n          legend_gp = gpar(fill = col_meta_pre[[i]])\n        )\n      }\n    }\n    ref_mut &lt;- unique(unlist(str_split(mut_mat, \"/\")))\n    ref_mut &lt;- ref_mut[ref_mut != \"\" & ref_mut != \"NANA\"]\n    ref_mut &lt;- ref_mut[!is.na(ref_mut)]\n    lgd_mut &lt;- Legend(\n      at = ref_mut, title = \"Mutations\",\n      direction = \"horizontal\",\n      legend_gp = gpar(fill = cols[ref_mut])\n    )\n    legend_tmp[[length(legend_tmp) + 1]] &lt;- lgd_mut\n    legend_tmp$direction &lt;- \"horizontal\"\n    legend_tmp$max_width &lt;- unit(14, \"cm\")\n    legend_tmp$column_gap &lt;- unit(5, \"mm\")\n    legend_tmp$row_gap &lt;- unit(0.5, \"cm\")\n    draw(do.call(packLegend, legend_tmp))\n  })\nrel_height &lt;- as.numeric(str_split(\"4, 2, 2\", \", |,| |;\")[[1]])\np &lt;- plot_grid(p1, p2, p3, ncol = 1, rel_heights = rel_height)\np\n\n\n\n\n\n\n\n图 1: 复合热图"
  },
  {
    "objectID": "Hiplot/079-gocircle.html",
    "href": "Hiplot/079-gocircle.html",
    "title": "GO圈图",
    "section": "",
    "text": "GO圈图用于显示圆图结合了基因表达和基因注释富集数据。术语的子集与GOBar图一起显示与基因表达数据的散点图结合使用。整个图都在特定的坐标系上绘制，以实现圆形布局。该段标记为术语ID。",
    "crumbs": [
      "HIPLOT",
      "GOCircle Plot"
    ]
  },
  {
    "objectID": "Hiplot/079-gocircle.html#环境配置",
    "href": "Hiplot/079-gocircle.html#环境配置",
    "title": "GO圈图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GOplot; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"GOplot\", quietly = TRUE)) {\n  install.packages(\"GOplot\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(GOplot)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "GOCircle Plot"
    ]
  },
  {
    "objectID": "Hiplot/079-gocircle.html#数据准备",
    "href": "Hiplot/079-gocircle.html#数据准备",
    "title": "GO圈图",
    "section": "数据准备",
    "text": "数据准备\n加载的数据是具有七个列的GO富集的结果：category, GO id, GO term, gene count, gene name, logFC, adjust pvalue and zscore。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/079-gocircle-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"category\",\"ID\",\"term\",\"count\",\"genes\",\"logFC\",\"adj_pval\",\"zscore\")\ndata &lt;- data[!is.na(data$adj_pval),]\ndata$adj_pval &lt;- as.numeric(data$adj_pval)\ndata$zscore &lt;- as.numeric(data$zscore)\ndata$count &lt;- as.numeric(data$count)\n\n# 查看数据\nhead(data)\n\n  category         ID              term count  genes      logFC adj_pval\n1       BP GO:0007507 heart development    54   DLC1 -0.9707875 2.17e-06\n2       BP GO:0007507 heart development    54   NRP2 -1.5153173 2.17e-06\n3       BP GO:0007507 heart development    54   NRP1 -1.1412315 2.17e-06\n4       BP GO:0007507 heart development    54   EDN1  1.3813006 2.17e-06\n5       BP GO:0007507 heart development    54 PDLIM3 -0.8876939 2.17e-06\n6       BP GO:0007507 heart development    54   GJA1 -0.8179480 2.17e-06\n      zscore\n1 -0.8164966\n2 -0.8164966\n3 -0.8164966\n4 -0.8164966\n5 -0.8164966\n6 -0.8164966",
    "crumbs": [
      "HIPLOT",
      "GOCircle Plot"
    ]
  },
  {
    "objectID": "Hiplot/079-gocircle.html#可视化",
    "href": "Hiplot/079-gocircle.html#可视化",
    "title": "GO圈图",
    "section": "可视化",
    "text": "可视化\n\n# GO圈图\np &lt;- function () {\n  GOCircle(data, title = \"GO Enrichment Circleplot\",\n           nsub = 10, rad1 = 2, rad2 = 3, table.legend = T, label.size = 5,\n           zsc.col = c(\"#FC8D59\",\"#FFFFBF\",\"#99D594\")) + \n    theme(plot.title = element_text(hjust = 0.5))\n}\np &lt;- as.ggplot(p)\n\np\n\n\n\n\n\n\n\n图 1: GO圈图\n\n\n\n\n\n如示例图所示，外圈显示了分配基因的logFC的每个项的散点图。默认情况下，红色圆圈显示上调和蓝色的下调。",
    "crumbs": [
      "HIPLOT",
      "GOCircle Plot"
    ]
  },
  {
    "objectID": "Hiplot/088-histogram.html",
    "href": "Hiplot/088-histogram.html",
    "title": "直方图",
    "section": "",
    "text": "直方图是由一系列高度不等的纵向条纹或线段表示连续性变量数据的分布情况。",
    "crumbs": [
      "HIPLOT",
      "Histogram"
    ]
  },
  {
    "objectID": "Hiplot/088-histogram.html#环境配置",
    "href": "Hiplot/088-histogram.html#环境配置",
    "title": "直方图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Histogram"
    ]
  },
  {
    "objectID": "Hiplot/088-histogram.html#数据准备",
    "href": "Hiplot/088-histogram.html#数据准备",
    "title": "直方图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为数据集(不同治疗方案治疗效果数据)。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/088-histogram-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\n\n# 查看数据\nhead(data)\n\n  Value Group2\n1   4.2 treat1\n2  11.5 treat1\n3   7.3 treat1\n4   5.8 treat1\n5   6.4 treat1\n6  10.0 treat1",
    "crumbs": [
      "HIPLOT",
      "Histogram"
    ]
  },
  {
    "objectID": "Hiplot/088-histogram.html#可视化",
    "href": "Hiplot/088-histogram.html#可视化",
    "title": "直方图",
    "section": "可视化",
    "text": "可视化\n\n# 直方图\np &lt;- ggplot(data, aes(x=Value, fill=Group2)) +\n  geom_histogram(alpha = 1, bins = 12, col = \"white\") +\n  ggtitle(\"Histogram Plot\") +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 直方图\n\n\n\n\n\n图中长方形的宽度与组距成正比且可不相同，纵轴代表频数。",
    "crumbs": [
      "HIPLOT",
      "Histogram"
    ]
  },
  {
    "objectID": "Hiplot/059-gantt.html",
    "href": "Hiplot/059-gantt.html",
    "title": "甘特图",
    "section": "",
    "text": "甘特图是一种用来说明项目进度条形图。",
    "crumbs": [
      "HIPLOT",
      "Gantt"
    ]
  },
  {
    "objectID": "Hiplot/059-gantt.html#环境配置",
    "href": "Hiplot/059-gantt.html#环境配置",
    "title": "甘特图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: tidyverse; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(tidyverse)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Gantt"
    ]
  },
  {
    "objectID": "Hiplot/059-gantt.html#数据准备",
    "href": "Hiplot/059-gantt.html#数据准备",
    "title": "甘特图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为 4 个样本即四位患者，3 个项目即 3 种治疗方法，以及每种治疗方法的起止时间。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/059-gantt-data.txt\", header = T)\n\n# 整理数据格式\nusr_ylab &lt;- colnames(data)[1]\nif (!is.numeric(data[, 2])) {\n  data[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\n}\ndata_gather &lt;- gather(data, \"state\", \"date\", 3:4)\nsample &lt;- levels(data_gather$sample)\ndata_gather$sample &lt;- factor(data_gather$sample,\n  levels = rev(unique(data_gather$sample))\n)\n\n# 查看数据\nhead(data_gather)\n\n    sample   item state date\n1 patient1 treat1 start    1\n2 patient2 treat1 start    2\n3 patient2 treat2 start    5\n4 patient2 treat3 start    7\n5 patient3 treat3 start    6\n6 patient3 treat1 start    3",
    "crumbs": [
      "HIPLOT",
      "Gantt"
    ]
  },
  {
    "objectID": "Hiplot/059-gantt.html#可视化",
    "href": "Hiplot/059-gantt.html#可视化",
    "title": "甘特图",
    "section": "可视化",
    "text": "可视化\n\n# 甘特图\np &lt;- ggplot(data_gather, aes(date, sample, color = item)) +\n  geom_line(size = 10, alpha = 1) +\n  labs(x = \"Time\", y = \"sample\", title = \"Gantt Plot\") +\n  theme(axis.ticks = element_blank()) +\n  scale_color_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 甘特图\n\n\n\n\n\n横轴表示时间进度，纵轴表示 4 位患者，3 种颜色表示 3 种治疗方法，该图可以观测到每位患者不同治疗方法使用的时间进度。",
    "crumbs": [
      "HIPLOT",
      "Gantt"
    ]
  },
  {
    "objectID": "Hiplot/067-gghistostats.html",
    "href": "Hiplot/067-gghistostats.html",
    "title": "条形图（Histostats）",
    "section": "",
    "text": "展示数据分布及统计推断。",
    "crumbs": [
      "HIPLOT",
      "Histostats"
    ]
  },
  {
    "objectID": "Hiplot/067-gghistostats.html#环境配置",
    "href": "Hiplot/067-gghistostats.html#环境配置",
    "title": "条形图（Histostats）",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggstatsplot\n\n\n# 安装包\nif (!requireNamespace(\"ggstatsplot\", quietly = TRUE)) {\n  install.packages(\"ggstatsplot\")\n}\n\n# 加载包\nlibrary(ggstatsplot)",
    "crumbs": [
      "HIPLOT",
      "Histostats"
    ]
  },
  {
    "objectID": "Hiplot/067-gghistostats.html#数据准备",
    "href": "Hiplot/067-gghistostats.html#数据准备",
    "title": "条形图（Histostats）",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/067-gghistostats-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"budget\", \"genre\")\ndata[, axis[2]] &lt;- factor(data[, axis[2]], levels = unique(data[, axis[2]]))\n\n# 查看数据\nhead(data)\n\n                                                                 title year\n1                       Lord of the Rings: The Return of the King, The 2003\n2                   Lord of the Rings: The Fellowship of the Ring, The 2001\n3                               Lord of the Rings: The Two Towers, The 2002\n4                                                            Star Wars 1977\n5                       Star Wars: Episode V - The Empire Strikes Back 1980\n6 Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb 1964\n  length budget rating  votes  mpaa  genre\n1    251   94.0    9.0 103631 PG-13 Action\n2    208   93.0    8.8 157608 PG-13 Action\n3    223   94.0    8.8 114797 PG-13 Action\n4    125   11.0    8.8 134640    PG Action\n5    129   18.0    8.8 103706    PG Action\n6     93    1.8    8.7  63471    PG Comedy",
    "crumbs": [
      "HIPLOT",
      "Histostats"
    ]
  },
  {
    "objectID": "Hiplot/067-gghistostats.html#可视化",
    "href": "Hiplot/067-gghistostats.html#可视化",
    "title": "条形图（Histostats）",
    "section": "可视化",
    "text": "可视化\n\n# 条形图\np &lt;- grouped_gghistostats(\n  data = data, x = budget, grouping.var = genre,\n  effsize.type = \"unbiased\",\n  type = \"parametric\",\n  centrality.k = 2,\n  plotgrid.args = list(ncol = 2),\n  centrality.parameter = \"solid\",\n  centrality.line.args = list(size = 1, color = \"black\"),\n  bar.fill = \"#0D47A1\", \n  centrality.label.args = list(color = \"#0D47A1\", size = 3),\n  test.value = as.numeric(0),\n  normal.curve = F,\n  normal.curve.args = list(size = 1)\n)\n\np\n\n\n\n\n\n\n\n图 1: 条形图",
    "crumbs": [
      "HIPLOT",
      "Histostats"
    ]
  },
  {
    "objectID": "Hiplot/078-gobubble.html",
    "href": "Hiplot/078-gobubble.html",
    "title": "GO气泡图",
    "section": "",
    "text": "GO气泡图用于显示按z-score或adjusted p-value的负相对序列的Z-score彩色气泡图。",
    "crumbs": [
      "HIPLOT",
      "GOBubble Plot"
    ]
  },
  {
    "objectID": "Hiplot/078-gobubble.html#环境配置",
    "href": "Hiplot/078-gobubble.html#环境配置",
    "title": "GO气泡图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GOplot; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"GOplot\", quietly = TRUE)) {\n  install.packages(\"GOplot\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(GOplot)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "GOBubble Plot"
    ]
  },
  {
    "objectID": "Hiplot/078-gobubble.html#数据准备",
    "href": "Hiplot/078-gobubble.html#数据准备",
    "title": "GO气泡图",
    "section": "数据准备",
    "text": "数据准备\n加载的数据是具有七个列的GO富集的结果：category, GO id, GO term, gene count, gene name, logFC, adjust pvalue and zscore。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/078-gobubble-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"category\",\"ID\",\"term\",\"count\",\"genes\",\"logFC\",\"adj_pval\",\"zscore\")\ndata &lt;- data[data$category %in% c(\"BP\",\"CC\",\"MF\"),]\ndata &lt;- data[!is.na(data$adj_pval),]\ndata$adj_pval &lt;- as.numeric(data$adj_pval)\ndata$zscore &lt;- as.numeric(data$zscore)\n\n# 查看数据\nhead(data)\n\n  category         ID              term count  genes      logFC adj_pval\n1       BP GO:0007507 heart development    54   DLC1 -0.9707875 2.17e-06\n2       BP GO:0007507 heart development    54   NRP2 -1.5153173 2.17e-06\n3       BP GO:0007507 heart development    54   NRP1 -1.1412315 2.17e-06\n4       BP GO:0007507 heart development    54   EDN1  1.3813006 2.17e-06\n5       BP GO:0007507 heart development    54 PDLIM3 -0.8876939 2.17e-06\n6       BP GO:0007507 heart development    54   GJA1 -0.8179480 2.17e-06\n      zscore\n1 -0.8164966\n2 -0.8164966\n3 -0.8164966\n4 -0.8164966\n5 -0.8164966\n6 -0.8164966",
    "crumbs": [
      "HIPLOT",
      "GOBubble Plot"
    ]
  },
  {
    "objectID": "Hiplot/078-gobubble.html#可视化",
    "href": "Hiplot/078-gobubble.html#可视化",
    "title": "GO气泡图",
    "section": "可视化",
    "text": "可视化\n\n# GO气泡图\np &lt;- function () {\n  GOBubble(data, display = \"single\", title = \"GO Enrichment Bubbleplot\",\n           colour = c(\"#FC8D59\",\"#FFFFBF\",\"#99D594\"),\n           labels = 0,  ID = T, table.legend = T, table.col = T, bg.col = F) + \n  theme(plot.title = element_text(hjust = 0.5))\n}\np &lt;- as.ggplot(p)\n\np\n\n\n\n\n\n\n\n图 1: GO气泡图\n\n\n\n\n\n如示例图所示，图的x轴表示z-score。y轴上显示了 adjusted p-value 的负对数（对应于该 term 的重要性）。绘制圆圈的面积与分配给该 term 的基因数量成正比。每个圆都根据其类别进行着色，并用 ID 或 term 名称标记。",
    "crumbs": [
      "HIPLOT",
      "GOBubble Plot"
    ]
  },
  {
    "objectID": "Hiplot/084-group-line.html",
    "href": "Hiplot/084-group-line.html",
    "title": "分组折线图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Group Line"
    ]
  },
  {
    "objectID": "Hiplot/084-group-line.html#环境配置",
    "href": "Hiplot/084-group-line.html#环境配置",
    "title": "分组折线图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Group Line"
    ]
  },
  {
    "objectID": "Hiplot/084-group-line.html#数据准备",
    "href": "Hiplot/084-group-line.html#数据准备",
    "title": "分组折线图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/084-group-line-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  x        y names groups\n1 1 2.253573    L1      A\n2 2 2.231082    L1      A\n3 3 1.740380    L1      A\n4 4 2.255786    L1      A\n5 5 2.429561    L1      A\n6 6 1.951557    L1      A",
    "crumbs": [
      "HIPLOT",
      "Group Line"
    ]
  },
  {
    "objectID": "Hiplot/084-group-line.html#可视化",
    "href": "Hiplot/084-group-line.html#可视化",
    "title": "分组折线图",
    "section": "可视化",
    "text": "可视化\n\n# 分组折线图\np &lt;- ggplot(data, aes(x = x, y = y, group = names, color = groups)) +\n  geom_line() +\n  geom_point() +\n  scale_color_manual(values = c(\"#e04d39\",\"#5bbad6\")) +\n  theme_bw()\n\np\n\n\n\n\n\n\n\n图 1: 分组折线图",
    "crumbs": [
      "HIPLOT",
      "Group Line"
    ]
  },
  {
    "objectID": "Hiplot/087-hic-heatmap.html",
    "href": "Hiplot/087-hic-heatmap.html",
    "title": "Hi-C 热图",
    "section": "",
    "text": "Hi-C 热图用于显示不同染色体上的全基因组染色质与热图的相互作用。",
    "crumbs": [
      "HIPLOT",
      "Hi-C Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/087-hic-heatmap.html#环境配置",
    "href": "Hiplot/087-hic-heatmap.html#环境配置",
    "title": "Hi-C 热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; RColorBrewer\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"RColorBrewer\", quietly = TRUE)) {\n  install.packages(\"RColorBrewer\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(RColorBrewer)",
    "crumbs": [
      "HIPLOT",
      "Hi-C Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/087-hic-heatmap.html#数据准备",
    "href": "Hiplot/087-hic-heatmap.html#数据准备",
    "title": "Hi-C 热图",
    "section": "数据准备",
    "text": "数据准备\n加载的数据具有三个列，其中第一个用于一个基因座箱索引，第二个是另一个基因座箱索引的第二列，而这两个基因座之间的相互作用频率是第三个。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/087-hic-heatmap-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  index_bin1 index_bin2 freq\n1        135        428   13\n2        365        479   38\n3        209        340    8\n4        216        166   34\n5        288        484    5\n6        162        479   14",
    "crumbs": [
      "HIPLOT",
      "Hi-C Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/087-hic-heatmap.html#可视化",
    "href": "Hiplot/087-hic-heatmap.html#可视化",
    "title": "Hi-C 热图",
    "section": "可视化",
    "text": "可视化\n\n# Hi-C 热图\n## 计算bins的个数\nbins_num &lt;- max(data$index_bin1) + 1\n## 设置HiC数据的resolution\nresolution &lt;- 500\nres &lt;- resolution * 1000\n# 设置分隔单位,以50Mb为单位进行分隔\nintervals &lt;- 50\nspacing &lt;- intervals * 1000000\n## 计算breaks的数目\nbreaks_num &lt;- (res * bins_num) / spacing\n## 设置breaks\nbreaks &lt;- c()\nfor (i in 0:breaks_num) {\n  breaks &lt;- c(breaks, i * intervals)\n}\n\np &lt;- ggplot(data = data, aes(x = index_bin1 * res, y = index_bin2 * res)) +\n  geom_tile(aes(fill = freq)) +\n  scale_fill_gradientn(\n    colours = colorRampPalette(rev(brewer.pal(11,\"RdYlBu\")))(500),\n    limits = c(0, max(data$freq) * 1.2)\n  ) +\n  scale_y_reverse() +\n  scale_x_continuous(breaks = breaks * 1000000, labels = paste0(breaks, \"Mb\")) +\n  scale_y_continuous(breaks = breaks * 1000000, labels = paste0(breaks, \"Mb\")) +\n  theme(panel.grid = element_blank(), axis.title = element_blank()) +\n  labs(title = paste0(\"(resolution: \", res / 1000, \"Kb)\"), x=\"\", y=\"\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"right\", legend.key.size = unit(0.8, \"cm\"),\n        panel.grid = element_blank())\n\np\n\n\n\n\n\n\n\n图 1: Hi-C 热图\n\n\n\n\n\n示例图每个小格表示每个基因，颜色深浅表示该基因表达量大小，表达量越大颜色越深（红色为上调，绿色为下调）。每行表示每个基因在不同样本中的表达量状况，每列表示每个样本所有基因的表达量情况。上方树形图表示不同组群和年龄的不同样本的聚类分析结果，左侧树形图表示来自不同样本的不同基因的聚类分析结果。",
    "crumbs": [
      "HIPLOT",
      "Hi-C Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/012-beeswarm.html",
    "href": "Hiplot/012-beeswarm.html",
    "title": "蜜蜂群图",
    "section": "",
    "text": "蜜蜂群图是一种类似蜜蜂群，样本间互不干涉的列散点图。",
    "crumbs": [
      "HIPLOT",
      "Beeswarm"
    ]
  },
  {
    "objectID": "Hiplot/012-beeswarm.html#环境配置",
    "href": "Hiplot/012-beeswarm.html#环境配置",
    "title": "蜜蜂群图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggbeeswarm)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Beeswarm"
    ]
  },
  {
    "objectID": "Hiplot/012-beeswarm.html#数据准备",
    "href": "Hiplot/012-beeswarm.html#数据准备",
    "title": "蜜蜂群图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同分组及其数据。\n\n# 加载数据\ndata &lt;- read.table(\"files/Hiplot/012-beeswarm-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 1] &lt;- factor(data[, 1], levels = unique(data[, 1]))\ncolnames(data) &lt;- c(\"Group\", \"y\")\n\n# 查看数据\nhead(data)\n\n  Group   y\n1    G1 5.1\n2    G1 4.9\n3    G1 4.7\n4    G1 4.6\n5    G1 5.0\n6    G1 5.4",
    "crumbs": [
      "HIPLOT",
      "Beeswarm"
    ]
  },
  {
    "objectID": "Hiplot/012-beeswarm.html#可视化",
    "href": "Hiplot/012-beeswarm.html#可视化",
    "title": "蜜蜂群图",
    "section": "可视化",
    "text": "可视化\n\n# 蜜蜂群图\np &lt;- ggplot(data, aes(Group, y, color = Group)) +\n  geom_beeswarm(alpha = 1, size = 0.8) +\n  labs(x = NULL, y = \"value\") +\n  ggtitle(\"BeeSwarm Plot\") +\n  scale_color_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 蜜蜂群图\n\n\n\n\n\n不同颜色表示不同组群 ，点表示数据。",
    "crumbs": [
      "HIPLOT",
      "Beeswarm"
    ]
  },
  {
    "objectID": "Hiplot/027-contour-matrix.html",
    "href": "Hiplot/027-contour-matrix.html",
    "title": "等高线图 (矩阵)",
    "section": "",
    "text": "等高图（矩阵）是一种以二维形式展示三维数据的图形。",
    "crumbs": [
      "HIPLOT",
      "Contour (Matrix)"
    ]
  },
  {
    "objectID": "Hiplot/027-contour-matrix.html#环境配置",
    "href": "Hiplot/027-contour-matrix.html#环境配置",
    "title": "等高线图 (矩阵)",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; reshape2; ggisoband; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"reshape2\", quietly = TRUE)) {\n  install.packages(\"reshape2\")\n}\nif (!requireNamespace(\"ggisoband\", quietly = TRUE)) {\n  devtools::install_github(\"clauswilke/ggisoband\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(ggisoband)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "Contour (Matrix)"
    ]
  },
  {
    "objectID": "Hiplot/027-contour-matrix.html#数据准备",
    "href": "Hiplot/027-contour-matrix.html#数据准备",
    "title": "等高线图 (矩阵)",
    "section": "数据准备",
    "text": "数据准备\n载入数据为一个矩阵。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/027-contour-matrix-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- as.matrix(data)\ncolnames(data) &lt;- NULL\ndata3d &lt;- reshape2::melt(data)\nnames(data3d) &lt;- c(\"x\", \"y\", \"z\")\n\n# 查看数据\nhead(data3d)\n\n  x y   z\n1 1 1 101\n2 2 1 102\n3 3 1 103\n4 4 1 104\n5 5 1 105\n6 6 1 105",
    "crumbs": [
      "HIPLOT",
      "Contour (Matrix)"
    ]
  },
  {
    "objectID": "Hiplot/027-contour-matrix.html#可视化",
    "href": "Hiplot/027-contour-matrix.html#可视化",
    "title": "等高线图 (矩阵)",
    "section": "可视化",
    "text": "可视化\n\n# 等高线图 (矩阵)\ncomplex_general_theme &lt;- \n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np1 &lt;- ggplot(data3d, aes(x, y, z = z)) +\n  geom_isobands(\n    alpha = 1,\n    aes(color = stat(zmin)), fill = NA\n  ) +\n  scale_color_viridis_c() +\n  coord_cartesian(expand = FALSE) +\n  theme_bw() +\n  complex_general_theme\n\np2 &lt;- ggplot(data3d, aes(x, y, z = z)) +\n  geom_isobands(\n    alpha = 1,\n    aes(fill = stat(zmin)), color = NA\n  ) +\n  scale_fill_viridis_c(guide = \"legend\") +\n  coord_cartesian(expand = FALSE) +\n  theme_bw() +\n  complex_general_theme\n\nplot_grid(p1, p2, labels = c(\"A\", \"B\"), label_size = 12)\n\n\n\n\n\n\n\n图 1: 等高线图 (矩阵)\n\n\n\n\n\n黄色代表最高，深紫色代表最低，高度刻度范围是90-190。",
    "crumbs": [
      "HIPLOT",
      "Contour (Matrix)"
    ]
  },
  {
    "objectID": "Hiplot/008-barplot-gradient.html",
    "href": "Hiplot/008-barplot-gradient.html",
    "title": "渐变柱状图",
    "section": "",
    "text": "同气泡图相似，不过是在柱状图的基础上，用颜色渐变的长方形同时展示两个变量的可视化图形。",
    "crumbs": [
      "HIPLOT",
      "Barplot Gradient"
    ]
  },
  {
    "objectID": "Hiplot/008-barplot-gradient.html#环境配置",
    "href": "Hiplot/008-barplot-gradient.html#环境配置",
    "title": "渐变柱状图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; stringr\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"stringr\", quietly = TRUE)) {\n  install.packages(\"stringr\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(stringr)",
    "crumbs": [
      "HIPLOT",
      "Barplot Gradient"
    ]
  },
  {
    "objectID": "Hiplot/008-barplot-gradient.html#数据准备",
    "href": "Hiplot/008-barplot-gradient.html#数据准备",
    "title": "渐变柱状图",
    "section": "数据准备",
    "text": "数据准备\n案例数据，第一列为Go Term（Go语言编号），第二列为基因数，第三列输入pvalue。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/008-barplot-gradient-data.txt\", header = T)\n\n# 整理数据格式\ndata[, 1] &lt;- str_to_sentence(str_remove(data[, 1], pattern = \"\\\\w+:\\\\d+\\\\W\"))\ntopnum &lt;- 7\ndata &lt;- data[1:topnum, ]\ndata[, 1] &lt;- factor(data[, 1], level = rev(unique(data[, 1])))\n\n# 查看数据\nhead(data)\n\n                               Term Count   PValue\n1                   Immune response    20 9.61e-08\n2     Defense response to bacterium    11 3.02e-06\n3                   Cell chemotaxis     8 5.14e-06\n4                     Cell adhesion    17 2.73e-05\n5             Complement activation     8 3.56e-05\n6 Extracellular matrix organization    11 4.23e-05",
    "crumbs": [
      "HIPLOT",
      "Barplot Gradient"
    ]
  },
  {
    "objectID": "Hiplot/008-barplot-gradient.html#可视化",
    "href": "Hiplot/008-barplot-gradient.html#可视化",
    "title": "渐变柱状图",
    "section": "可视化",
    "text": "可视化\n\n# 渐变柱状图\np &lt;- ggplot(data, aes(x = Term, y = Count, fill = -log10(PValue))) +\n  geom_bar(stat = \"identity\") +\n  ggtitle(\"GO BarPlot\") +\n  scale_fill_continuous(low = \"#00438E\", high = \"#E43535\") +\n  scale_x_discrete(labels = function(x) {str_wrap(x, width = 65)}) +\n  labs(fill = \"-log10 (PValue)\", y = \"Term\", x = \"Count\") +\n  coord_flip() +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 渐变柱状图\n\n\n\n\n\n如图示，蓝色为低pvalue颜色，红色为高pvalue颜色，随着pvalue增大颜色由蓝向红渐变。横坐标表示基因数目。",
    "crumbs": [
      "HIPLOT",
      "Barplot Gradient"
    ]
  },
  {
    "objectID": "Hiplot/041-deviation-plot.html",
    "href": "Hiplot/041-deviation-plot.html",
    "title": "偏差图",
    "section": "",
    "text": "偏差图可以直观地展示出数据之间的差异。",
    "crumbs": [
      "HIPLOT",
      "Deviation Plot"
    ]
  },
  {
    "objectID": "Hiplot/041-deviation-plot.html#环境配置",
    "href": "Hiplot/041-deviation-plot.html#环境配置",
    "title": "偏差图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpubr\n\n\n# 安装包\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n# 加载包\nlibrary(ggpubr)",
    "crumbs": [
      "HIPLOT",
      "Deviation Plot"
    ]
  },
  {
    "objectID": "Hiplot/041-deviation-plot.html#数据准备",
    "href": "Hiplot/041-deviation-plot.html#数据准备",
    "title": "偏差图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/041-deviation-plot-data.txt\", header = T)\n\n# 整理数据格式\ndata[[\"z_score\"]] &lt;- (data[[\"mpg\"]] - mean(data[[\"mpg\"]])) / sd(data[[\"mpg\"]])\ndata[[\"Group\"]] &lt;- factor(ifelse(data[[\"z_score\"]] &lt; 0, \"low\", \"high\"),\n                          levels = c(\"low\", \"high\")\n                          )\n\n# 查看数据\nhead(data)\n\n   mpg cyl disp  hp drat    wt  qsec vs am gear carb              name\n1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4         Mazda RX4\n2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4     Mazda RX4 Wag\n3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1        Datsun 710\n4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1    Hornet 4 Drive\n5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 Hornet Sportabout\n6 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1           Valiant\n     z_score Group\n1  0.1508848  high\n2  0.1508848  high\n3  0.4495434  high\n4  0.2172534  high\n5 -0.2307345   low\n6 -0.3302874   low",
    "crumbs": [
      "HIPLOT",
      "Deviation Plot"
    ]
  },
  {
    "objectID": "Hiplot/041-deviation-plot.html#可视化",
    "href": "Hiplot/041-deviation-plot.html#可视化",
    "title": "偏差图",
    "section": "可视化",
    "text": "可视化\n\n# 偏差图\np &lt;- ggbarplot(data,\n    x = \"name\",\n    y = \"z_score\",\n    fill = \"Group\",\n    color = \"white\",\n    sort.val = \"desc\",\n    sort.by.groups = FALSE,\n    x.text.angle = 90,\n    xlab = \"name\",\n    ylab = \"mpg\",\n    rotate = TRUE\n  ) +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\")) +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 偏差图",
    "crumbs": [
      "HIPLOT",
      "Deviation Plot"
    ]
  },
  {
    "objectID": "Hiplot/052-extended-scatter.html",
    "href": "Hiplot/052-extended-scatter.html",
    "title": "扩展散点图",
    "section": "",
    "text": "在散点图的基础上拓展边缘图像。",
    "crumbs": [
      "HIPLOT",
      "Extended Scatter"
    ]
  },
  {
    "objectID": "Hiplot/052-extended-scatter.html#环境配置",
    "href": "Hiplot/052-extended-scatter.html#环境配置",
    "title": "扩展散点图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggExtra\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggExtra\", quietly = TRUE)) {\n  install.packages(\"ggExtra\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggExtra)",
    "crumbs": [
      "HIPLOT",
      "Extended Scatter"
    ]
  },
  {
    "objectID": "Hiplot/052-extended-scatter.html#数据准备",
    "href": "Hiplot/052-extended-scatter.html#数据准备",
    "title": "扩展散点图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/052-extended-scatter-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n   mpg cyl disp  hp drat    wt  qsec vs am gear carb\n1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n6 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1",
    "crumbs": [
      "HIPLOT",
      "Extended Scatter"
    ]
  },
  {
    "objectID": "Hiplot/052-extended-scatter.html#可视化",
    "href": "Hiplot/052-extended-scatter.html#可视化",
    "title": "扩展散点图",
    "section": "可视化",
    "text": "可视化\n\n# 比例韦恩图\np &lt;- ggplot(data, aes(x = wt, y = mpg, color = cyl, size = cyl)) +\n  geom_point() +\n  geom_rug(alpha = 0.2, size = 1.5, col = \"#4f80b3\") +\n  theme(legend.position = \"none\")\n\np &lt;- ggMarginal(\n  p, type = \"densigram\", fill = \"#7054cc\", color = \"#7f0080\",\n  size = 4, bins = 30)\n\np\n\n\n\n\n\n\n\n图 1: 比例韦恩图",
    "crumbs": [
      "HIPLOT",
      "Extended Scatter"
    ]
  },
  {
    "objectID": "Hiplot/062-gene-trend.html",
    "href": "Hiplot/062-gene-trend.html",
    "title": "基因聚类趋势图",
    "section": "",
    "text": "基因聚类趋势图用于显示不同的基因表达趋势，多条线显示了每个类群中相似的表达模式。",
    "crumbs": [
      "HIPLOT",
      "Gene Cluster Trend"
    ]
  },
  {
    "objectID": "Hiplot/062-gene-trend.html#环境配置",
    "href": "Hiplot/062-gene-trend.html#环境配置",
    "title": "基因聚类趋势图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: Mfuzz; ggplotify; RColorBrewer\n\n\n# 安装包\nif (!requireNamespace(\"Mfuzz\", quietly = TRUE)) {\n  install_github(\"MatthiasFutschik/Mfuzz\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\nif (!requireNamespace(\"RColorBrewer\", quietly = TRUE)) {\n  install.packages(\"RColorBrewer\")\n}\n\n# 加载包\nlibrary(Mfuzz)\nlibrary(ggplotify)\nlibrary(RColorBrewer)",
    "crumbs": [
      "HIPLOT",
      "Gene Cluster Trend"
    ]
  },
  {
    "objectID": "Hiplot/062-gene-trend.html#数据准备",
    "href": "Hiplot/062-gene-trend.html#数据准备",
    "title": "基因聚类趋势图",
    "section": "数据准备",
    "text": "数据准备\n加载的数据是行为基因列为时间点样本的基因表达矩阵。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/062-gene-trend-data.txt\", header = T)\n\n# 整理数据格式\n## 将基因表达矩阵转换为 ExpressionSet 对象\nrow.names(data) &lt;- data[,1]\ndata &lt;- data[,-1]\ndata &lt;- as.matrix(data)\neset &lt;- new(\"ExpressionSet\", exprs = data)\n## 过滤缺失值超过 25% 的基因\neset &lt;- filter.NA(eset, thres=0.25)\n\n0 genes excluded.\n\n## 根据标准差去除样本间差异太小的基因\neset &lt;- filter.std(eset, min.std=0, visu = F)\n\n0 genes excluded.\n\n## 数据标准化\neset &lt;- standardise(eset)\n## 设定聚类数目\nc &lt;- 6\n## 评估出最佳的m值\nm &lt;- mestimate(eset)\n## 进行mfuzz聚类\ncl &lt;- mfuzz(eset, c = c, m = m)\n\n# 查看数据\nhead(data)\n\n           Time1      Time2       Time3\nGene1  0.1774993  1.6563226 -1.15259948\nGene2 -0.5037254 -0.5207024  0.46416071\nGene3  0.1050310  0.6079246  0.72893247\nGene4 -1.1791537  0.4340085  0.41061745\nGene5  0.8368975 -0.7047414 -1.46114720\nGene6  0.2611762  0.1351524 -0.01890809",
    "crumbs": [
      "HIPLOT",
      "Gene Cluster Trend"
    ]
  },
  {
    "objectID": "Hiplot/062-gene-trend.html#可视化",
    "href": "Hiplot/062-gene-trend.html#可视化",
    "title": "基因聚类趋势图",
    "section": "可视化",
    "text": "可视化\n\n# 基因聚类趋势图\np &lt;- as.ggplot(function(){\n  mfuzz.plot2(\n  eset,\n  cl,\n  xlab = \"Time\",\n  ylab = \"Expression changes\",\n  mfrow = c(2,(c/2+0.5)),\n  colo = \"fancy\",\n  centre = T,\n  centre.col = \"red\",\n  time.labels = colnames(eset),\n  x11=F)\n  })\n\np\n\n\n\n\n\n\n\n图 1: 基因聚类趋势图\n\n\n\n\n\n如示例图所示，将基因聚集到不同的组中，每个组在不同时间点上显示出相似的表达模式。每个类群中突出显示了平均表达趋势。",
    "crumbs": [
      "HIPLOT",
      "Gene Cluster Trend"
    ]
  },
  {
    "objectID": "Hiplot/028-contour-xy.html",
    "href": "Hiplot/028-contour-xy.html",
    "title": "等高线图 (XY)",
    "section": "",
    "text": "等高线图 (XY) 是一种通过等高线反映数据密集程度的数据处理方式。",
    "crumbs": [
      "HIPLOT",
      "Contour (XY)"
    ]
  },
  {
    "objectID": "Hiplot/028-contour-xy.html#环境配置",
    "href": "Hiplot/028-contour-xy.html#环境配置",
    "title": "等高线图 (XY)",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; ggisoband\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggisoband\", quietly = TRUE)) {\n  install.packages(\"ggisoband\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(ggisoband)",
    "crumbs": [
      "HIPLOT",
      "Contour (XY)"
    ]
  },
  {
    "objectID": "Hiplot/028-contour-xy.html#数据准备",
    "href": "Hiplot/028-contour-xy.html#数据准备",
    "title": "等高线图 (XY)",
    "section": "数据准备",
    "text": "数据准备\n载入数据为两个变量。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/028-contour-xy-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"xvalue\", \"yvalue\")\n\n# 查看数据\nhead(data)\n\n  xvalue yvalue\n1  2.620    110\n2  2.875    110\n3  2.320     93\n4  3.215    110\n5  3.440    175\n6  3.460    105",
    "crumbs": [
      "HIPLOT",
      "Contour (XY)"
    ]
  },
  {
    "objectID": "Hiplot/028-contour-xy.html#可视化",
    "href": "Hiplot/028-contour-xy.html#可视化",
    "title": "等高线图 (XY)",
    "section": "可视化",
    "text": "可视化\n\n# 等高线图 (XY)\np &lt;- ggplot(data, aes(xvalue, yvalue)) +\n  geom_density_bands(\n    alpha = 1,\n    aes(fill = stat(density)), color = \"gray40\", size = 0.2\n    ) +\n  geom_point(alpha = 1, shape = 21, fill = \"white\") +\n  scale_fill_viridis_c(guide = \"legend\") +\n  ylab(\"value2\") +\n  xlab(\"value1\") +\n  ggtitle(\"Contour-XY Plot\") +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 等高线图 (XY)\n\n\n\n\n\n正如地理上的等高线代表不同高度一样，等高线图上的不同等高线代表不同密度，越靠中心，等高线圈越小，代表其区域数据密度程度越高。如：黄色区域数据密集程度最高，而蓝色区域数据密集程度最低。",
    "crumbs": [
      "HIPLOT",
      "Contour (XY)"
    ]
  },
  {
    "objectID": "Hiplot/085-half-violin.html",
    "href": "Hiplot/085-half-violin.html",
    "title": "半小提琴图",
    "section": "",
    "text": "半小提琴图是在保留小提琴图右半部分图形的基础上，将左侧部分换成数据频次计数图形，也是用于显示数据分布及概率密度的统计图表。",
    "crumbs": [
      "HIPLOT",
      "Half Violin"
    ]
  },
  {
    "objectID": "Hiplot/085-half-violin.html#环境配置",
    "href": "Hiplot/085-half-violin.html#环境配置",
    "title": "半小提琴图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2; dplyr; ggpubr; ggthemes\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\nif (!requireNamespace(\"ggthemes\", quietly = TRUE)) {\n  install.packages(\"ggthemes\")\n}\n\n# 加载包\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggpubr)\nlibrary(ggthemes)",
    "crumbs": [
      "HIPLOT",
      "Half Violin"
    ]
  },
  {
    "objectID": "Hiplot/085-half-violin.html#数据准备",
    "href": "Hiplot/085-half-violin.html#数据准备",
    "title": "半小提琴图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为载入数据为数据集 (不同肿瘤中基因名称及表达水平)。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/085-half-violin-data.txt\", header = T)\n\n# 整理数据格式\ncolnames(data) &lt;- c(\"Value\", \"Group\")\ndata[, 2] &lt;- factor(data[, 2], levels = unique(data[, 2]))\n\n# 查看数据\nhead(data)\n\n     Value Group\n1 12.10228   AML\n2 12.61382   AML\n3 12.52741   AML\n4 12.67990   AML\n5 12.64837   AML\n6 12.12146   AML",
    "crumbs": [
      "HIPLOT",
      "Half Violin"
    ]
  },
  {
    "objectID": "Hiplot/085-half-violin.html#可视化",
    "href": "Hiplot/085-half-violin.html#可视化",
    "title": "半小提琴图",
    "section": "可视化",
    "text": "可视化\n\n# 半小提琴图\ngeom_flat_violin &lt;- function(\n  mapping = NULL, data = NULL, stat = \"ydensity\", position = \"dodge\", \n  trim = TRUE, scale = \"area\", show.legend = NA, inherit.aes = TRUE, ...) {\n  ggplot2::layer(data = data, mapping = mapping, stat = stat, \n                 geom = geom_flat_violin_proto, position = position,\n                 show.legend = show.legend, inherit.aes = inherit.aes,\n                 params = list(trim = trim, scale = scale, ...))\n}\n\n\"%||%\" &lt;- function(a, b) {\n  if (!is.null(a)) {\n    a\n  } else {\n    b\n  }\n}\n\ngeom_flat_violin_proto &lt;-\n  ggproto(\"geom_flat_violin_proto\", Geom,\n          setup_data = function(data, params) {\n            data$width &lt;- data$width %||%\n              params$width %||% (resolution(data$x, FALSE) * 0.9)\n            \n            data %&gt;%\n              dplyr::group_by(.data = ., group) %&gt;%\n              dplyr::mutate(.data = ., ymin = min(y), ymax = max(y), xmin = x,\n                            xmax = x + width / 2)\n          },\n          \n          draw_group = function(data, panel_scales, coord) {\n            data &lt;- base::transform(data, xminv = x, \n                                    xmaxv = x + violinwidth * (xmax - x))\n            \n            newdata &lt;- base::rbind(\n              dplyr::arrange(.data = base::transform(data, x = xminv), y),\n              dplyr::arrange(.data = base::transform(data, x = xmaxv), -y))\n            \n            newdata &lt;- rbind(newdata, newdata[1, ])\n            \n            ggplot2:::ggname(\"geom_flat_violin\",\n                             GeomPolygon$draw_panel(newdata, panel_scales, coord))\n          },\n          \n          draw_key = draw_key_polygon,\n          \n          default_aes = ggplot2::aes(weight = 1, colour = \"grey20\", fill = \"white\",\n                                     size = 0.5, alpha = NA, linetype = \"solid\"),\n          required_aes = c(\"x\", \"y\")\n        )\n\np &lt;- ggplot(data = data, aes(Group, Value, fill = Group)) +\n  geom_flat_violin(alpha = 1, scale = \"count\", trim = FALSE) +\n  geom_boxplot(width = 0.05, fill = \"white\", alpha = 1, \n               outlier.colour = NA, position = position_nudge(0.05)) +\n  stat_summary(fun = mean, geom = \"point\", fill = \"white\", shape = 21, size = 2,\n               position = position_nudge(0.05)) +\n  geom_dotplot(alpha = 1, binaxis = \"y\", dotsize = 0.5, stackdir = \"down\", \n               binwidth = 0.1, position = position_nudge(-0.025)) +\n  theme(legend.position = \"none\") +\n  xlab(colnames(data)[2]) +\n  ylab(colnames(data)[1]) +\n  guides(fill = F) +\n  ggtitle(\"Half Violin Plot\") +\n  scale_fill_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_stata() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 半小提琴图\n\n\n\n\n\n半小提琴图可以反映数据分布，同箱形图类似，方框中黑色横线显示各肿瘤中基因表达水平的中位数， 白色方框中上下框边代表数据集中的上，下四分位点；左半面可观测数值点的分布状况；小提琴图还可以反映数据密度，数据集数据越集中则图形越胖。图示中 BLGG 组中的基因表达分布更集中，BIC 组次之，AML 组则分布最分散。",
    "crumbs": [
      "HIPLOT",
      "Half Violin"
    ]
  },
  {
    "objectID": "Hiplot/057-funnel-plot-metafor.html",
    "href": "Hiplot/057-funnel-plot-metafor.html",
    "title": "漏斗图 (metafor)",
    "section": "",
    "text": "可以用于分析 Meta 分析结果中潜在偏倚因子。",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot (metafor)"
    ]
  },
  {
    "objectID": "Hiplot/057-funnel-plot-metafor.html#环境配置",
    "href": "Hiplot/057-funnel-plot-metafor.html#环境配置",
    "title": "漏斗图 (metafor)",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: metafor; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"metafor\", quietly = TRUE)) {\n  install.packages(\"metafor\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(metafor)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot (metafor)"
    ]
  },
  {
    "objectID": "Hiplot/057-funnel-plot-metafor.html#数据准备",
    "href": "Hiplot/057-funnel-plot-metafor.html#数据准备",
    "title": "漏斗图 (metafor)",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/057-funnel-plot-metafor-data.txt\", header = T)\n\n# 整理数据格式\ndata2 &lt;- escalc(ri=ri, ni=ni, data = data, measure=\"ZCOR\")\nres &lt;- rma(yi, vi, data = data2)\n\n# 查看数据\nhead(data2)\n\n\n              authors year  ni    ri controls          design   a_measure \n1     Axelsson et al. 2009 109 0.187     none cross-sectional self-report \n2     Axelsson et al. 2011 749 0.162     none cross-sectional self-report \n3        Bruce et al. 2010  55 0.340     none     prospective       other \n4  Christensen et al. 1999 107 0.320     none cross-sectional self-report \n5 Christensen & Smith 1995  72 0.270     none     prospective       other \n6        Cohen et al. 2004  65 0.000     none     prospective       other \n  c_measure meanage quality     yi     vi \n1     other   22.00       1 0.1892 0.0094 \n2       NEO   53.59       1 0.1634 0.0013 \n3       NEO   43.36       2 0.3541 0.0192 \n4     other   41.70       1 0.3316 0.0096 \n5       NEO   46.39       2 0.2769 0.0145 \n6       NEO   41.20       2 0.0000 0.0161",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot (metafor)"
    ]
  },
  {
    "objectID": "Hiplot/057-funnel-plot-metafor.html#可视化",
    "href": "Hiplot/057-funnel-plot-metafor.html#可视化",
    "title": "漏斗图 (metafor)",
    "section": "可视化",
    "text": "可视化\n\n# 漏斗图\np &lt;- as.ggplot(function(){\n  funnel(x = res, main = \"Funnel Plot (metafor)\",\n         level = c(90, 95, 99), shade = c(\"white\",\"#a90e07\",\"#d23e0b\"), refline = 0)\n  })\n\np\n\n\n\n\n\n\n\n图 1: 漏斗图",
    "crumbs": [
      "HIPLOT",
      "Funnel Plot (metafor)"
    ]
  },
  {
    "objectID": "Hiplot/047-dual-y-axis.html",
    "href": "Hiplot/047-dual-y-axis.html",
    "title": "双Y轴图",
    "section": "",
    "text": "双Y轴图可以将两组数量级较大的数据放在同一个图中进行展示。",
    "crumbs": [
      "HIPLOT",
      "Dual Y Axis Chart"
    ]
  },
  {
    "objectID": "Hiplot/047-dual-y-axis.html#环境配置",
    "href": "Hiplot/047-dual-y-axis.html#环境配置",
    "title": "双Y轴图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Dual Y Axis Chart"
    ]
  },
  {
    "objectID": "Hiplot/047-dual-y-axis.html#数据准备",
    "href": "Hiplot/047-dual-y-axis.html#数据准备",
    "title": "双Y轴图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为分为三列，第一列是x轴的数值，第二列为左侧Y轴的数值，第三列为右侧Y轴的数值。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/047-dual-y-axis-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  x     data1     data2\n1 1 0.6105444 1000.5383\n2 2 0.9961953  981.0398\n3 3 0.6314076  961.0601\n4 4 0.8651855  941.2540\n5 5 0.8169382  922.3971\n6 6 0.1877025  903.3067",
    "crumbs": [
      "HIPLOT",
      "Dual Y Axis Chart"
    ]
  },
  {
    "objectID": "Hiplot/047-dual-y-axis.html#可视化",
    "href": "Hiplot/047-dual-y-axis.html#可视化",
    "title": "双Y轴图",
    "section": "可视化",
    "text": "可视化\n\n# 双Y轴图\np &lt;- ggplot(data, aes(x = x)) +\n  geom_line(aes(y = data[, 2]), size = 1, color = \"#D72C15\") +\n  geom_line(aes(y = data[, 3] / as.numeric(10)), size = 1, color = \"#02657B\") +\n  scale_y_continuous(\n    name = colnames(data)[2],\n    sec.axis = sec_axis(~ . * as.numeric(10), name = colnames(data)[3])) +\n  ggtitle(\"Dual Y Axis Chart\") + xlab(\"x\") +\n  theme_bw() +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\n\np\n\n\n\n\n\n\n\n图 1: 双Y轴图\n\n\n\n\n\n案例数据中左侧Y轴比例尺量级在0-100的范围，而右侧Y轴比例尺则在0-1000。",
    "crumbs": [
      "HIPLOT",
      "Dual Y Axis Chart"
    ]
  },
  {
    "objectID": "Hiplot/081-group-bubble.html",
    "href": "Hiplot/081-group-bubble.html",
    "title": "分组气泡图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Group Bubble"
    ]
  },
  {
    "objectID": "Hiplot/081-group-bubble.html#环境配置",
    "href": "Hiplot/081-group-bubble.html#环境配置",
    "title": "分组气泡图",
    "section": "",
    "text": "系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggplot2\n\n\n# 安装包\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\n\n# 加载包\nlibrary(ggplot2)",
    "crumbs": [
      "HIPLOT",
      "Group Bubble"
    ]
  },
  {
    "objectID": "Hiplot/081-group-bubble.html#数据准备",
    "href": "Hiplot/081-group-bubble.html#数据准备",
    "title": "分组气泡图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/081-group-bubble-data.txt\", header = T)\n\n# 查看数据\nhead(data)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa",
    "crumbs": [
      "HIPLOT",
      "Group Bubble"
    ]
  },
  {
    "objectID": "Hiplot/081-group-bubble.html#可视化",
    "href": "Hiplot/081-group-bubble.html#可视化",
    "title": "分组气泡图",
    "section": "可视化",
    "text": "可视化\n\n# 分组气泡图\np &lt;- ggplot(data = data, aes(x = Sepal.Length, y = Sepal.Width, \n                             size = Petal.Width, color = Species)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(1, 4)) +\n  scale_color_manual(values = c(\"#e04d39\",\"#5bbad6\",\"#1e9f86\")) +\n  theme_bw()\n\np\n\n\n\n\n\n\n\n图 1: 分组气泡图",
    "crumbs": [
      "HIPLOT",
      "Group Bubble"
    ]
  },
  {
    "objectID": "Hiplot/030-cor-heatmap.html",
    "href": "Hiplot/030-cor-heatmap.html",
    "title": "相关性热图",
    "section": "",
    "text": "相关性热图是一种分析多个变量，两两之间相关性的图形。",
    "crumbs": [
      "HIPLOT",
      "Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/030-cor-heatmap.html#环境配置",
    "href": "Hiplot/030-cor-heatmap.html#环境配置",
    "title": "相关性热图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggcorrplot\n\n\n# 安装包\nif (!requireNamespace(\"ggcorrplot\", quietly = TRUE)) {\n  install.packages(\"ggcorrplot\")\n}\n\n# 加载包\nlibrary(ggcorrplot)",
    "crumbs": [
      "HIPLOT",
      "Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/030-cor-heatmap.html#数据准备",
    "href": "Hiplot/030-cor-heatmap.html#数据准备",
    "title": "相关性热图",
    "section": "数据准备",
    "text": "数据准备\n载入数据为基因名称及每个样本的表达量。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/030-cor-heatmap-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[!is.na(data[, 1]), ]\nidx &lt;- duplicated(data[, 1])\ndata[idx, 1] &lt;- paste0(data[idx, 1], \"--dup-\", cumsum(idx)[idx])\nrownames(data) &lt;- data[, 1]\ndata &lt;- data[, -1]\nstr2num_df &lt;- function(x) {\n  final &lt;- NULL\n  for (i in seq_len(ncol(x))) {\n    final &lt;- cbind(final, as.numeric(x[, i]))\n  }\n  colnames(final) &lt;- colnames(x)\n  return(final)\n}\ntmp &lt;- str2num_df(t(data))\ncorr &lt;- round(cor(tmp, use = \"na.or.complete\", method = \"pearson\"), 3)\np_mat &lt;- round(cor_pmat(tmp, method = \"pearson\"), 3)\n\n# 查看数据\nhead(data)\n\n             M1       M2       M3       M4       M5       M6        M7       M8\nRGL4   8.454808 8.019389 8.990836 9.718631 7.908075 4.147051  4.985084 4.576711\nMPP7   8.690520 8.630346 7.080873 9.838476 8.271824 5.179200  5.200868 3.266993\nUGCG   8.648366 8.600555 9.431046 7.923021 8.309214 4.902510  5.750804 4.492856\nCYSTM1 8.628884 9.238677 8.487243 8.958537 7.357109 4.541605  6.370533 4.246651\nANXA2  4.983769 6.748022 6.220791 4.719403 3.284346 8.089850 10.637472 7.214912\nENDOD1 5.551640 5.406465 4.663785 3.550765 4.103507 8.393991  9.538503 9.069923\n             M9      M10\nRGL4   4.930349 4.293700\nMPP7   5.565226 4.300309\nUGCG   4.659987 3.306275\nCYSTM1 4.745769 3.449627\nANXA2  9.002710 5.123359\nENDOD1 8.639664 7.106392",
    "crumbs": [
      "HIPLOT",
      "Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/030-cor-heatmap.html#可视化",
    "href": "Hiplot/030-cor-heatmap.html#可视化",
    "title": "相关性热图",
    "section": "可视化",
    "text": "可视化\n\n# 相关性热图\np &lt;- ggcorrplot(\n  corr,\n  colors = c(\"#4477AA\", \"#FFFFFF\", \"#BB4444\"),\n  method = \"circle\",\n  hc.order = T,\n  hc.method = \"ward.D2\",\n  outline.col = \"white\",\n  ggtheme = theme_bw(),\n  type = \"upper\",\n  lab = F,\n  lab_size = 3,\n  legend.title = \"Correlation\"\n  ) +\n  ggtitle(\"Cor Heatmap Plot\") +\n  theme(text = element_text(family = \"Arial\"),\n        plot.title = element_text(size = 12,hjust = 0.5),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        legend.position = \"right\",\n        legend.direction = \"vertical\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 10))\np\n\n\n\n\n\n\n\n图 1: 相关性热图\n\n\n\n\n\n红色系表示两个基因之间呈正相关，蓝色系表示两个基因之间呈负相关，每一格中的数字表示相关系数。",
    "crumbs": [
      "HIPLOT",
      "Correlation Heatmap"
    ]
  },
  {
    "objectID": "Hiplot/037-dendrogram.html",
    "href": "Hiplot/037-dendrogram.html",
    "title": "系统树图",
    "section": "",
    "text": "系统树图是一种以树的形状表示的图。这种图表在不同情景有不同的含义。如：在层次聚类中，说明了相应分析产生的聚类的排列。在生物信息中，它显示基因或样本的聚集，有时在热图的边缘。",
    "crumbs": [
      "HIPLOT",
      "Dendrogram"
    ]
  },
  {
    "objectID": "Hiplot/037-dendrogram.html#环境配置",
    "href": "Hiplot/037-dendrogram.html#环境配置",
    "title": "系统树图",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ape; ggplotify\n\n\n# 安装包\nif (!requireNamespace(\"ape\", quietly = TRUE)) {\n  install.packages(\"ape\")\n}\nif (!requireNamespace(\"ggplotify\", quietly = TRUE)) {\n  install.packages(\"ggplotify\")\n}\n\n# 加载包\nlibrary(ape)\nlibrary(ggplotify)",
    "crumbs": [
      "HIPLOT",
      "Dendrogram"
    ]
  },
  {
    "objectID": "Hiplot/037-dendrogram.html#数据准备",
    "href": "Hiplot/037-dendrogram.html#数据准备",
    "title": "系统树图",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/037-dendrogram-data.txt\", header = T)\n\n# 整理数据格式\ndata &lt;- data[, -1]\n\n# 查看数据\nhead(data)\n\n        M1       M2        M3       M4       M5       M6       M7       M8\n1 6.599344 5.226266  3.693288 3.938501 4.527193 9.308119 8.987865 7.658312\n2 5.760380 4.892783  5.448924 3.485413 3.855669 8.662081 8.793320 8.765915\n3 9.561905 4.549168  3.998655 5.614384 3.904793 9.790770 7.133188 7.379591\n4 8.396409 8.717055  8.039064 7.643060 9.274649 4.417013 4.725270 3.542217\n5 8.419766 8.268430  8.451181 9.200732 8.598207 4.590033 5.368268 4.136667\n6 7.653074 5.780393 10.633550 5.913684 8.805605 5.890120 5.527945 3.822596\n        M9      M10\n1 8.666038 7.419708\n2 8.097206 8.262942\n3 7.938063 6.154118\n4 4.305187 6.964710\n5 4.910986 4.080363\n6 4.041078 7.956589",
    "crumbs": [
      "HIPLOT",
      "Dendrogram"
    ]
  },
  {
    "objectID": "Hiplot/037-dendrogram.html#可视化",
    "href": "Hiplot/037-dendrogram.html#可视化",
    "title": "系统树图",
    "section": "可视化",
    "text": "可视化\n\n# 系统树图\nd &lt;- dist(t(data), method = \"euclidean\")\nhc &lt;- hclust(d, method = \"complete\")\nclus &lt;- cutree(hc, 4)\n\np &lt;- as.ggplot(function() {\n  par(mar = c(5, 5, 10, 5), mgp = c(2.5, 1, 0))\n  plot(as.phylo(hc),\n       type = \"phylogram\",\n       tip.color = c(\"#00468bff\",\"#ed0000ff\",\"#42b540ff\",\"#0099b4ff\")[clus], \n       label.offset = 1,\n       cex = 1, font = 2, use.edge.length = T\n       )\n  title(\"Dendrogram Plot\", line = 1)\n  })\n\np\n\n\n\n\n\n\n\n图 1: D3 词云",
    "crumbs": [
      "HIPLOT",
      "Dendrogram"
    ]
  },
  {
    "objectID": "Hiplot/050-easy-som.html",
    "href": "Hiplot/050-easy-som.html",
    "title": "简易 SOM",
    "section": "",
    "text": "建立 SOM 模型，并可视化结果。",
    "crumbs": [
      "HIPLOT",
      "Easy SOM"
    ]
  },
  {
    "objectID": "Hiplot/050-easy-som.html#环境配置",
    "href": "Hiplot/050-easy-som.html#环境配置",
    "title": "简易 SOM",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: GGally\n\n\n# 安装包\nif (!requireNamespace(\"kohonen\", quietly = TRUE)) {\n  install.packages(\"kohonen\")\n}\n\n# 加载包\nlibrary(kohonen)",
    "crumbs": [
      "HIPLOT",
      "Easy SOM"
    ]
  },
  {
    "objectID": "Hiplot/050-easy-som.html#数据准备",
    "href": "Hiplot/050-easy-som.html#数据准备",
    "title": "简易 SOM",
    "section": "数据准备",
    "text": "数据准备\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/050-easy-som-data.txt\", header = T)\n\n# 整理数据格式\ntarget &lt;- data[,1]\ntarget &lt;- factor(target, levels = unique(target))\ndata &lt;- data[,-1]\ndata &lt;- as.data.frame(data)\nfor (i in 1:ncol(data)) {\n  data[,i] &lt;- as.numeric(data[,i])\n}\ndata &lt;- as.matrix(data)\nset.seed(7)\nkohmap &lt;- xyf(scale(data), target, grid = somgrid(xdim=6, ydim=4, topo=\"hexagonal\"), rlen=100)\n\ncolor_key &lt;- c(\"#A50026\",\"#D73027\",\"#F46D43\",\"#FDAE61\",\"#FEE090\",\"#FFFFBF\",\"#E0F3F8\",\n               \"#ABD9E9\",\"#74ADD1\",\"#4575B4\",\"#313695\")\ncolors &lt;- function (n, alpha, rev = FALSE) {\n  colorRampPalette(color_key)(n)\n}\n\n# 查看数据\nhead(data)\n\n     alcohol malic.acid  ash ash.alkalinity magnesium tot..phenols flavonoids\n[1,]   12.86       1.35 2.32           18.0       122         1.51       1.25\n[2,]   12.88       2.99 2.40           20.0       104         1.30       1.22\n[3,]   12.81       2.31 2.40           24.0        98         1.15       1.09\n[4,]   12.70       3.55 2.36           21.5       106         1.70       1.20\n[5,]   12.51       1.24 2.25           17.5        85         2.00       0.58\n[6,]   12.60       2.46 2.20           18.5        94         1.62       0.66\n     non.flav..phenols proanth col..int. col..hue OD.ratio proline\n[1,]              0.21    0.94      4.10     0.76     1.29     630\n[2,]              0.24    0.83      5.40     0.74     1.42     530\n[3,]              0.27    0.83      5.70     0.66     1.36     560\n[4,]              0.17    0.84      5.00     0.78     1.29     600\n[5,]              0.60    1.25      5.45     0.75     1.51     650\n[6,]              0.63    0.94      7.10     0.73     1.58     695",
    "crumbs": [
      "HIPLOT",
      "Easy SOM"
    ]
  },
  {
    "objectID": "Hiplot/050-easy-som.html#可视化",
    "href": "Hiplot/050-easy-som.html#可视化",
    "title": "简易 SOM",
    "section": "可视化",
    "text": "可视化\n\n# 简易 SOM\np &lt;- function () {\n  par(mfrow = c(3,2))\n  xyfpredictions &lt;- classmat2classvec(getCodes(kohmap, 2))\n  plot(kohmap, type=\"counts\", col = as.integer(target),\n       palette.name = colors,\n       pchs = as.integer(target), \n       main = \"Counts plot\", shape = \"straight\", border = NA)\n  \n  som.hc &lt;- cutree(hclust(object.distances(kohmap, \"codes\")), 3)\n  add.cluster.boundaries(kohmap, som.hc)\n\n  plot(kohmap, type=\"mapping\",\n       labels = as.integer(target), col = colors(3)[as.integer(target)],\n       palette.name = colors,\n       shape = \"straight\",\n       main = \"Mapping plot\")\n\n  ## 根据预测的类别标签为单元添加背景颜色\n  xyfpredictions &lt;- classmat2classvec(getCodes(kohmap, 2))\n  bgcols &lt;- colors(3)\n  plot(kohmap, type=\"mapping\", col = as.integer(target),\n       pchs = as.integer(target), bgcol = bgcols[as.integer(xyfpredictions)],\n       main = \"Another mapping plot\", shape = \"straight\", border = NA)\n  \n  similarities &lt;- plot(kohmap, type=\"quality\", shape = \"straight\",\n                       palette.name = colors)\n  \n  plot(kohmap, type=\"codes\", shape = \"straight\", \n       main = c(\"Codes X\", \"Codes Y\"), palette.name = colors)\n}\n\np()\n\n\n\n\n\n\n\n图 1: 简易 SOM",
    "crumbs": [
      "HIPLOT",
      "Easy SOM"
    ]
  },
  {
    "objectID": "Hiplot/068-ggpie.html",
    "href": "Hiplot/068-ggpie.html",
    "title": "饼状图（GGPIE）",
    "section": "",
    "text": "饼图是通过将一个圆形切分成多个切片以显示每一部分所占总体比例的统计图表。",
    "crumbs": [
      "HIPLOT",
      "GGPIE"
    ]
  },
  {
    "objectID": "Hiplot/068-ggpie.html#环境配置",
    "href": "Hiplot/068-ggpie.html#环境配置",
    "title": "饼状图（GGPIE）",
    "section": "环境配置",
    "text": "环境配置\n\n系统: Cross-platform (Linux/MacOS/Windows)\n编程语言: R\n依赖包: ggpie; dplyr; ggplot2; cowplot\n\n\n# 安装包\nif (!requireNamespace(\"ggpie\", quietly = TRUE)) {\n  install.packages(\"ggpie\")\n}\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\n\n# 加载包\nlibrary(ggpie)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "HIPLOT",
      "GGPIE"
    ]
  },
  {
    "objectID": "Hiplot/068-ggpie.html#数据准备",
    "href": "Hiplot/068-ggpie.html#数据准备",
    "title": "饼状图（GGPIE）",
    "section": "数据准备",
    "text": "数据准备\n载入数据为不同分组及其数据。\n\n# 加载数据\ndata &lt;- read.delim(\"files/Hiplot/068-ggpie-data.txt\", header = T)\n\n# 整理数据格式\naxis &lt;- c(\"am\", \"cyl\")\ndata[, axis[1]] &lt;- factor(data[, axis[1]], levels = unique(data[, axis[1]]))\ndata[, axis[2]] &lt;- factor(data[, axis[2]], levels = unique(data[, axis[2]]))\n\n# 查看数据\nhead(data)\n\n   mpg cyl disp  hp drat    wt  qsec vs am gear carb\n1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n6 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1",
    "crumbs": [
      "HIPLOT",
      "GGPIE"
    ]
  },
  {
    "objectID": "Hiplot/068-ggpie.html#可视化",
    "href": "Hiplot/068-ggpie.html#可视化",
    "title": "饼状图（GGPIE）",
    "section": "可视化",
    "text": "可视化\n\n# 饼状图\nplist &lt;- list()\nfor (j in unique(data[, axis[2]])) {\n  plist[[j]] &lt;- ggpie(\n    data = data[data[, axis[2]] == j,],\n    group_key = axis[1], count_type = \"full\",\n    label_type = \"horizon\", label_size = 8,\n    label_info = \"all\", label_pos = \"out\") + \n    scale_fill_manual(values = c(\"#00468BFF\",\"#ED0000FF\")) +\n    ggtitle(j)\n  }\n\nplot_grid(plotlist = plist, ncol = 3)\n\n\n\n\n\n\n\n图 1: 饼状图\n\n\n\n\n\n在一个圆图中，每个切片的弧长（其中心角和中心角所对应区域的弧长）与所表示的数量成正比。该饼图展示了 1~4 组分别的样本数量及样本数量所对应的占比。一组样本数量 13，占比 11.71%，二组样本数量 34，占比 30.63%，三组样本数量 21，占比 18.92%，四组样本数量 43，占比38.74%。",
    "crumbs": [
      "HIPLOT",
      "GGPIE"
    ]
  },
  {
    "objectID": "GraphGallery.html",
    "href": "GraphGallery.html",
    "title": "Graph Gallery",
    "section": "",
    "text": "👋 Bizard 是一个为生物医学研究量身定制的高级可视化代码综合存储库。\n该工具包包括各种各样的图表选项，从变化分布到交互式可视化，系统组织以满足生物医学数据分析的独特需求。建立在强大的基础上，每个示例都包含可重复的 R 代码，详细注释和现实世界数据集，以确保可访问性和实际应用。\n借助初学者和经验丰富的研究人员的资源，Bizard 使用户能够创建直观，科学严格且视觉上令人信服的输出，从而在生物医学领域中推进数据可视化标准。",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "GraphGallery.html#under-construction-demo-only",
    "href": "GraphGallery.html#under-construction-demo-only",
    "title": "Graph Gallery",
    "section": "UNDER CONSTRUCTION [DEMO ONLY]",
    "text": "UNDER CONSTRUCTION [DEMO ONLY]",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "GraphGallery.html#distribution-gallery",
    "href": "GraphGallery.html#distribution-gallery",
    "title": "Graph Gallery",
    "section": "Distribution Gallery",
    "text": "Distribution Gallery",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "GraphGallery.html#correlation-gallery",
    "href": "GraphGallery.html#correlation-gallery",
    "title": "Graph Gallery",
    "section": "Correlation Gallery",
    "text": "Correlation Gallery\n\n\n\nCorrelation DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "GraphGallery.html#ranking-gallery",
    "href": "GraphGallery.html#ranking-gallery",
    "title": "Graph Gallery",
    "section": "Ranking Gallery",
    "text": "Ranking Gallery\n\n\n\nRanking DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "GraphGallery.html#others",
    "href": "GraphGallery.html#others",
    "title": "Graph Gallery",
    "section": "Others",
    "text": "Others",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html",
    "href": "Ranking/UpsetPlot.html",
    "title": "Upset图",
    "section": "",
    "text": "Upset 图与 Venn 图类似，主要展示不同集合交叉点中的元素数量，然而当 Venn 图中集合达到 5 个时可读性开始急剧下降，Upset 图则可以很好的解决 Venn 图可读性差的问题，并且还能提供元素属性的附加统计信息。",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#示例",
    "href": "Ranking/UpsetPlot.html#示例",
    "title": "Upset图",
    "section": "示例",
    "text": "示例\n\n\n\n\n\n此图为 Upset 图的基本样式，图像分为三部分，分别是上方的不同集合之间交集的元素数量发直方图，左侧为不同集合包含元素数量的直方图。中间的矩阵部分则是集合之间的交集情况，如下图所示：\n\n\n\n\n\n当一个交集的元素存在于某集合时使用黑点标记，否则使用白点标记，例如绿色部分仅在 B 集合处标记为黑色则表明该列为仅在 B 中存在的元素，以此类推。",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#环境配置",
    "href": "Ranking/UpsetPlot.html#环境配置",
    "title": "Upset图",
    "section": "环境配置",
    "text": "环境配置\n\n系统要求： 跨平台（Linux/MacOS/Windows）\n编程语言：R\n依赖包：UpSetR; ggupset\n\n\n# 安装包\nif (!requireNamespace(\"UpSetR\", quietly = TRUE)) {\n  install.packages(\"UpSetR\")\n}\nif (!requireNamespace(\"ggupset\", quietly = TRUE)) {\n  install.packages(\"ggupset\")\n}\n\n# 加载包\nlibrary(UpSetR)\nlibrary(ggupset)",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#数据准备",
    "href": "Ranking/UpsetPlot.html#数据准备",
    "title": "Upset图",
    "section": "数据准备",
    "text": "数据准备\n\nmovies 数据集由 GroupLens 实验室和 Bilal Alsallakh 创建；mutations 数据集最初由 TCGA 联盟创建，表示 284 个多形性胶质母细胞瘤中 100 个常见基因突变的突变情况。\n两个数据集均被包含至 UpSetR 包中\n\n\n# UpSetR 可以接受三种格式的数据，第一种是具有命名向量的list(见listInput变量)，第二种是表达式向量(见expressionInput变量)，第三种是0,1构成的数据框(见movies和mutations变量)\n# 读取 CSV 数据\n# list格式需要对list中的每个向量为一个集合，UpSetR要求对每个集合进行命名，向量中的元素为对应集合的成员。使用upset函数绘图时需要使用fromList函数对list数据进行格式转化。\nlistInput &lt;- list(one = c(1, 2, 3, 5, 7, 8, 11, 12, 13), two = c(1, 2, 4, 5, 10), three = c(1, 5, 6, 7, 8, 9, 10, 12, 13))\n#expression格式则接受一个类表达式的向量。表达式向量的元素是一个交集中集合的名称（以&分隔），以及该交集中的数字元素。使用upset函数绘图时需要使用fromExpression函数对list数据进行格式转化。\nexpressionInput &lt;- c(one = 2, two = 1, three = 2, `one&two` = 1, `one&three` = 4, `two&three` = 1, `one&two&three` = 2)\n\n# 数据框格式每列为一个集合，每行为一个元素。要求数据框由0 1组成，分别表示元素是否存在于集合，当列存在非01的值时，该列被认为是元素的属性。\nmovies &lt;- read.csv( system.file(\"extdata\", \"movies.csv\", package = \"UpSetR\"), header=T, sep=\";\" )\nmutations &lt;- read.csv( system.file(\"extdata\", \"mutations.csv\", package = \"UpSetR\"), header=T, sep = \",\")",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#可视化",
    "href": "Ranking/UpsetPlot.html#可视化",
    "title": "Upset图",
    "section": "可视化",
    "text": "可视化\n\n1. 基础 Upset 图\n此基础 Upset 图展示了包含不同元素的电影数量。\n\n# 使用上面三种数据类型绘制 Upset 图\nupset(fromList(listInput))\nupset(fromExpression(expressionInput))\nupset(movies)\n\n\n\n\n\n\n\n图 1: 基础 Upset 图\n\n\n\n\n\n\n\n\n\n\n\n图 2: 基础 Upset 图\n\n\n\n\n\n\n\n\n\n\n\n图 3: 基础 Upset 图\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: nsets\nnsets 参数决定了使用多少个集合绘制 UpSet 图，未设置时默认为 5。\n\n\n\n# 设置 nset 为 6，使用 mutations 数据集\nupset(mutations, nsets = 6)\n\n\n\n\n\n\n\n图 4: 关键参数: nsets\n\n\n\n\n\n此图使用了突变次数最多的 6 个基因，展示了包含不同突变的多形性胶质母细胞瘤数量。\n\n\n\n\n\n\n提示\n\n\n\n关键参数: order.by\norder.by 参数决定了 UpSet 图中交集的排列顺序，未设置时根据取交集的集合数量从小到大排列，设置为 “degree” 时根据交集的元素数量从大到小排列，设置为 “freq” 时根据交集的大小从大到小排列。\n\n\n\n# order.by不同的三种设置方式，使用mutations数据集\nupset(mutations)\nupset(mutations, order.by = \"degree\")\nupset(mutations, order.by = \"freq\")\n\n\n\n\n\n\n\n图 5: 关键参数: order.by\n\n\n\n\n\n\n\n\n\n\n\n图 6: 关键参数: order.by\n\n\n\n\n\n\n\n\n\n\n\n图 7: 关键参数: order.by\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: sets\nsets 参数可以指定需要绘制的集合，未设置时取元素最多的 nsets 个集合，另外 keep.order 参数可以使集合柱状图的顺序与 sets 输入的顺序保持一致。\n\n\n\n# 指定\"TTN\",\"NF1\",\"FLG\",\"KEL\"四个基因为目标集合，并使集合柱状图顺序与sets参数一致保持\nupset(mutations, sets = c(\"TTN\",\"NF1\",\"FLG\",\"KEL\"), keep.order = T)\n\n\n\n\n\n\n\n图 8: 关键参数: sets\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: empty.intersections\nempty.intersections 参数默认设置为 “NULL”，此时不显示空交集，当设置为任意参数时会显示空交集。\n\n\n\n#显示空交集\nupset(mutations, sets = c(\"TTN\",\"NF1\",\"FLG\",\"KEL\"), keep.order = T, empty.intersections=T)\n\n\n\n\n\n\n\n图 9: 关键参数: empty.intersections\n\n\n\n\n\n\n\n\n\n\n\n提示\n\n\n\n关键参数: decreasing\ndecreasing 参数设置则可以调转 order.by 或 keep.order 的方向，有多个排序方向需要控制时，输入含有多个元素的向量，如”c(T,F)”\n\n\n\n# 调换排序方向\nupset(mutations, sets = c(\"TTN\",\"NF1\",\"FLG\",\"KEL\"), keep.order = T, decreasing = c(T, T))\n\n\n\n\n\n\n\n图 10: 关键参数: decreasing\n\n\n\n\n\n\n\n2. 个性化 Upset 图\n图像比例方面，mb.ratio 参数默认为 “c(0.7, 0.3)”，可以指定交集柱状图与交集矩阵点图之间的比例大小，需要输入一个含有两个元素的向量，分别表示柱状图与矩阵点图的高度占全图的高度比例。\n\nupset(mutations, mb.ratio=c(0.5,0.5))\n\n\n\n\n\n\n\n图 11: 关键参数: mb.ratio\n\n\n\n\n\n图像颜色方面，UpSetR 包提供了多个参数可以设置 Upset 图中不同部分的颜色：\n\nupset(mutations,\n      shade.color = \"#4C4C4C\", # 交集矩阵点图阴影的颜色\n      matrix.color = \"#067522\", # 矩阵中点和线的颜色\n      main.bar.color = \"#3E7B92\", # 交集元素数量柱状图的颜色\n      sets.bar.color = \"#C9AE42\" # 集合数量柱状图的颜色\n)\n\n\n\n\n\n\n\n图 12: Upset图颜色设置\n\n\n\n\n\n如果想要突出某些交集，则需要使用到 UpSetR 包提供的 queries 参数，queries 参数需要输入一个列表 list，这个 list 中至少包含一个子 list，每个子 list 中需要包含以下字段：query、params、color、active 和 query.name。\n\nquery 可输入 intersects 或 elements，效果都一样\nparams 指定一个子集，输入同样为一个 list，list 中的元素可为集合的名称，多个元素表示取这些元素的交集。\ncolor 是将在 plot 上表示的颜色。如果没有提供颜色，将从 UpSetR 默认调色板中选择一种颜色。\nactive 决定查询将如何在图上表示。如果 active 为 TRUE，则交叉大小条将被表示查询的条覆盖。如果 active 为 FALSE，一个抖动点将被放置在相交的大小条上。\nquery.name 为当前突出集合的名称，需要用 query.legend 参数指定图例位置，query.legend 可以输入”top”或”bottom”\n\n\nupset(mutations, sets = c(\"TTN\",\"NF1\",\"FLG\",\"KEL\"), keep.order = T,\n      query.legend = \"top\", \n      queries = list(list(query = intersects, params = list(\"TTN\"), active = T, query.name = \"NAME\"),\n                     list(query = elements, params = list(\"TTN\",\"NF1\"))))\n\n\n\n\n\n\n\n图 13: 关键参数: queries\n\n\n\n\n\n图像标签与字体方面，同样有多个参数可以调整：\n\nupset(mutations,\n      number.angles = 30, # 交集柱状图上方的数字倾斜角度\n      point.size = 2, # 矩阵中点的大小\n      line.size = 1, # 矩阵中线的大小\n      sets.x.label = \"NAME1\", # 集合柱状图的轴标签\n      mainbar.y.label = \"NAME2\", # 交集柱状图的轴标签\n      text.scale = c(1.3, 1.3, 1, 1, 1.2,1)) # 文本大小设置，分别对应交集柱状图的轴标签，分别对应交集柱状图的数字，集合柱状图的轴标签，集合柱状图的数字，集合的名字，交集柱状图上方的数字\n\n\n\n\n\n\n\n图 14: Upset图像标签与字体\n\n\n\n\n\n\n\n3. 进阶 Upset 图\n有时候还需要展示集合中元素的某些属性，如展示 1995 年上市的电影在不同交集中的分布。同样需要用到 queries 参数，在 params 字段中输入一个记录不同电影上市年份信息的列名 与 1995，即可高亮显示对应 1995 年上市电影的分布情况。\n\nupset(movies, sets = c(\"Action\", \"Adventure\", \"Children\", \"War\", \"Noir\"),\n      queries = list(list(query = elements, params = list(\"ReleaseDate\",1995), active = T)))\n\n\n\n\n\n\n\n图 15: params 字段\n\n\n\n\n\n如果是复合条件，例如仅高亮 1995 年上市的动作电影，可以额外引入 expression 参数用于对查询条件进行进一步限制。\n\nupset(movies, sets = c(\"Action\", \"Adventure\", \"Children\", \"War\", \"Noir\"),\n      queries = list(list(query = intersects, params = list(\"Action\"), active = T)),\n      expression = \"ReleaseDate == 1995\")\n\n\n\n\n\n\n\n图 16: 关键参数: expression\n\n\n\n\n\n上述方法仅限于离散型变量，然而元素的属性还可能包括连续性变量，对于连续性变量推荐自定义函数进行查询，以下代码可以用于高亮 Watches 属性大于 100 的元素：\n\nMyfunc &lt;- function(row, num) {\n  data &lt;- row[\"Watches\"] &gt; num\n}\nupset(movies, sets = c(\"Action\", \"Adventure\", \"Children\", \"War\", \"Noir\"),\n      queries = list(list(query = Myfunc, params = list(100), active = T)))\n\n\n\n\n\n\n\n图 17: Upset图连续变量\n\n\n\n\n\nUpsetR 还支持同时绘制其他类型的图像包括直方图、散点图、密度图。前二者需要使用 attribute.plots 参数绘制，箱线图需要使用 boxplot.summary 参数绘制，箱线图与其他三种图像不能兼容。 attribute.plots 包含以下子参数：\n\ngridrows：指定扩展绘图窗口的范围以留出属性图（attribute plots）的空间。UpSetR 绘图基于 100x100 的网格布局。例如，若将 gridrows 设为 50，新的网格布局将变为 150x100，其中 1/3 的区域用于放置属性图。\nplots：接收一个参数 list，包括 plot、x、y（若适用）和 queries。\n\nplot：是一个返回 ggplot 对象的函数，可输入histogram或scatter_plot。\nx：定义 ggplot 中使用的 x 轴美学映射（以字符串形式输入）。\ny：定义 ggplot 中使用的 y 轴美学映射（以字符串形式输入）。\nqueries：控制是否在属性图上叠加查询结果。若为 TRUE，属性图会叠加查询数据；若为 FALSE，则不在属性图中显示查询结果。\n\nncols：指定属性图在 gridrows 预留空间中的排列方式。例如：\n\n若输入两个属性图且 ncols=1，则两图上下排列。\n若输入两个属性图且 ncols=2，则两图并排显示。\n\n\n\nupset(movies, sets = c(\"Action\", \"Adventure\", \"Children\", \"War\", \"Noir\"),\n      queries = list(list(query = intersects, params = list(\"War\"), active = T),\n                     list(query = elements, params = list(\"Noir\"))),\n      attribute.plots=list(gridrows = 100, \n                           ncols = 1,\n                           plots = list(list(plot=histogram, \n                                             x=\"AvgRating\",\n                                             queries=T),\n                                        list(plot = scatter_plot, \n                                             y = \"AvgRating\", \n                                             x = \"Watches\",\n                                             queries = T)\n                                        )\n                           )\n      )\n\n\n\n\n\n\n\n图 18: 关键参数: attribute.plots\n\n\n\n\n\nboxplot.summary 相对简单，只需要指定元素属于对应的列名即可：\n\nupset(movies, sets = c(\"Action\", \"Adventure\", \"Children\", \"War\", \"Noir\"),\n      queries = list(list(query = intersects, params = list(\"War\"), active = T),\n                     list(query = elements, params = list(\"Noir\"))),\n      boxplot.summary = c(\"AvgRating\", \"ReleaseDate\"))\n\n\n\n\n\n\n\n图 19: 关键参数: boxplot.summary\n\n\n\n\n\n\n\n4. 生物数据示例\n数据集采用 ggupset 包中的 df_complex_conditions 数据集\n\n# 整理格式\ndf &lt;- df_complex_conditions\ndf$\"T8\" &lt;- ifelse(df$Timepoint==8,1,0)\ndf$\"T24\" &lt;- ifelse(df$Timepoint==24,1,0)\ndf$\"T48\" &lt;- ifelse(df$Timepoint==48,1,0)\ndf$KO &lt;- ifelse(df$KO==\"TRUE\",1,0)\ndf$DrugA &lt;- ifelse(df$DrugA==\"Yes\",1,0)\n# 需要注意的是UpSetR包不支持tibble数据框，需要转化为传统的dataframe\ndf &lt;- data.frame(df[sample(360,180),c(3,4,1,2,5:7)])  # 这里为了美观随机挑选一半的数据\n\n# upset绘图\nupset(df,\n      queries = list(list(query = intersects, params = list(\"DrugA\",\"T48\"), active = T)),\n      boxplot.summary = c(\"response\"))\n\n\n\n\n\n\n\n图 20: 关键参数: boxplot.summary\n\n\n\n\n\n此图展示了敲除体 KO 与 WT(KO行为白点) 在施加或不施加药物(DrugA)处理在不同时间后生物体的响应情况。",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#应用场景",
    "href": "Ranking/UpsetPlot.html#应用场景",
    "title": "Upset图",
    "section": "应用场景",
    "text": "应用场景\n\n\n\n\n\n\n图 21: Upset 图应用\n\n\n\n该图展示了人群中患不同疾病的统计情况以及他们的生存时间。 [1]",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  },
  {
    "objectID": "Ranking/UpsetPlot.html#参考文献",
    "href": "Ranking/UpsetPlot.html#参考文献",
    "title": "Upset图",
    "section": "参考文献",
    "text": "参考文献\n[1] Peng X, Hu Y, Cai W. Association between urinary incontinence and mortality risk among US adults: a prospective cohort study. BMC Public Health. 2024 Oct 9;24(1):2753. doi: 10.1186/s12889-024-20091-x. PMID: 39385206; PMCID: PMC11463129.",
    "crumbs": [
      "Ranking",
      "UpsetPlot"
    ]
  }
]