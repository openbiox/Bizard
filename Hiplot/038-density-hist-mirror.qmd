---
title: "Mirror Density & Histogram"
author:
  - "**[Editor]** Hu Zheng;"
  - "**[Contributors]** "
---

The mirror density & histogram is a graph used to observe the distribution of continuous variables in two side view: top and bottom.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `ggplot2`; `ggthemes`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}
if (!requireNamespace("ggthemes", quietly = TRUE)) {
  install.packages("ggthemes")
}

# Load packages
library(ggplot2)
library(ggthemes)
```

## Data Preparation

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- read.delim("files/Hiplot/038-density-hist-mirror-data.txt", header = T)

# convert data structure
sides <- data[1,]
data <- data[-1,]
for (i in 1:ncol(data)) {
  data[,i] <- as.numeric(data[,i])
}

# View data
head(data)
```

## Visualization

### 1. Mirror Density

```{r fig-1Density-mirror}
#| label: fig-1Density-mirror
#| fig-cap: "Mirror Density"
#| out.width: "95%"
#| fig-height: 4
#| fig-width: 6
#| warning: false
#| message: false

# Mirror Density
p <- ggplot(data, aes(x=x))
colrs <- c("#e64b35ff","#4dbbd5ff","#00a087ff","#3c5488ff","#f39b7fff","#8491b4ff")
colrs2 <- colnames(data)
for (i in seq_len(length(sides))) {
  eval(parse(
    text = sprintf("p <- p + geom_density(aes(x = %s, y = %s..density.., color = '%s', fill = '%s'), kernel = '%s')", 
                   colnames(data)[i], ifelse(sides[i] == "top", "", "-"), colnames(data)[i],
                   colnames(data)[i], "gaussian")
    ))
  names(colrs)[i] <- colnames(data)[i]
  names(colrs2)[i] <- colrs[i]
}
p <- p + 
  ggtitle("") +
  scale_fill_manual(values=colrs, name="Densities") +
  scale_color_manual(values=colrs, name="Densities") +
  theme_stata() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))

p
```


### 2. Mirror Histogram

```{r fig-2Hist-mirror}
#| label: fig-2Hist-mirror
#| fig-cap: "Mirror Histogram"
#| out.width: "95%"
#| fig-height: 4
#| fig-width: 6
#| warning: false
#| message: false

# Mirror Histogram
p <- ggplot(data, aes(x=x))
colrs <- c("#e64b35ff","#4dbbd5ff","#00a087ff","#3c5488ff","#f39b7fff","#8491b4ff")
colrs2 <- colnames(data)
for (i in seq_len(length(sides))) {
  eval(parse(
    text = sprintf("p <- p + geom_histogram(aes(x = %s, y = %s..density.., color = '%s', fill = '%s'), bins = %s)", 
                   colnames(data)[i], ifelse(sides[i] == "top", "", "-"),
                   colnames(data)[i], colnames(data)[i], 35)))
  names(colrs)[i] <- colnames(data)[i]
  names(colrs2)[i] <- colrs[i]
}
p <- p + 
  ggtitle("") +
  scale_fill_manual(values=colrs, name="Densities") +
  scale_color_manual(values=colrs, name="Densities") +
  theme_stata() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))

p
```


